<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<IP>
    <About>LWIP: LightWeight TCP/IP</About>
    <AboutCH>LWIP: LightWeight TCP/IP</AboutCH>
    
    <RefParameter Name="LwIP Version" Comment="LwIP Version" CommentCH="LwIP 版本" DefaultValue="2.1.2" Type="string text" Group="LwIP Version" GroupCH="LwIP版本" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <Annotation Note="&lt;font color=&quot;blue&quot;&gt;LwIP version supported by Work Bench is the &lt;b&gt;O&lt;/b&gt;fficial &lt;b&gt;R&lt;/b&gt;elease &lt;b&gt;2.1.2&lt;/b&gt;.&lt;/font&gt;&lt;br&gt;
        	                            MQTT and HOOK configuration is not supported via AT32 Work Bench GUI.&lt;br&gt;
        	                            LwIP stack has an internal parameter defined in init.h providing its version: LWIP_VERSION.&lt;br&gt;
        	                            Here, the LwIP Version is just displayed to highlight the LwIP version supported by Work Bench.&lt;br&gt;
        	                            &lt;b&gt;Warning&lt;/b&gt;: This parameter has been introduced by Work Bench and is not configurable, LWIP_VERSION being already defined in init.h." 
        	  	             NoteCH="&lt;font color=&quot;blue&quot;&gt;Work Bench支持的LwIP版本：官方发布版 &lt;b&gt;2.1.2&lt;/b&gt;.&lt;/font&gt;&lt;br&gt;
        	                            Work Bench不支持MQTT和HOOK的配置。&lt;br&gt;
         	                            &lt;b&gt;注意&lt;/b&gt;：此参数不可配置，LWIP_VERSION已经在init.h中定义"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP" Comment="LWIP_DHCP" CommentCH="LWIP_DHCP" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="1" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <Condition Diagnostic="Use LWIP_DHCP requires both LWIP_UDP and LWIP_IPV4 enabled." 
        	              DiagnosticCH="需要开启LWIP_UDP和LWIP_IPV4"
        	              Expression="LWIP_UDP = 1 &amp; LWIP_IPV4 = 1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, DHCP (Dynamic Host Configuration Protocol) module is enabled." 
        	  	             NoteCH="开启DHCP(Dynamic Host Configuration Protocol)模块"/>
    </RefParameter>
    <RefParameter Name="LWIP_DHCP" Comment="LWIP_DHCP" CommentCH="LWIP_DHCP" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, DHCP (Dynamic Host Configuration Protocol) module is enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_DHCP requires both LWIP_UDP and LWIP_IPV4 enabled." 
        	  	             NoteCH="开启DHCP(Dynamic Host Configuration Protocol)模块.&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;：&lt;br&gt;需要开启LWIP_UDP和LWIP_IPV4"/>
    </RefParameter>
    
    <RefParameter Name="IP_ADDRESS" Comment="IP_ADDRESS" CommentCH="IP_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="000.000.000.000" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="true" Reload="false">
        <Condition Diagnostic="If LWIP_DHCP is disabled, the IP address is mandatory." 
        	              DiagnosticCH="如果LWIP_DHCP关闭, 必须指定IP地址" 
        	              Expression="LWIP_DHCP = 0"/>
    </RefParameter>
    <RefParameter Name="IP_ADDRESS" Comment="IP_ADDRESS" CommentCH="IP_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="0.0.0.0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="false"/>
    
    <RefParameter Name="NETMASK_ADDRESS" Comment="NETMASK_ADDRESS" CommentCH="NETMASK_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="000.000.000.000" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="true" Reload="false">
        <Condition Diagnostic="If LWIP_DHCP is disabled, the IP Netmask is mandatory." 
        	              DiagnosticCH="如果LWIP_DHCP关闭, 必须指定网络掩码地址" 
        	              Expression="LWIP_DHCP = 0"/>
    </RefParameter>
    <RefParameter Name="NETMASK_ADDRESS" Comment="NETMASK_ADDRESS" CommentCH="NETMASK_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="0.0.0.0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="false"/>
    
    <RefParameter Name="GATEWAY_ADDRESS" Comment="GATEWAY_ADDRESS" CommentCH="GATEWAY_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="000.000.000.000" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="true" Reload="false">
        <Condition Diagnostic="If LWIP_DHCP is disabled, the IP Gateway is mandatory." 
        	              DiagnosticCH="如果LWIP_DHCP关闭, 必须指定网关地址" 
        	              Expression="LWIP_DHCP = 0"/>
    </RefParameter>
    <RefParameter Name="GATEWAY_ADDRESS" Comment="GATEWAY_ADDRESS" CommentCH="GATEWAY_ADDRESS" Type="ip address" Group="IP Address Settings" GroupCH="IP地址设置" DefaultValue="0.0.0.0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Visible="false"/>

    <RefParameter Name="WITH_RTOS" Comment="WITH_RTOS" CommentCH="WITH_RTOS" Type="list" Group="RTOS Dependency" GroupCH="RTOS依赖" DefaultValue="1" TabName="General Settings" TabNameCH="通用设置" Mode="Basic"  Reload="false">
        <Condition  Expression="Semaphore_Activated_FREERTOS"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter is enabled as soon as FREERTOS is enabled in MiddleWares tree." 
        	  	             NoteCH="只要中间件中的FREERTOS开启，这个参数将自动被开启。"/>
    </RefParameter>
    <RefParameter Name="WITH_RTOS" Comment="WITH_RTOS" CommentCH="WITH_RTOS" Type="list" Group="RTOS Dependency" GroupCH="RTOS依赖" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter is enabled as soon as FREERTOS is enabled in MiddleWares tree." 
        	  	             NoteCH="只要中间件中的FREERTOS开启，这个参数将自动被开启。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ICMP" Comment="LWIP_ICMP" CommentCH="LWIP_ICMP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="1" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option enables ICMP (Internet Control Message Protocol) module inside the IP stack. Be careful, disable that make your product non-compliant to RFC1122." 
        	  	             NoteCH="开启或关闭IP协议栈内的ICMP模块，请注意，关闭该模块会使您的产品不符合RFC1122标准。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IGMP" Comment="LWIP_IGMP" CommentCH="LWIP_IGMP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <Condition Diagnostic="When MEMP_MEM_MALLOC is disabled, use LWIP_IGMP requires LWIP_MULTICAST_TX_OPTIONS enabled and also MEMP_NUM_IGMP_GROUP&gt;1." 
        	              DiagnosticCH="当MEMP_MEM_MALLOC关闭时, 使用LWIP_IGMP需要LWIP_MULTICAST_TX_OPTIONS开启，并且MEMP_NUM_IGMP_GROUP&gt;1。" 
        	              Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_MULTICAST_TX_OPTIONS=1 &amp; MEMP_NUM_IGMP_GROUP>1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on IGMP (Internet Group Management Protocol) module." 
        	  	             NoteCH="开启或关闭IGMP模块。"/>
    </RefParameter>
    <RefParameter Name="LWIP_IGMP" Comment="LWIP_IGMP" CommentCH="LWIP_IGMP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <Condition Diagnostic="When MEMP_MEM_MALLOC is disabled, use LWIP_IGMP requires LWIP_MULTICAST_TX_OPTIONS enabled and also MEMP_NUM_IGMP_GROUP&gt;1." 
        	              DiagnosticCH="当MEMP_MEM_MALLOC关闭时, 使用LWIP_IGMP需要LWIP_MULTICAST_TX_OPTIONS开启，并且MEMP_NUM_IGMP_GROUP&gt;1。" 
        	              Expression="MEMP_MEM_MALLOC= 1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on IGMP (Internet Group Management Protocol) module." 
        	  	             NoteCH="开启或关闭IGMP模块。"/>
    </RefParameter>
    <RefParameter Name="LWIP_IGMP" Comment="LWIP_IGMP" CommentCH="LWIP_IGMP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, it turns on IGMP (Internet Group Management Protocol) module.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;When MEMP_MEM_MALLOC is disabled, use LWIP_IGMP requires LWIP_MULTICAST_TX_OPTIONS enabled and also MEMP_NUM_IGMP_GROUP&gt;1." 
        	  	            NoteCH="开启或关闭IGMP模块。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭时, 使用LWIP_IGMP需要LWIP_MULTICAST_TX_OPTIONS开启，并且MEMP_NUM_IGMP_GROUP&gt;1。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS" Comment="LWIP_DNS" CommentCH="LWIP_DNS" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <Condition Diagnostic="Use LWIP_DNS requires LWIP_UDP enabled." 
        	              DiagnosticCH="需要LWIP_UDP开启。" 
        	              Expression="LWIP_UDP = 1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on DNS (Domain Name Server) module. UDP must be available for DNS transport." 
        	  	             NoteCH="开启或关闭DNS模块。要进行DNS传输，必须启用UDP。"/>
    </RefParameter>
    <RefParameter Name="LWIP_DNS" Comment="LWIP_DNS" CommentCH="LWIP_DNS" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="0" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, it turns on DNS (Domain Name Server) module. UDP must be available for DNS transport.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;Use LWIP_DNS requires LWIP_UDP enabled." 
        	  	             NoteCH="开启或关闭DNS模块。要进行DNS传输，必须启用UDP。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;需要LWIP_UDP开启。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_UDP" Comment="LWIP_UDP" CommentCH="LWIP_UDP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="1" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on UDP (User Datagram Protocol)." 
        	  	             NoteCH="开启或关闭UDP。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_UDP_PCB" Comment="MEMP_NUM_UDP_PCB" Type="integer" Group="Protocols Options" GroupCH="协议选项" DefaultValue="4" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Min="1" Max="2147483647" >
        <Condition Expression="LWIP_UDP = 1 &amp; MEMP_MEM_MALLOC = 0"/>
        <Annotation Note="Number of UDP protocol control blocks. One per active UDP connection (requires the LWIP_UDP option enabled).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_UDP_PCB requires MEMP_MEM_MALLOC disabled and LWIP_UDP enabled, it is mandatory to have MEMP_NUM_UDP_PCB&gt;0." 
        	  	             NoteCH="UDP协议控制块的数量，每个活跃的UDP连接对应一个控制块。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭，并且LWIP_UDP开启时, MEMP_NUM_UDP_PCB必须大于0."/>
    </RefParameter>    
    <RefParameter Name="MEMP_NUM_UDP_PCB" Comment="MEMP_NUM_UDP_PCB" Type="integer" Group="Protocols Options" GroupCH="协议选项" DefaultValue="4" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Min="0" Max="2147483647" >
        <Annotation Note="Number of UDP protocol control blocks. One per active UDP connection (requires the LWIP_UDP option enabled).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_UDP_PCB requires MEMP_MEM_MALLOC disabled and LWIP_UDP enabled, it is mandatory to have MEMP_NUM_UDP_PCB&gt;0." 
        	  	             NoteCH="UDP协议控制块的数量，每个活跃的UDP连接对应一个控制块。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭，并且LWIP_UDP开启时, MEMP_NUM_UDP_PCB必须大于0."/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP" Comment="LWIP_TCP" CommentCH="LWIP_TCP" Type="list" Group="Protocols Options" GroupCH="协议选项" DefaultValue="1" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on TCP." 
        	  	             NoteCH="开启或关闭TCP。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_TCP_PCB" Comment="MEMP_NUM_TCP_PCB" CommentCH="MEMP_NUM_TCP_PCB" Type="integer" Group="Protocols Options" GroupCH="协议选项" DefaultValue="5" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Min="1" Max="2147483647" >
        <Condition Expression="LWIP_TCP = 1 &amp; MEMP_MEM_MALLOC = 0"/>
        <Annotation Note="Number of simultatenously active TCP connections (requires the LWIP_TCP option enabled).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;Use MEMP_NUM_TCP_PCB requires MEMP_MEM_MALLOC disabled and LWIP_TCP enabled, it is mandatory to have MEMP_NUM_TCP_PCB&gt;0." 
        	  	             NoteCH="同时活跃的TCP连接数量（需要开启LWIP_TCP）。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭，并且LWIP_TCP开启时, MEMP_NUM_TCP_PCB必须大于0."/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_TCP_PCB" Comment="MEMP_NUM_TCP_PCB" CommentCH="MEMP_NUM_TCP_PCB" Type="integer" Group="Protocols Options" GroupCH="协议选项" DefaultValue="5" TabName="General Settings" TabNameCH="通用设置" Mode="Basic" Min="0" Max="2147483647" >
        <Annotation Note="Number of simultatenously active TCP connections (requires the LWIP_TCP option enabled).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;Use MEMP_NUM_TCP_PCB requires MEMP_MEM_MALLOC disabled and LWIP_TCP enabled, it is mandatory to have MEMP_NUM_TCP_PCB&gt;0." 
        	  	             NoteCH="同时活跃的TCP连接数量（需要开启LWIP_TCP）。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭，并且LWIP_TCP开启时, MEMP_NUM_TCP_PCB必须大于0."/>
    </RefParameter>
    
   
    <!-- *************************** Infrastructure - OS Awarness Option ******************************-->
    <RefParameter Name="NO_SYS" Comment="NO_SYS" CommentCH="NO_SYS" Type="list" Group="Infrastructure - OS Awarness Option" GroupCH="基础配置 - OS选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="true">
        <Condition Diagnostic="Forced to Used by activating FREERTOS middleware. To set Not Used, unset FREERTOS middleware." 
        	              DiagnosticCH="FREERTOS启用时设置为使用OS， FREERTOS未启用时设置为未使用OS" 
        	              Expression="Semaphore_Activated_FREERTOS"/>
        <PossibleValue Comment="OS Used" CommentCH="使用OS" Value="0"/>
        <Annotation Note="When OS Used, lwIP is used with selected Operating System (FreeRTOS) and its related thread, semaphores, mutexes or mboxes. This means threaded APIs are used (socket, netconn, i.e. everything in the 'api' folder)." 
        	  	             NoteCH="使用OS时，lwIP与选定的操作系统（FREERTOS）配合使用，同时也会使用该操作系统相关的线程、信号量、互斥锁或消息邮箱。这意味着基于线程的 API 可以被使用（例如套接字、网络连接相关的 API，也就是 “api” 文件夹中的所有内容）。"/>
    </RefParameter>
    <RefParameter Name="NO_SYS" Comment="NO_SYS" CommentCH="NO_SYS" Type="list" Group="Infrastructure - OS Awarness Option" GroupCH="基础配置 - OS选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="true">
        <PossibleValue Comment="OS Not Used" CommentCH="未使用OS" Value="1"/>
        <Annotation Note="When OS Not Used, lwIP is used without Operating System (no thread, semaphores, mutexes or mboxes). This means threaded APIs cannot be used (socket, netconn, i.e. everything in the 'api' folder), only the callback-style raw API is available (and you have to watch out for yourself that you don't access lwIP functions/structures from more than one context at a time!)." 
        	  	             NoteCH="未使用OS时，在不依赖操作系统（即不使用线程、信号量、互斥锁或消息邮箱）的情况下使用 lwIP。这意味着基于线程的 API 无法使用（例如套接字、网络连接相关的 API，也就是 “api” 文件夹中的所有内容），仅回调风格的原始 API 可用（而且你必须自行留意，不能同时从多个上下文访问 lwIP 的函数或数据结构！）"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Timers Options ******************************-->
    <RefParameter Name="LWIP_TIMERS" Comment="LWIP_TIMERS" CommentCH="LWIP_TIMERS" Type="list" Group="Infrastructure - Timers Options" GroupCH="基础配置 - 定时器选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="true">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use support for sys_timeout and lwip-internal cyclic timers (the array of lwip-internal cyclic timers is still provided, check NO_SYS_NO_TIMERS for compatibility to old versions).&lt;br&gt;
        	                            Disable this parameter to drop support for sys_timeout and lwip-internal cyclic timers (the array of lwip-internal cyclic timers is still provided, check NO_SYS_NO_TIMERS for compatibility to old versions)." 
        	  	             NoteCH="开启此参数时，支持sys_timeout和lwIP内部循环定时器（仍然会提供lwIP内部循环定时器数组，可查看NO_SYS_NO_TIMERS以确保与旧版本兼容性）&lt;br&gt;
        	  	                             关闭此参数时，取消支持sys_timeout和lwIP内部循环定时器（仍然会提供lwIP内部循环定时器数组，可查看NO_SYS_NO_TIMERS以确保与旧版本兼容性）"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TIMERS_CUSTOM" Comment="LWIP_TIMERS_CUSTOM" CommentCH="LWIP_TIMERS_CUSTOM" Type="list" Group="Infrastructure - Timers Options" GroupCH="基础配置 - 定时器选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to provide your own timer implementation.&lt;br&gt;Function prototypes in timeouts.h and the array of lwip-internal cyclic timers are still included, but the implementation is not. The following functions will be required: sys_timeouts_init(), sys_timeout(), sys_untimeout(), sys_timeouts_mbox_fetch()." 
        	  	             NoteCH="开启此参数时，自行提供定时器的实现。&lt;br&gt;timeouts.h 中的函数原型以及 lwIP 内部循环定时器数组仍然会被包含，但具体的实现部分则没有。需要实现以下函数：sys_timeouts_init()、sys_timeout()、sys_untimeout()、sys_timeouts_mbox_fetch()"/>
    </RefParameter>

    <!-- *************************** Infrastructure - Memory Copy Options ******************************-->
    <RefParameter Name="MEMCPY(dst,src,len)" Comment="MEMCPY(dst,src,len)" CommentCH="MEMCPY(dst,src,len)" Type="string edit" Group="Infrastructure - Memory Copy Options" GroupCH="基础配置 - 内存复制选项" DefaultValue="memcpy(dst,src,len)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <Annotation Note="This parameter allows to replace the default implementation included in C library by a faster user function." 
        	  	             NoteCH="如果有比包含的C库中现有实现更快的方案，可对其进行重写"/>
    </RefParameter>
    
    <RefParameter Name="SMEMCPY(dst,src,len)" Comment="SMEMCPY(dst,src,len)" CommentCH="SMEMCPY(dst,src,len)" Type="string edit" Group="Infrastructure - Memory Copy Options" GroupCH="基础配置 - 内存复制选项" DefaultValue="memcpy(dst,src,len)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <Annotation Note="This parameter allows to replace the default implementation by a user hand made. Some compilers (e.g. gcc) can inline a call to memcpy() if the length is known at compile time and is small." 
        	  	             NoteCH="此参数允许用户通过手动方式替换默认实现。请谨慎替换此实现，某些编译器（例如 GCC）在编译时若已知复制长度且该长度较小时，能够对 memcpy() 调用进行内联优化"/>
    </RefParameter>
    
    <RefParameter Name="MEMMOVE(dst,src,len)" Comment="MEMMOVE(dst,src,len)" CommentCH="MEMMOVE(dst,src,len)" Type="string edit" Group="Infrastructure - Memory Copy Options" GroupCH="基础配置 - 内存复制选项" DefaultValue="memmove(dst,src,len)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Annotation Note="This parameter allows to replace the default implementation by a user hand made. Override this if you have a faster implementation at hand than the one included in your C library. lwIP currently uses MEMMOVE only when IPv6 fragmentation support is enabled." 
        	  	             NoteCH="此参数允许用户通过手动方式替换默认实现。如果你手头有比 C 库中现有实现更快的方法，就重写这个功能。目前，lwIP仅在启用 IPv6 分片支持时才会使用 memmove 函数。"/>
    </RefParameter>
    
   <RefParameter Name="LWIP_PBUF_REF_T" Comment="LWIP_PBUF_REF_T" CommentCH="LWIP_PBUF_REF_T" Type="string edit" Group="Infrastructure - Memory Copy Options" GroupCH="基础配置 - 内存复制选项" DefaultValue="u8_t" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <Annotation Note="Refcount type in pbuf. Default width of u8_t can be increased if 255 refs are not enough for you." 
        	  	             NoteCH="pbuf 中的引用计数类型。如果 255 次引用对你来说不够用，那么可以增大默认的 u8_t 宽度。"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Core Locking and MPU Options ******************************-->
    <RefParameter Name="LWIP_MPU_COMPATIBLE" Comment="LWIP_MPU_COMPATIBLE" CommentCH="LWIP_MPU_COMPATIBLE" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to enable special memory management mechanism which makes lwip able to work on MPU (Memory Protection Unit) system by not passing stack-pointers to other threads&lt;br&gt;(this decreases performance as memory is allocated from pools instead of keeping it on the stack)." 
        	  	             NoteCH="此参数可启用一种特殊的内存管理机制，该机制使得 lwIP能够在内存保护单元（MPU）系统上运行。其原理是不将栈指针传递给其他线程&lt;br&gt;（这样做会降低性能，因为内存是从内存池中分配的，而非直接使用栈内存）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCPIP_CORE_LOCKING" Comment="LWIP_TCPIP_CORE_LOCKING" CommentCH="LWIP_TCPIP_CORE_LOCKING" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this option to create a global mutex that is held during TCPIP thread operations.&lt;br&gt;It can be locked by client code to perform lwIP operations without changing into TCPIP thread using callbacks. See LOCK_TCPIP_CORE() and UNLOCK_TCPIP_CORE().&lt;br&gt;Your system should provide mutexes supporting priority inversion to use this." 
        	  	             NoteCH="开启此参数，创建一个全局互斥锁，该互斥锁会在 TCP/IP 线程操作期间被持有。&lt;br&gt;客户端代码可以对其进行锁定，从而在不借助回调函数切换到 TCP/IP 线程的情况下执行 lwIP 操作。具体可参考 LOCK_TCPIP_CORE() 和 UNLOCK_TCPIP_CORE() 函数。&lt;br&gt;若要使用此功能，你的系统应提供支持优先级反转的互斥锁。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCPIP_CORE_LOCKING_INPUT" Comment="LWIP_TCPIP_CORE_LOCKING_INPUT" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_TCPIP_CORE_LOCKING_INPUT requires LWIP_TCPIP_CORE_LOCKING." 
        	              DiagnosticCH="需要开启 LWIP_TCPIP_CORE_LOCKING." 
        	              Expression="LWIP_TCPIP_CORE_LOCKING=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When LWIP_TCPIP_CORE_LOCKING is enabled, this lets tcpip_input() grab the mutex for input packets as well, instead of allocating a message and passing it to tcpip_thread.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: &lt;br&gt;this does not work when tcpip_input() is called from interrupt context!" 
        	  	             NoteCH="当启用 LWIP_TCPIP_CORE_LOCKING 时，这会让 tcpip_input() 函数也为输入数据包获取互斥锁，而不是分配一条消息并将其传递给 tcpip_thread 线程。&lt;br&gt;&lt;b&gt;注意&lt;/b&gt;: &lt;br&gt;当中断上下文调用tcpip_input()函数时，此项无效。"/>
    </RefParameter>    
    <RefParameter Name="LWIP_TCPIP_CORE_LOCKING_INPUT" Comment="LWIP_TCPIP_CORE_LOCKING_INPUT" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When LWIP_TCPIP_CORE_LOCKING is enabled, this lets tcpip_input() grab the mutex for input packets as well, instead of allocating a message and passing it to tcpip_thread.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: &lt;br&gt;this does not work when tcpip_input() is called from interrupt context!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;Use LWIP_TCPIP_CORE_LOCKING_INPUT requires LWIP_TCPIP_CORE_LOCKING." 
        	  	             NoteCH="当启用 LWIP_TCPIP_CORE_LOCKING 时，这会让 tcpip_input() 函数也为输入数据包获取互斥锁，而不是分配一条消息并将其传递给 tcpip_thread 线程。&lt;br&gt;&lt;b&gt;注意&lt;/b&gt;: &lt;br&gt;当中断上下文调用tcpip_input()函数时，此项无效。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;需要开启 LWIP_TCPIP_CORE_LOCKING."/>
    </RefParameter>
    
    <RefParameter Name="SYS_LIGHTWEIGHT_PROT" Comment="SYS_LIGHTWEIGHT_PROT" CommentCH="SYS_LIGHTWEIGHT_PROT" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic"  Reload="false">
        <Condition Diagnostic="SYS_LIGHTWEIGHT_PROT is used for inter task protection which works with an RTOS only when NO_SYS=OS Used." 
        	              DiagnosticCH="SYS_LIGHTWEIGHT_PROT用于任务间保护，只有当（NO_SYS=使用OS）时，它才能与RTOS协同工作。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this option if you want inter-task protection (and task-vs-interrupt protection) for certain critical regions during buffer allocation, deallocation and memory allocation and deallocation.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: &lt;br&gt;This is required when using lwIP from more than one context! If you disable this, you must be sure what you are doing!" 
        	  	             NoteCH="当开启此参数时，在缓冲区分配、释放以及内存分配和释放的某些关键区域启用任务间保护（以及任务与中断之间的保护）。&lt;br&gt;&lt;b&gt;注意事项&lt;/b&gt;：&lt;br&gt;当从多个上下文使用lwIP时，这是必需的！如果你禁用此功能，你必须清楚禁用后所带来的影响"/>
    </RefParameter>
    <RefParameter Name="SYS_LIGHTWEIGHT_PROT" Comment="SYS_LIGHTWEIGHT_PROT" CommentCH="SYS_LIGHTWEIGHT_PROT" Type="list" Group="Infrastructure - Core Locking and MPU Options" GroupCH="基础配置 - 内核锁定和MPU选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This option can be enabled only when NO_SYS=0, if you want inter-task protection (and task-vs-interrupt protection) for certain critical regions during buffer allocation, deallocation and memory allocation and deallocation.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: &lt;br&gt;This is required when using lwIP from more than one context! If you disable this, you must be sure what you are doing!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;This parameter is disable without RTOS (when NO_SYS=1)" 
        	  	             NoteCH="此参数只有在（NO_SYS=使用OS）时才能开启，当开启此参数时，在缓冲区分配、释放以及内存分配和释放的某些关键区域启用任务间保护（以及任务与中断之间的保护）。&lt;br&gt;&lt;b&gt;注意事项&lt;/b&gt;：&lt;br&gt;当从多个上下文使用lwIP时，这是必需的！如果你禁用此功能，你必须清楚禁用后所带来的影响.&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当未使用RTOS（NO_SYS=未使用OS）时，此参数将关闭"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Heap and Memory Pools Options ******************************-->
    <RefParameter Name="MEM_LIBC_MALLOC" Comment="MEM_LIBC_MALLOC" CommentCH="MEM_LIBC_MALLOC" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option can be set with:&lt;br&gt;- Enable: use malloc/free/realloc provided by your C-library instead of the lwip internal allocator. Can save code size if you already use it.&lt;br&gt;- Disable: use LwIP internal allocator library&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If MEM_LIBC_MALLOC=&quot;Enabled&quot;, MEMP_USE_POOLS cannot be enabled. MEM_STATS value setting depends on MEM_LIBC_MALLOC value." 
        	  	             NoteCH="参数可设置&lt;br&gt;：- 开启：使用C库提供的malloc/free/realloc，而不是lwip内部的内存分配（如已使用，可节省代码大小）&lt;br&gt;- 关闭：使用LwIP内部的内存分配库&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: 当MEM_LIBC_MALLOC=&quot;开启&quot;时，无法启用MEMP_USE_POOLS。MEM_STATS值设置取决于MEM_LIBC_MALLOC值。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_MEM_MALLOC" Comment="MEMP_MEM_MALLOC" CommentCH="MEMP_MEM_MALLOC" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option is set as followed:&lt;br&gt;- Enabled: Use User C Pool Alloctor Functions i.e mem_malloc/mem_free instead of the lwip pool allocator, especially useful with MEM_LIBC_MALLOC but handle with care regarding execution speed (heap alloc can be much slower than pool alloc) and usage from interrupts (especially if your netif driver allocates PBUF_POOL pbufs for received frames from interrupt!)&lt;br&gt;- Disabled: Use LwIP Internal Pool Allocator Memory Functions.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Currently, this uses the heap for ALL pools (also for private pools, not only for internal pools defined in memp_std.h)!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: There are several other parameters linked to this one:&lt;br&gt;MEMP_NUM_RAW_PCB, MEMP_NUM_UDP_PCB, MEMP_NUM_TCP_PCB, MEMP_NUM_TCP_SEG, MEMP_NUM_REASSDATA, MEMP_NUM_IGMP_GROUP, MEMP_NUM_SYS_TIMEOUT, MEMP_NUM_NETCONN, MEMP_NUM_TCPIP_MSG_API, ARP_QUEUEING, IP_REASS_MAX_PBUFS, LWIP_RAW, LWIP_IGMP, LWIP_UDP, LWIP_TCP, TCP_WND, TCP_SND_QUEUELEN, LWIP_NETCONN, LWIP_SOCKET.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;:MEMP_MEM_MALLOC and MEM_USE_POOLS may not both be simultaneously enabled" 
        	  	             NoteCH="参数设置如下&lt;br&gt;：- 开启：使用mem_malloc/mem_free 代替lwip 池分配器，与MEM_LIBC_MALLOC搭配使用，但需要注意执行速度（堆分配比内存池分配慢很多）以及中断的使用（特别是netif 驱动为来自中断的接收帧分配 PBUF_POOL pbufs时）&lt;br&gt;- 关闭：使用LwIP内部的内存池分配器内存函数  &lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;目前将堆用于所有池（不仅是memp_std.h中定义的内存池，还包括私有内存池）!&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: 与此参数相关联的其他参数有：&lt;br&gt;MEMP_NUM_RAW_PCB, MEMP_NUM_UDP_PCB, MEMP_NUM_TCP_PCB, MEMP_NUM_TCP_SEG, MEMP_NUM_REASSDATA, MEMP_NUM_IGMP_GROUP, MEMP_NUM_SYS_TIMEOUT, MEMP_NUM_NETCONN, MEMP_NUM_TCPIP_MSG_API, ARP_QUEUEING, IP_REASS_MAX_PBUFS, LWIP_RAW, LWIP_IGMP, LWIP_UDP, LWIP_TCP, TCP_WND, TCP_SND_QUEUELEN, LWIP_NETCONN, LWIP_SOCKET.&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;:MEMP_MEM_MALLOC 和 MEM_USE_POOLS 不能同时启用"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_MEM_INIT" Comment="MEMP_MEM_INIT" CommentCH="MEMP_MEM_INIT" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter should be set to force use of memset to initialize pool memory.&lt;br&gt;Useful if pool are moved in uninitialized section of memory.&lt;br&gt;This will ensure default values in pcbs struct are well initialized in all conditions." 
        	  	             NoteCH="设置此参数使用memset初始化内存池。&lt;br&gt;当内存池被移动到内存的未初始化部分时有用。&lt;br&gt;这将确保pcbs结构体中的默认值正确初始化。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_ALIGNMENT" Comment="MEM_ALIGNMENT" CommentCH="MEM_ALIGNMENT" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="4 byte alignment" CommentCH="4字节对齐" Value="4"/>
        <PossibleValue Comment="2 byte alignment" CommentCH="2字节对齐" Value="2"/>
        <Annotation Note="This parameter should be set to the alignment of the CPU: 4 byte alignment or 2 byte alignment.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT.This parameter should be set to the alignment of the CPU: 4 byte alignment or 2 byte alignment.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT." 
        	  	             NoteCH="此参数应设置为CPU的对齐方式：4字节对齐或2字节对齐。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PBUF_POOL_BUFSIZE 必须大于 MEM_ALIGNMENT。此参数应设置为CPU的对齐方式：4字节对齐或2字节对齐。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PBUF_POOL_BUFSIZE 必须大于 MEM_ALIGNMENT。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_SIZE" Comment="MEM_SIZE" CommentCH="MEM_SIZE" Type="integer" Unit="Byte(s)" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="1600" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647"  Reload="false">
        <Annotation Note="Size of the heap memory. If the application will send a lot of data that needs to be copied, this should be set high." 
        	  	             NoteCH="堆内存大小。如果应用程序将发送大量需要复制的数据，则将此参数设置为较大的值。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_OVERFLOW_CHECK" Comment="MEMP_OVERFLOW_CHECK" Type="Integer" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="The memp overflow protection parameter reserves a configurable amount of bytes before and after each memp element in every pool and fills it with a prominent default value:&lt;br&gt;- MEMP_OVERFLOW_CHECK=0: no checking&lt;br&gt;- MEMP_OVERFLOW_CHECK=1: checks each element when it is freed&lt;br&gt;- MEMP_OVERFLOW_CHECK&gt;1: checks each element in every pool every time memp_malloc() or memp_free() is called (useful but slow!)." 
        	  	             NoteCH="内存池溢出保护参数保留一个可配置的字节数，并在每个memp元素前后填充突出显示默认值：&lt;br&gt;- MEMP_OVERFLOW_CHECK=0：不检查&lt;br&gt;- MEMP_OVERFLOW_CHECK=1：检查每个被释放的元素&lt;br&gt;- MEMP_OVERFLOW_CHECK&gt;1：每次调用memp_malloc() 或memp_free() 时检查每个池中的每个元素（有用但很慢）。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_SANITY_CHECK" Comment="MEMP_SANITY_CHECK" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this option is enabled, sanity check is run after each memp_free() to make sure that there are no cycles in the linked lists." 
        	  	             NoteCH="如果启用了此选项，则在每个memp_free()生成后运行完整性检查，以确保链表中没有循环。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_OVERFLOW_CHECK" Comment="MEM_OVERFLOW_CHECK" Type="Integer" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="The mem overflow protection parameter reserves a configurable amount of bytes before and after each heap allocation chunk and fills it with a prominent default value.&lt;br&gt;- MEMP_OVERFLOW_CHECK=0: no checking&lt;br&gt;- MEMP_OVERFLOW_CHECK=1: checks each element when it is freed&lt;br&gt;- MEMP_OVERFLOW_CHECK&gt;1: checks each element in every pool every time.&lt;br&gt;The function mem_malloc() or mem_free() is called (useful but slow!)." 
        	  	             NoteCH="内存溢出保护参数保留一个可配置的字节数，并在每个堆分配块前后填充突出显示默认值。&lt;br&gt;- MEMP_OVERFLOW_CHECK=0：不检查&lt;br&gt;- MEMP_OVERFLOW_CHECK=1：检查每个被释放的元素 &lt;br&gt;- MEMP_OVERFLOW_CHECK&gt;1：检查每个池中的每个元素。&lt;br&gt;调用 mem_malloc() 或 mem_free() 函数（有用但很慢）。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_SANITY_CHECK" Comment="MEM_SANITY_CHECK" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this option is enabled, sanity check is run after each mem_free() to make sure that the linked list of heap elements is not corrupted." 
        	  	             NoteCH="如果启用了此选项，则在每个each mem_free()生成后运行完整性检查，以确保堆元素的链表没有损坏。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_USE_POOLS" Comment="MEM_USE_POOLS" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use MEM_USE_POOLS requires MEM_LIBC_MALLOC and MEMP_MEM_MALLOC disabled and MEMP_USE_CUSTOM_POOLS=1&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: If you enable both MEMP_USE_CUSTOM_POOLS and MEM_USE_POOLS, you must have lwippools.h in your include path somewhere and you must define your pools within lwippools.h." 
        	              DiagnosticCH="使用MEM_USE_POOLS需要关闭MEM_LIBC_MALLOC和MEMP_MEM_MALLOC且MEMP_USE_CUSTOM_POOLS=1。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;如果开启MEMP_USE_CUSTOM_POOLS 和 MEM_USE_POOLS，include路径必须包含lwippools.h，且必须在lwippools.h中定义内存池。" 
        	              Expression="MEM_LIBC_MALLOC=0  &amp; MEMP_MEM_MALLOC=0 &amp; MEMP_USE_CUSTOM_POOLS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this option is enabled, an alternative to malloc() is used by allocating from a set of memory pools of various sizes. When mem_malloc is called, an element of the smallest pool that can provide the length needed is returned. To use this, MEMP_USE_CUSTOM_POOLS also has to be enabled." 
        	  	             NoteCH="如果启用了此选项，则使用malloc() 的替代方式，从一组不同大小的内存池中进行分配。当mem_malloc被调用时，会返回能够提供所需长度的最小内存池的一个元素。使用此选项还需启用MEMP_USE_CUSTOM_POOLS。"/>
    </RefParameter>    
    <RefParameter Name="MEM_USE_POOLS" Comment="MEM_USE_POOLS" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This option is disabled when MEMP_USE_CUSTOM_POOLS is disabled, to enable it enable MEMP_USE_CUSTOM_POOLS first.&lt;br&gt;When MEM_USE_POOLS is enabled, an alternative to malloc() is used by allocating from a set of memory pools of various sizes. When mem_malloc is called, an element of the smallest pool that can provide the length needed is returned. To use this, MEMP_USE_CUSTOM_POOLS also has to be enabled.&lt;br&gt;&lt;b&gt;Warning: up to user to take care!&lt;/b&gt;: If you enable both MEMP_USE_CUSTOM_POOLS and MEM_USE_POOLS, you must have lwippools.h in your include path somewhere and you must define your pools within lwippools.h.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEM_USE_POOLS requires MEM_LIBC_MALLOC and MEMP_MEM_MALLOC disabled and MEMP_USE_CUSTOM_POOLS=&quot;Enabled&quot;" 
        	  	             NoteCH="当MEMP_USE_CUSTOM_POOLS 关闭时，此选项禁用。如需启用此选项，请先启用MEMP_USE_CUSTOM_POOLS。&lt;br&gt;当MEM_USE_POOLS启用时，使用malloc() 的替代方式，从一组不同大小的内存池中进行分配。当mem_malloc被调用时，会返回能够提供所需长度的最小内存池的一个元素。使用此选项还需启用MEMP_USE_CUSTOM_POOLS。&lt;br&gt;&lt;b&gt;注意事项：需要注意的是，&lt;/b&gt;如果开启MEMP_USE_CUSTOM_POOLS 和 MEM_USE_POOLS，include路径必须包含lwippools.h，且必须在lwippools.h中定义内存池。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: 使用MEM_USE_POOLS 需要关闭 MEM_LIBC_MALLOC 和MEMP_MEM_MALLOC 且 MEMP_USE_CUSTOM_POOLS=&quot;开启&quot;。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_USE_POOLS_TRY_BIGGER_POOL" Comment="MEM_USE_POOLS_TRY_BIGGER_POOL" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this option is enabled, if one malloc-pool is empty, the next bigger pool is tried.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Enabling this parameter might waste memory but it can make a system more reliable." 
        	  	             NoteCH="此选项启用时，如果一个malloc内存池为空，则尝试使用更大的内存池。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 启用此参数可能会浪费内存，但可以使系统更可靠。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_USE_CUSTOM_POOLS" Comment="MEMP_USE_CUSTOM_POOLS" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this options to include a user file lwippools.h that defines additional pools beyond the standard ones required by lwIP.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: If you set this to &quot;Enabled&quot;, you must have lwippools.h in your include path somewhere and you must define your pools within lwippools.h.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If MEMP_USE_CUSTOM_POOLS=&quot;Disabled&quot;, MEM_USE_POOLS will be disabled and if MEMP_USE_CUSTOM_POOLS=&quot;Enabled&quot;, MEM_USE_POOLS can be enabled." 
        	  	             NoteCH="启用此选项以包含用户文件lwippools.h，该文件定义lwIP所需的标准池之外的其他池。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 此选项设置为&quot;开启&quot;时，include路径必须包含 lwippools.h，且必须在lwippools.h中定义内存池。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_USE_CUSTOM_POOLS=&quot;关闭&quot;时，MEM_USE_POOLS禁用；当 MEMP_USE_CUSTOM_POOLS=&quot;开启&quot;时，可以启用MEM_USE_POOLS。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT" Comment="LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT" Type="list" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this option if you want to free PBUF_RAM pbufs (or call mem_free()) from interrupt context (or another context that doesn't allow waiting for a semaphore).&lt;br&gt;If set to &quot;Enabled&quot;, mem_malloc will be protected by a semaphore and SYS_ARCH_PROTECT, while mem_free will only use SYS_ARCH_PROTECT. mem_malloc SYS_ARCH_UNPROTECTs with each loop so that mem_free can run.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: As you can see from the above description, this leads to dis-/ enabling interrupts often, which can be slow! Also, on low memory, mem_malloc can need longer.&lt;br&gt;If you don't want that, at least for NO_SYS=0, you can still use the following functions to enqueue a deallocation call which then runs in the tcpip_thread context:&lt;br&gt;- pbuf_free_callback(p)&lt;br&gt;- mem_free_callback(m);." 
        	  	             NoteCH="启用此选项，可从中断上下文（或其他不允许等待信号量的上下文）中释放PBUF_RAM pbuf（或调用mem_free()）。&lt;br&gt;此选项设置为&quot;开启&quot;时，mem_malloc函数由一个信号量和SYS_ARCH_PROTECT保护，但mem_free函数仅使用SYS_ARCH_PROTECT保护。只有mem_malloc在SYS_ARCH_UNPROTECTs后，mem_free 才可以运行。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 由此可知，这可能会经常导致中断禁用/启用，但mem_malloc速度很慢。此外，对应容量较小的内存，mem_malloc的速度会更慢。&lt;br&gt; 要避免这种情况，需要设置NO_SYS=0，但仍可以使用以下函数来排队取消分配调用，然后在 tcpip_threadcontext中运行；这些函数包括：&lt;br&gt;- pbuf_free_callback(p)&lt;br&gt;- mem_free_callback(m);"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_RAM_HEAP_POINTER" Comment="LWIP_RAM_HEAP_POINTER" Type="hexadecimal" Group="Infrastructure - Heap and Memory Pools Options" GroupCH="基础配置 - 堆和内存池选项" DefaultValue="00000000" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="00000000" Max="FFFFFFFF" Visible="true" Reload="false">
        <Annotation Note="If you want to relocate the heap to external memory, simply set a void-pointer to that location and make sure the memory at that location is big enough." 
        	  	             NoteCH="如果希望将堆重新定位到外部内存，只需设置一个指向该位置的空指针，并确保该位置的内存足够大。"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Internal Memory Pool Sizes ******************************-->
    <RefParameter Name="MEMP_NUM_PBUF" Comment="MEMP_NUM_PBUF" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="16" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of memp struct pbufs (used for PBUF_ROM and PBUF_REF). If the application sends a lot of data out of ROM (or other static memory), this should be set high." 
        	  	             NoteCH="memp 结构的 pbuf 数量（用于PBUF_ROM 和 PBUF_REF）。如果应用程序从ROM（或其他静态内存）发送大量数据，则此参数应设置为较大的值。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_RAW_PCB" Comment="MEMP_NUM_RAW_PCB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="1" Max="2147483647" >
        <Condition Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_RAW=1"/>
        <Annotation Note="Number of Raw connection PCBs (requires the LWIP_RAW option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_RAW_PCB requires MEMP_MEM_MALLOC=&quot;Disabled&quot; and if LWIP_RAW=&quot;Enabled&quot;, it is mandatory to have MEMP_NUM_RAW_PCB&gt;0." 
        	  	             NoteCH="原始连接PCB的数目（需要设置LWIP_RAW选项）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEMP_NUM_RAW_PCB需要设置MEMP_MEM_MALLOC=&quot;关闭&quot;；且当LWIP_RAW=&quot;开启&quot;时，MEMP_NUM_RAW_PCB必须&gt;0。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_RAW_PCB" Comment="MEMP_NUM_RAW_PCB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" >
        <Annotation Note="Number of Raw connection PCBs (requires the LWIP_RAW option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_RAW_PCB requires MEMP_MEM_MALLOC=&quot;Disabled&quot; and if LWIP_RAW=&quot;Enabled&quot;, it is mandatory to have MEMP_NUM_RAW_PCB&gt;0." 
        	  	             NoteCH="原始连接PCB的数目（需要设置LWIP_RAW选项）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEMP_NUM_RAW_PCB需要设置MEMP_MEM_MALLOC=&quot;关闭&quot;；且当LWIP_RAW=&quot;开启&quot;时，MEMP_NUM_RAW_PCB必须&gt;0。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_TCP_PCB_LISTEN" Comment="MEMP_NUM_TCP_PCB_LISTEN" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" >
        <Annotation Note="Number of listening TCP connections (requires the LWIP_TCP option).&lt;br&gt;This corresponds to the maximum number of TCP ports which may be simultaneously listened on.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_NETCONN is link to MEMP_NUM_TCP_PCB_LISTEN value." 
        	  	             NoteCH="侦听TCP连接的个数（需要设置LWIP_TCP选项）。&lt;br&gt;对应可以同时侦听的TCP端口的最大数量。&lt;br&gt;&lt;b&gt;依赖关系：&lt;/b&gt; MEMP_NUM_NETCONN链接到 MEMP_NUM_TCP_PCB_LISTEN值。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_TCP_SEG" Comment="MEMP_NUM_TCP_SEG" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="16" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=TCP_SND_QUEUELEN" Max="2147483647" >
        <Condition Expression="LWIP_DISABLE_TCP_SANITY_CHECKS=0 &amp; LWIP_TCP=1 &amp; MEMP_MEM_MALLOC=0"/>
        <Annotation Note="Number of simultaneously queued TCP segments (requires the LWIP_TCP option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_TCP_SEG shuold be at least as big as TCP_SND_QUEUELEN when LWIP_TCP and LWIP_DISABLE_TCP_SANITY_CHECKS are enabled and MEMP_MEM_MALLOC disabled.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to avoid Min value limitation." 
        	  	             NoteCH="同时在队列的TCP段的数量（需要设置LWIP_TCP选项）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_TCP 和 LWIP_DISABLE_TCP_SANITY_CHECKS 并禁用 MEMP_MEM_MALLOC时，MEMP_NUM_TCP_SEG应该至少与TCP_SND_QUEUELEN同样大。&lt;br&gt;在操作明确的前提下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1 ，以避免最小值限制。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_TCP_SEG" Comment="MEMP_NUM_TCP_SEG" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="16" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of simultaneously queued TCP segments (requires the LWIP_TCP option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_TCP_SEG shuold be at least as big as TCP_SND_QUEUELEN when LWIP_TCP and LWIP_DISABLE_TCP_SANITY_CHECKS are enabled and MEMP_MEM_MALLOC disabled.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to avoid Min value limitation." 
        	  	             NoteCH="同时在队列的TCP段的数量（需要设置LWIP_TCP选项）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_TCP 和 LWIP_DISABLE_TCP_SANITY_CHECKS 并禁用MEMP_MEM_MALLOC时，MEMP_NUM_TCP_SEG 应该至少与TCP_SND_QUEUELEN同样大。&lt;br&gt;在操作明确的前提下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1 ，以避免最小值限制。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_ALTCP_PCB" Comment="MEMP_NUM_ALTCP_PCB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCP_PCB" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="MEMP_NUM_ALTCP_PCB requires LWIP_ALTCP." 
        	              DiagnosticCH="MEMP_NUM_ALTCP_PCB 需要设置 LWIP_ALTCP" 
        	              Expression="LWIP_ALTCP=1"/>
        <Annotation Note="Number of simultaneously active altcp layer pcbs (requires the LWIP_ALTCP option).&lt;br&gt;Connections with multiple layers require more than one altcp_pcb (e.g. TLS over TCP requires 2 altcp_pcbs, one for TLS and one for TCP)." 
        	  	             NoteCH="同时激活的ALTCP层PCB的数量（需要设置LWIP_ALTCP选项）。&lt;br&gt;多层连接需要一个以上的 altcp_pcb（例如：基于TCP的TLS需要2个altcp_pcbs，一个用于TLS、另一个用于TCP）。"/>
    </RefParameter>    
    <RefParameter Name="MEMP_NUM_ALTCP_PCB" Comment="MEMP_NUM_ALTCP_PCB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCP_PCB" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Number of simultaneously active altcp layer pcbs (requires the LWIP_ALTCP option).&lt;br&gt;Connections with multiple layers require more than one altcp_pcb (e.g. TLS over TCP requires 2 altcp_pcbs, one for TLS and one for TCP).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_ALTCP_PCB requires LWIP_ALTCP." 
        	  	             NoteCH="同时激活的ALTCP层PCB的数量（需要设置LWIP_ALTCP选项）。&lt;br&gt;多层连接需要一个以上的 altcp_pcb（例如：基于TCP的TLS需要2个altcp_pcbs，一个用于TLS、另一个用于TCP）。&lt;br&gt;&lt;b&gt;依赖关系：&lt;/b&gt; MEMP_NUM_ALTCP_PCB 需要设置 LWIP_ALTCP。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_REASSDATA" Comment="MEMP_NUM_REASSDATA" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="5" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=IP_REASS_MAX_PBUFS" >
        <Condition Expression="MEMP_MEM_MALLOC=0 &amp; IP_REASSEMBLY=1"/>
        <Annotation Note="Number of IP packets simultaneously queued for reassembly (whole packets, not fragments!).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_REASSDATA must be less than IP_REASS_MAX_PBUFS when IP_REASSEMBLY is enabled and MEMP_MEM_MALLOC disabled." 
        	  	             NoteCH="同时排队等待重组的IP数据包数量（整包，不分片）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用IP_REASSEMBLY 且禁用 MEMP_MEM_MALLOC 时，MEMP_NUM_REASSDATA 必须小于 IP_REASS_MAX_PBUFS。 "/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_REASSDATA" Comment="MEMP_NUM_REASSDATA" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="5" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="1000000" >
        <Annotation Note="Number of IP packets simultaneously queued for reassembly (whole packets, not fragments!).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_REASSDATA must be less than IP_REASS_MAX_PBUFS when IP_REASSEMBLY is enabled and MEMP_MEM_MALLOC disabled." 
        	  	             NoteCH="同时排队等待重组的IP数据包数量（整包，不分片）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用IP_REASSEMBLY 且禁用 MEMP_MEM_MALLOC 时，MEMP_NUM_REASSDATA 必须小于 IP_REASS_MAX_PBUFS。 "/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_FRAG_PBUF" Comment="MEMP_NUM_FRAG_PBUF" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="15" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of IP fragments simultaneously sent (fragments, not whole packets!).&lt;br&gt;This is only used with LWIP_NETIF_TX_SINGLE_PBUF==&quot;Disabled&quot; and only has to be &gt; 1 with DMA-enabled MACs where the packet is not yet sent when netif-&gt;output returns." 
        	  	             NoteCH="同时发送IP片段数量（分片，非整包）。&lt;br&gt; 只有在 LWIP_NETIF_TX_SINGLE_PBUF==&quot;关闭&quot; 时使用，且MAC启用DMA时只需要设置为 &gt; 1，当 netif-&gt;输出返回时，数据包尚未发送。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_ARP_QUEUE" Comment="MEMP_NUM_ARP_QUEUE" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="30" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="1" Max="2147483647" >
        <Condition Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_ARP=1 &amp; ARP_QUEUEING=1"/>
        <Annotation Note="Number of simulateously queued outgoing packets (pbufs) that are waiting for an ARP request (to resolve their destination address) to finish (requires the ARP_QUEUEING option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_ARP_QUEUE must be &gt; 1 to use ARP_QUEUEING when LWIP_ARP is enabled and MEMP_MEM_MALLOC disabled." 
        	  	             NoteCH="等待ARP请求（解析目标地址）完成（需要配置ARP_QUEUEING）同时排队出队的数据包（pbuf）数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用LWIP_ARP 并禁用 MEMP_MEM_MALLOC时，使用ARP_QUEUEING要求MEMP_NUM_ARP_QUEUE 必须 &gt; 1。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_ARP_QUEUE" Comment="MEMP_NUM_ARP_QUEUE" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="30" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of simulateously queued outgoing packets (pbufs) that are waiting for an ARP request (to resolve their destination address) to finish (requires the ARP_QUEUEING option).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_ARP_QUEUE must be &gt; 1 to use ARP_QUEUEING when LWIP_ARP is enabled and MEMP_MEM_MALLOC disabled." 
        	  	             NoteCH="等待ARP请求（解析目标地址）完成（需要配置ARP_QUEUEING）同时排队出队的数据包（pbuf）数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用LWIP_ARP 并禁用 MEMP_MEM_MALLOC 时，使用ARP_QUEUEING 要求MEMP_NUM_ARP_QUEUE 必须 &gt; 1。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_IGMP_GROUP" Comment="MEMP_NUM_IGMP_GROUP" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="2" Max="2147483647" >
        <Condition Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_IGMP=1"/>
        <Annotation Note="Number of multicast groups whose network interfaces can be members at the same time: one per netif (allsystems group) plus one per netif membership. It requires the LWIP_IGMP option enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_IGMP_GROUP must be greater than 1 if LWIP_IGMP option is enabled when MEMP_MEM_MALLOC is disabled.&lt;br&gt;&lt;b&gt;Recommendation&lt;/b&gt;: This value must be at least twice the number of active network interfaces active in the configuration." 
        	  	             NoteCH="多播组数量，网络接口可以同时作为成员：每个netif（所有系统多播组）一个、每个netif成员一个。需要启用LWIP_IGMP选项。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC禁用时，如果启用LWIP_IGMP选项，则MEMP_NUM_IGMP_GROUP 必须大于1。&lt;br&gt;&lt;b&gt;建议：&lt;/b&gt; 该值至少为当前配置中激活的网络接口数量的两倍。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_IGMP_GROUP" Comment="MEMP_NUM_IGMP_GROUP" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of multicast groups whose network interfaces can be members at the same time: one per netif (allsystems group) plus one per netif membership. It requires the LWIP_IGMP option enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_NUM_IGMP_GROUP must be greater than 1 if LWIP_IGMP option is enabled when MEMP_MEM_MALLOC is disabled.&lt;br&gt;&lt;b&gt;Recommendation&lt;/b&gt;: This value must be at least twice the number of active network interfaces active in the configuration." 
        	  	             NoteCH="多播组数量，网络接口可以同时作为成员：每个netif（所有系统多播组）一个、每个netif成员一个。需要启用LWIP_IGMP选项。需要启用LWIP_IGMP选项。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC禁用时，如果启用LWIP_IGMP选项，则MEMP_NUM_IGMP_GROUP 必须大于 1。&lt;br&gt;&lt;b&gt;建议：&lt;/b&gt; 该值至少为当前配置中激活的网络接口数量的两倍。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_SYS_TIMEOUT" Comment="MEMP_NUM_SYS_TIMEOUT" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + LWIP_AUTOIP + LWIP_IGMP + LWIP_DNS + PPP_NUM_TIMEOUTS + (LWIP_IPV6 * (1 + LWIP_IPV6_REASS + LWIP_IPV6_MLD))" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="=IF(!MEMP_MEM_MALLOC &amp; LWIP_TIMERS, LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + LWIP_AUTOIP + LWIP_IGMP + LWIP_DNS + PPP_NUM_TIMEOUTS + (LWIP_IPV6 * (1 + LWIP_IPV6_REASS + LWIP_IPV6_MLD)), 0)" Max="2147483647" >
        <Annotation Note="The number of sys timeouts used by the core stack (not apps).&lt;br&gt;The default number of timeouts is calculated here for all enabled modules.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If MEMP_MEM_MALLOC and LWIP_TIMERS are enabled, the MEMP_NUM_SYS_TIMEOUT must have as minimum value: LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + LWIP_AUTOIP + LWIP_IGMP + LWIP_DNS + PPP_NUM_TIMEOUTS + (LWIP_IPV6 * (1 + LWIP_IPV6_REASS + LWIP_IPV6_MLD)) (value expected for each parameter is either '0' or '1')." 
        	  	             NoteCH="核心堆栈（非应用程序）使用的系统超时次数。&lt;br&gt; 此处计算所有已启用模块的默认超时次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC 和 LWIP_TIMERS 启用时，MEMP_NUM_SYS_TIMEOUT 必须是最小值：LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + LWIP_AUTOIP + LWIP_IGMP + LWIP_DNS + PPP_NUM_TIMEOUTS + (LWIP_IPV6 * (1 + LWIP_IPV6_REASS + LWIP_IPV6_MLD)) （各参数的预期值为“0”或“1”）。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_NETBUF" Comment="MEMP_NUM_NETBUF" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="2" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Annotation Note="Number of netbuf structures which may be in use simultaneously (only needed if you use the sequential API like LWIP_NETCONN or LWIP_SOCKET)." 
        	  	             NoteCH="可同时使用的 netbuf 结构数量（仅当使用顺序API（LWIP_NETCONN 或 LWIP_SOCKET）时才需要）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_NETCONN" Comment="MEMP_NUM_NETCONN" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="1" Max="2147483647" >
        <Condition Expression="MEMP_MEM_MALLOC=1 &amp; LWIP_DISABLE_MEMP_SANITY_CHECKS=0 &amp; LWIP_NETCONN=1 &amp; LWIP_SOCKET=1"/>
        <Annotation Note="Number of struct netconns (only needed if you use the sequential API, like like LWIP_NETCONN or LWIP_SOCKET).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: There are 2 dependencies:&lt;br&gt;1) When LWIP_NETCONN is enabled, MEMP_MEM_MALLOC and LWIP_DISABLE_MEMP_SANITY_CHECKS are disabled, MEMP_NUM_NETCONN must not ecceed MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) When LWIP_NETCONN, LWIP_SOCKET and MEMP_MEM_MALLOC are all enabled with LWIP_DISABLE_MEMP_SANITY_CHECKS disabled, MEMP_NUM_NETCONN cannot be 0.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_MEMP_SANITY_CHECKS to 1." 
        	  	             NoteCH="netconn结构数量（仅当使用顺序API（LWIP_NETCONN 或 LWIP_SOCKET）时才需要）&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 有2个依赖条件：&lt;br&gt;1) 当启用LWIP_NETCONN且禁用MEMP_MEM_MALLOC 和 LWIP_DISABLE_MEMP_SANITY_CHECKS 时，MEMP_NUM_NETCONN不能超过MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) 当启用LWIP_NETCONN、LWIP_SOCKET 和MEMP_MEM_MALLOC且禁用LWIP_DISABLE_MEMP_SANITY_CHECKS时，MEMP_NUM_NETCONN 不能为0。&lt;br&gt; 在操作明确的前提下，将LWIP_DISABLE_MEMP_SANITY_CHECKS定义为1。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_NETCONN" Comment="MEMP_NUM_NETCONN" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB" >
        <Condition Expression="MEMP_MEM_MALLOC=1 &amp; LWIP_DISABLE_MEMP_SANITY_CHECKS=0 &amp; LWIP_NETCONN=0 &amp; LWIP_SOCKET=0"/>
        <Annotation Note="Number of struct netconns (only needed if you use the sequential API, like like LWIP_NETCONN or LWIP_SOCKET).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: There are 2 dependencies:&lt;br&gt;1) When LWIP_NETCONN is enabled, MEMP_MEM_MALLOC and LWIP_DISABLE_MEMP_SANITY_CHECKS are disabled, MEMP_NUM_NETCONN must not ecceed MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) When LWIP_NETCONN, LWIP_SOCKET and MEMP_MEM_MALLOC are all enabled with LWIP_DISABLE_MEMP_SANITY_CHECKS disabled, MEMP_NUM_NETCONN cannot be 0.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_MEMP_SANITY_CHECKS to 1." 
        	  	             NoteCH="netconn结构数量（仅当使用顺序API（LWIP_NETCONN 或 LWIP_SOCKET）时才需要）&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 有2个依赖条件：&lt;br&gt;1) 当启用LWIP_NETCONN且禁用MEMP_MEM_MALLOC 和 LWIP_DISABLE_MEMP_SANITY_CHECKS 时，MEMP_NUM_NETCONN不能超过MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) 当启用LWIP_NETCONN、LWIP_SOCKET 和MEMP_MEM_MALLOC且禁用LWIP_DISABLE_MEMP_SANITY_CHECKS时，MEMP_NUM_NETCONN 不能为0。&lt;br&gt; 在操作明确的前提下，将 LWIP_DISABLE_MEMP_SANITY_CHECKS定义为1。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_NETCONN" Comment="MEMP_NUM_NETCONN" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of struct netconns (only needed if you use the sequential API, like like LWIP_NETCONN or LWIP_SOCKET).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: There are 2 dependencies:&lt;br&gt;1) When LWIP_NETCONN is enabled, MEMP_MEM_MALLOC and LWIP_DISABLE_MEMP_SANITY_CHECKS are disabled, MEMP_NUM_NETCONN must not ecceed MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) When LWIP_NETCONN, LWIP_SOCKET and MEMP_MEM_MALLOC are all enabled with LWIP_DISABLE_MEMP_SANITY_CHECKS disabled, MEMP_NUM_NETCONN cannot be 0.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_MEMP_SANITY_CHECKS to 1." 
        	  	             NoteCH="netconn结构数量（仅当使用顺序API（LWIP_NETCONN 或 LWIP_SOCKET）时才需要）&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 有2个依赖条件：&lt;br&gt;1) 当启用LWIP_NETCONN且禁用MEMP_MEM_MALLOC 和 LWIP_DISABLE_MEMP_SANITY_CHECKS 时，MEMP_NUM_NETCONN不能超过MEMP_NUM_TCP_PCB + MEMP_NUM_TCP_PCB_LISTEN + MEMP_NUM_UDP_PCB + MEMP_NUM_RAW_PCB&lt;br&gt;2) 当启用LWIP_NETCONN、LWIP_SOCKET 和MEMP_MEM_MALLOC且禁用LWIP_DISABLE_MEMP_SANITY_CHECKS时，MEMP_NUM_NETCONN 不能为0。&lt;br&gt; 在操作明确的前提下，将 LWIP_DISABLE_MEMP_SANITY_CHECKS定义为1。"/>
    </RefParameter>

    <RefParameter Name="MEMP_NUM_TCPIP_MSG_API" Comment="MEMP_NUM_TCPIP_MSG_API" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="1" Max="2147483647" >
        <Condition Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_NETCONN=1 | LWIP_SOCKET=1"/>
        <Annotation Note="Number of struct tcpip_msg, which are used for callback/timeout API communication (only needed if you use tcpip.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_TCPIP_MSG_API requires MEMP_MEM_MALLOC disabled and LWIP_NETCONN or LWIP_SOCKET enabled." 
        	  	             NoteCH="tcpip_msg结构数量，用于回调/超时API通信（仅使用tcpip.c时才需要）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEMP_NUM_TCPIP_MSG_API，需要禁用MEMP_MEM_MALLOC并启用LWIP_NETCONN或LWIP_SOCKET。"/>
    </RefParameter>
    <RefParameter Name="MEMP_NUM_TCPIP_MSG_API" Comment="MEMP_NUM_TCPIP_MSG_API" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of struct tcpip_msg, which are used for callback/timeout API communication (only needed if you use tcpip.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use MEMP_NUM_TCPIP_MSG_API requires MEMP_MEM_MALLOC disabled and LWIP_NETCONN or LWIP_SOCKET enabled." 
        	  	             NoteCH="tcpip_msg结构数量，用于回调/超时API通信（仅使用tcpip.c时才需要）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEMP_NUM_TCPIP_MSG_API，需要禁用MEMP_MEM_MALLOC并启用LWIP_NETCONN或LWIP_SOCKET。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_SELECT_CB" Comment="MEMP_NUM_SELECT_CB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of struct lwip_select_cb (Only needed if you have LWIP_MPU_COMPATIBLE=&quot;Enabled&quot; and use the socket API. In that case, you need one per thread calling lwip_select.)." 
        	  	             NoteCH="lwip_select_cb结构数量（仅当LWIP_MPU_COMPATIBLE=&quot;开启&quot;且采用套接字API时才需要。在这种情况下， 每个调用lwip select的线程都需要。）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_TCPIP_MSG_INPKT" Comment="MEMP_NUM_TCPIP_MSG_INPKT" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="8" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of struct tcpip_msg used for incoming packets (only needed if you use tcpip.c)." 
        	  	             NoteCH="用于传入数据包的tcpip_msg结构数量（仅当使用tcpip.c时才需要）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_NETDB" Comment="MEMP_NUM_NETDB" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently running lwip_addrinfo() calls (before freeing the corresponding memory using lwip_freeaddrinfo()).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Used if LWIP_DNS is enabled." 
        	  	             NoteCH="并发运行lwip_addrinfo()的调用次数（使用lwip_freeaddrinfo()释放相应内存之前）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 如果启用了LWIP_DNS，则使用。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_LOCALHOSTLIST" Comment="MEMP_NUM_LOCALHOSTLIST" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of host entries in the local host list if DNS_LOCAL_HOSTLIST_IS_DYNAMIC=&quot;Enabled&quot;.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Used if LWIP_DNS is enabled." 
        	  	             NoteCH="本地主机列表中的主机条目数（DNS_LOCAL_HOSTLIST_IS_DYNAMIC=&quot;开启&quot;）&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;  如果启用了LWIP_DNS，则使用。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_API_MSG" Comment="MEMP_NUM_API_MSG" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCPIP_MSG_API" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active calls to various socket, netconn, and tcpip functions." 
        	  	             NoteCH="对各种socket、netconn、tcpip函数并发活动调用的次数"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_DNS_API_MSG" Comment="MEMP_NUM_DNS_API_MSG" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCPIP_MSG_API" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active calls to netconn_gethostbyname." 
        	  	             NoteCH="对netconn_gethostbyname函数并发活动调用的次数"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA" Comment="MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCPIP_MSG_API" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active calls to getsockopt/setsockopt." 
        	  	             NoteCH="对getsockopt/setsockopt函数并发活动调用的次数"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_NETIFAPI_MSG" Comment="MEMP_NUM_NETIFAPI_MSG" Type="integer" Group="Infrastructure - Internal Memory Pool Sizes" GroupCH="基础配置 - 内部内存池大小" DefaultValue="=MEMP_NUM_TCPIP_MSG_API" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active calls to netifapi functions." 
        	  	             NoteCH="对netifapi函数并发活动调用的次数"/>
    </RefParameter>
    
    <!-- *************************** Pbuf Options ******************************-->
    <RefParameter Name="LWIP_SUPPORT_CUSTOM_PBUF" Comment="LWIP_SUPPORT_CUSTOM_PBUF" Type="list" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="true" Reload="false">
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Custom Pbuf parameter." 
        	  	             NoteCH="自定义Pbuf参数"/>
    </RefParameter>
    
    <RefParameter Name="PBUF_POOL_SIZE" Comment="PBUF_POOL_SIZE" Type="integer" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="16" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=IP_REASS_MAX_PBUFS+1" Max="2147483647" >
        <Annotation Note="Number of buffers in the pbuf pool." 
        	  	             NoteCH="pbuf 池中的缓冲区数量"/>
    </RefParameter>
    
    <RefParameter Name="PBUF_LINK_HLEN" Comment="PBUF_LINK_HLEN" Type="Integer" Unit="Byte(s)" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="=14+ETH_PAD_SIZE" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="14" Max="=PBUF_POOL_BUFSIZE-PBUF_IP_HLEN-PBUF_TRANSPORT_HLEN-1" >
        <Annotation Note="Number of bytes that should be allocated for a link level header. The default is 14, the standard value for Ethernet.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: To handle corner cases, PBUF_LINK_HLEN must be less than PBUF_POOL_BUFSIZE - 40 (IP_HLEN + PBUF_TRANSPORT_HLEN) and greater or equal than 14." 
        	  	             NoteCH="为链路层报头分配的字节数，默认值：14（以太网标准值）。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 针对特殊情况，PBUF_LINK_HLEN 必须小于 PBUF_POOL_BUFSIZE - 40 (IP_HLEN + PBUF_TRANSPORT_HLEN) 且大于或等于 14。"/>
    </RefParameter>
    
    <RefParameter Name="PBUF_LINK_ENCAPSULATION_HLEN" Comment="PBUF_LINK_ENCAPSULATION_HLEN" Type="Integer" Unit="Byte(s)" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="the number of bytes that should be allocated for an additional encapsulation header before ethernet headers (e.g. 802.11)." 
        	  	             NoteCH="为附加封装报头分配的字节数（以太网头部之前，如802.11）"/>
    </RefParameter>
    
    <RefParameter Name="PBUF_POOL_BUFSIZE" Comment="PBUF_POOL_BUFSIZE" Type="Integer" Unit="Byte(s)" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="592" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=MAX(IF(!MEMP_MEM_MALLOC &amp; PBUF_POOL_SIZE &amp; LWIP_TCP &amp; !LWIP_DISABLE_TCP_SANITY_CHECKS, PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN + 1,0),MEM_ALIGNMENT)" Max="2147483647" >
        <Annotation Note="Size of each pbuf in the pbuf pool.&lt;br&gt;The default is designed to accommodate single full size TCP frame in one pbuf, including TCP_MSS, IP header, and link header:&lt;br&gt;PBUF_POOL_BUFSIZE default value is LWIP_MEM_ALIGN_SIZE(TCP_MSS+40+PBUF_LINK_ENCAPSULATION_HLEN+PBUF_LINK_HLEN)&lt;br&gt;&lt;b&gt;Note&lt;/b&gt;: LWIP_MEM_ALIGN_SIZE(size) equals to: (size+MEM_ALIGNMENT-1U) &amp; ~(MEM_ALIGNMENT-1U).&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: PBUF_POOL_BUFSIZE should be greater or equal than PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN if MEMP_MEM_MALLOC and LWIP_DISABLE_TCP_SANITY_CHECKS are disabled and if LWIP_TCP and PBUF_POOL_SIZE are enabled, MEM_ALIGNMENT otherwise.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to keep only limitation on MEM_ALIGNMENT." 
        	  	             NoteCH="pbuf池中各个pbuf的大小。&lt;br&gt;默认一个pbuf中包含一个完整的TCP帧，包括 TCP_MSS、IP报头和链路层报头：&lt;br&gt;PBUF_POOL_BUFSIZE默认值为 LWIP_MEM_ALIGN_SIZE(TCP_MSS+40+PBUF_LINK_ENCAPSULATION_HLEN+PBUF_LINK_HLEN)&lt;br&gt;&lt;b&gt;注：&lt;/b&gt; LWIP_MEM_ALIGN_SIZE(size) 等于：(size+MEM_ALIGNMENT-1U) &amp; ~(MEM_ALIGNMENT-1U).&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; PBUF_POOL_BUFSIZE 应大于或等于 PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN （MEMP_MEM_MALLOC 和 LWIP_DISABLE_TCP_SANITY_CHECKS 禁用且  LWIP_TCP 和PBUF_POOL_SIZE 启用）；否则为MEM_ALIGNMENT 。&lt;br&gt; 在操作明确的前提下，将LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1 ，保留对MEM_ALIGNMENT的限制。"/>
    </RefParameter>
   
    <RefParameter Name="PBUF_IP_HLEN" Comment="PBUF_IP_HLEN" Type="Integer" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="20" Min="0" Max="65535" Visible="false"/>
    <RefParameter Name="PBUF_TRANSPORT_HLEN" Comment="PBUF_TRANSPORT_HLEN" Type="Integer" Group="Pbuf Options" GroupCH="Pbuf 选项" DefaultValue="20" Min="0" Max="65535" Visible="false"/>
    
    <!-- *************************** IPv4 - ARP Options ******************************-->
    <RefParameter Name="LWIP_ARP" Comment="LWIP_ARP" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="Use LWIP_ARP requires LWIP_ETHERNET." 
        	              DiagnosticCH="使用LWIP_ARP需要启用LWIP_ETHERNET" 
        	              Expression="LWIP_ETHERNET=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable ARP (Address Resolution Protocol) functionality. When ARP is disabled, either PPP or SLIPIF should be enabled or user protocol interface should be added." 
        	  	             NoteCH="启用ARP（地址解析协议）功能。当ARP被禁用时，应启用PPP或SLIPIF，或添加用户协议接口。"/>
    </RefParameter>
    <RefParameter Name="LWIP_ARP" Comment="LWIP_ARP" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable ARP (Address Resolution Protocol) functionality. When ARP is disabled, either PPP or SLIPIF should be enabled or user protocol interface should be added.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_ARP requires LWIP_ETHERNET." 
        	  	             NoteCH="启用ARP（地址解析协议）功能。当ARP被禁用时，应启用PPP或SLIPIF，或添加用户协议接口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_ARP 需要启用LWIP_ETHERNET。"/>
    </RefParameter>
    
    <RefParameter Name="ARP_TABLE_SIZE" Comment="ARP_TABLE_SIZE" Type="integer" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="10" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="127" Reload="false" >
        <Annotation Note="Number of active MAC-IP address pairs cached." 
        	  	             NoteCH="缓存活跃MAC-IP地址对数量"/>
    </RefParameter>
    
    <RefParameter Name="ARP_MAXAGE" Comment="ARP_MAXAGE" Type="integer" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="300" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="The time an ARP entry stays valid after its last update, for ARP_TMR_INTERVAL = 1000, this is (60 * 5) seconds = 5 minutes." 
        	  	             NoteCH="ARP条目在最后一次更新后保持有效的时间。例如：ARP_TMR_INTERVAL = 1000时，这个时间为（60 * 5） 秒 = 5 分钟。"/>
    </RefParameter>
    
    <RefParameter Name="ARP_QUEUEING" Comment="ARP_QUEUEING" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Multiple outgoing packets are queued during hardware address resolution.&lt;br&gt;By default, only the most recent packet is queued per IP address. This is sufficient for most protocols and mainly reduces TCP connection startup time.&lt;br&gt;Set this to &quot;Enabled&quot; if you know your application sends more than one packet in a row to an IP address that is not in the ARP cache.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use ARP_QUEUEING requires MEMP_NUM_ARP_QUEUE&gt;0 when MEMP_MEM_MALLOC=&quot;Disabled&quot; and LWIP_ARP is enabled." 
        	  	             NoteCH="硬件地址解析过程中多个传出数据包排队。&lt;br&gt; 默认情况下，每个IP地址只对最新的数据包排队。这对于大多数协议来说已经足够了，主要减少了TCP连接启动时间。&lt;br&gt; 如果应用程序向ARP缓存外的IP地址连续发送多个数据包，则将此参数设置为&quot;开启&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC=&quot;关闭&quot; 且启用LWIP_ARP 时，使用ARP_QUEUEING 需要设置MEMP_NUM_ARP_QUEUE&gt;0。"/>
    </RefParameter>
    <RefParameter Name="ARP_QUEUEING" Comment="ARP_QUEUEING" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use ARP_QUEUEING requires MEMP_NUM_ARP_QUEUE&gt;0 when MEMP_MEM_MALLOC=&quot;Disabled&quot; and LWIP_ARP is enabled." 
        	              DiagnosticCH="当MEMP_MEM_MALLOC=&quot;关闭&quot;且启用LWIP_ARP时，使用ARP_QUEUEING需要设置MEMP_NUM_ARP_QUEUE&gt;0。" 
        	              Expression="MEMP_MEM_MALLOC=0 &amp; LWIP_ARP=1 &amp; MEMP_NUM_ARP_QUEUE=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Multiple outgoing packets are queued during hardware address resolution.&lt;br&gt;By default, only the most recent packet is queued per IP address. This is sufficient for most protocols and mainly reduces TCP connection startup time.&lt;br&gt;Set this to &quot;Enabled&quot; if you know your application sends more than one packet in a row to an IP address that is not in the ARP cache." 
        	  	             NoteCH="硬件地址解析过程中多个传出数据包排队。&lt;br&gt; 默认情况下，每个IP地址只对最新的数据包排队。这对于大多数协议来说已经足够了，主要减少了TCP连接启动时间。&lt;br&gt; 如果应用程序向ARP缓存外的IP地址连续发送多个数据包，则将此参数设置为&quot;开启&quot;。"/>
    </RefParameter>
    
    <RefParameter Name="ARP_QUEUE_LEN" Comment="ARP_QUEUE_LEN" Type="integer" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="3" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="The maximum number of packets which may be queued for each unresolved address by other network layers. Defaults to 3, 0 means disabled. Old packets are dropped, new packets are queued." 
        	  	             NoteCH="其他网络层为各个未解析地址排队的最大数据包数量。默认值为3，0表示禁用。旧数据包被丢弃，新数据包排队。"/>
    </RefParameter>
    
    <RefParameter Name="ETHARP_SUPPORT_VLAN" Comment="ETHARP_SUPPORT_VLAN" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, receiving and sending ethernet packets with VLAN header is supported. See the description of LWIP_HOOK_VLAN_CHECK and LWIP_HOOK_VLAN_SET hooks to check/set VLAN headers.&lt;br&gt;Additionally, you can define ETHARP_VLAN_CHECK to an u16_t VLAN ID to check.&lt;br&gt;If ETHARP_VLAN_CHECK is defined, only VLAN-traffic for this VLAN is accepted.&lt;br&gt;If ETHARP_VLAN_CHECK is not defined, all traffic is accepted.&lt;br&gt;Alternatively, define a function/define ETHARP_VLAN_CHECK_FN(eth_hdr, vlan) that returns 1 to accept a packet or 0 to drop a packet." 
        	  	             NoteCH="启用此参数时，支持接收和发送带VLAN头的以太网数据包。请参见 LWIP_HOOK_VLAN_CHECK 和LWIP_HOOK_VLAN_SET钩子函数检查/设置VLAN头。&lt;br&gt; 此外，可将ETHARP_VLAN_CHECK定义为一个u16_t VLAN ID进行检查。&lt;br&gt; 如果定义了ETHARP_VLAN_CHECK，只接受该VLAN的VLAN流量。&lt;br&gt; 如果没有定义ETHARP_VLAN_CHECK，则接收所有流量。&lt;br&gt; 或者，定义一个函数/定义 ETHARP_VLAN_CHECK_FN(eth_hdr, vlan)，返回1表示接受数据包，返回0表示丢弃数据包 。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ETHERNET" Comment="LWIP_ETHERNET" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, ethernet is supported even though ARP might be disabled.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Ethernet needs to be kept activated to enable LwIP in AT32 Work Bench.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_ETHERNET needs to be turned on for LWIP_ARP." 
        	  	             NoteCH="启用此参数时，即使ARP可能被禁用，也支持以太网。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 需要保持以太网处于激活状态，以便在AT32 Work Bench中启用LwIP。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 要使用LWIP_ARP，需要开启LWIP_ETHERNET。"/>
    </RefParameter>
    
    <RefParameter Name="ETH_PAD_SIZE" Comment="ETH_PAD_SIZE" Type="integer" Unit="Byte(s)" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of bytes added before the ethernet header to ensure alignment of payload after that header.&lt;br&gt;Since the header is 14 bytes long, without this padding e.g. addresses in the IP header will not be aligned on a 32-bit boundary, so setting this to 2 can speed up 32-bit-platforms.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: By default PBUF_LINK_HLEN value is set to ETH_PAD_SIZE+14." 
        	  	             NoteCH="以太网头部之前添加的字节数，确保其后有效负载对齐。&lt;br&gt; 以太网头部长度为14字节，如果没有填充，例如IP报头中的地址则不能实现32位边界对齐，因此将此参数设置为2可以实现在32位操作平台上的对齐。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 默认情况下，PBUF_LINK_HLEN 的值设置为 ETH_PAD_SIZE+14。"/>
    </RefParameter>
    
    <RefParameter Name="ETHARP_SUPPORT_STATIC_ENTRIES" Comment="ETHARP_SUPPORT_STATIC_ENTRIES" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables code to support static ARP table entries (using etharp_add_static_entry/etharp_remove_static_entry)." 
        	  	             NoteCH="启用此参数，使代码支持静态ARP表条目（使用etharp_add_static_entry/etharp_remove_static_entry）"/>
    </RefParameter>
    
    <RefParameter Name="ETHARP_TABLE_MATCH_NETIF" Comment="ETHARP_TABLE_MATCH_NETIF" Type="list" Group="IPv4 - ARP Options" GroupCH="IPv4 - ARP 选项" DefaultValue="=!LWIP_SINGLE_NETIF" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Match netif for ARP table entries.&lt;br&gt;If disabled, duplicate IP address on multiple netifs are not supported (but this should only occur for AutoIP)." 
        	  	             NoteCH="netif 匹配ARP表条目。&lt;br&gt; 如果禁用，不支持多个netif上的重复IP地址（仅针对AutoIP）。"/>
    </RefParameter>
    
    <!-- *************************** IPv4 Options ******************************-->
    <RefParameter Name="LWIP_IPV4" Comment="LWIP_IPV4" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter Enables IPv4 protocol.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: This parameter has dependencies with IP_FORWARD, IP_REASSEMBLY, IP_FRAG, LWIP_DHCP, LWIP_AUTOIP, LWIP_IGMP and LWIP_MULTICAST_TX_OPTIONS." 
        	  	             NoteCH="此参数用于启用IPv4协议。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 此参数与 IP_FORWARD、IP_REASSEMBLY、IP_FRAG、LWIP_DHCP、LWIP_AUTOIP、LWIP_IGMP 和LWIP_MULTICAST_TX_OPTIONS 选项相关。"/>
    </RefParameter>
    
    <RefParameter Name="IP_FORWARD" Comment="IP_FORWARD" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="IP_FORWARD must be disabled when LWIP_IPV4 is disabled." 
        	              DiagnosticCH="当禁用LWIP_IPV4时，IP_FORWARD也必须禁用。" 
        	              Expression="LWIP_IPV4=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables the ability to forward IP packets across network interfaces. If you are going to run lwIP on a device with only one network interface, define this to 0." 
        	  	             NoteCH="此参数用于允许跨网络接口转发IP数据包。如果在只有一个网络接口的设备上运行lwIP，请将此参数设置为&quot;关闭&quot;。"/>
    </RefParameter>
    <RefParameter Name="IP_FORWARD" Comment="IP_FORWARD" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables the ability to forward IP packets across network interfaces. If you are going to run lwIP on a device with only one network interface, define this to 0.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP_FORWARD is disabled when LWIP_IPV4 is disabled." 
        	  	             NoteCH="此参数用于允许跨网络接口转发IP数据包。如果在只有一个网络接口的设备上运行lwIP，请将此参数设置为&quot;关闭&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;  当LWIP_IPV4禁用时，IP_FORWARD也禁用。"/>
    </RefParameter>
    
    <RefParameter Name="IP_OPTIONS_ALLOWED" Comment="IP_OPTIONS_ALLOWED" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option defines the behavior for IP options:&lt;br&gt;- IP_OPTIONS_ALLOWED=&quot;Disabled&quot;: All packets with IP options are dropped.&lt;br&gt;- IP_OPTIONS_ALLOWED=&quot;Enabled&quot;: IP options are allowed (but not parsed)." 
        	  	             NoteCH="此选项用于定义IP选项相关操作：&lt;br&gt;- IP_OPTIONS_ALLOWED=&quot;关闭&quot;：丢弃所有具有IP选项的数据包。&lt;br&gt;- IP_OPTIONS_ALLOWED=&quot;开启&quot;：允许使用IP选项（但不解析）。"/>
    </RefParameter>
    
    <RefParameter Name="IP_REASSEMBLY" Comment="IP_REASSEMBLY" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="IP_REASSEMBLY must be disabled when LWIP_IPV4 is disabled.&lt;br&gt;There are also some dependencies with MEMP_NUM_REASSDATA, IP_REASS_MAX_PBUFS, MEMP_NUM_SYS_TIMEOUT." 
        	              DiagnosticCH="当禁用 LWIP_IPV4时，IP_REASSEMBLY也必须禁用。&lt;br&gt; 此项与MEMP_NUM_REASSDATA、IP_REASS_MAX_PBUFS和MEMP_NUM_SYS_TIMEOUT相关。" 
        	              Expression="LWIP_IPV4=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, incoming fragmented IP packets are reassembled. Note that this option does not affect outgoing packet sizes, which can be controlled via IP_FRAG." 
        	  	             NoteCH="启用此参数后，将对传入的分段IP数据包进行重组。需要注意的是，传出数据包大小不受影响，可通过IP_FRAG进行控制。"/>
    </RefParameter>
    <RefParameter Name="IP_REASSEMBLY" Comment="IP_REASSEMBLY" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, incoming fragmented IP packets are reassembled. Note that this option does not affect outgoing packet sizes, which can be controlled via IP_FRAG.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP_REASSEMBLY is disabled when LWIP_IPV4 is disabled.&lt;br&gt;There are also some dependencies with MEMP_NUM_REASSDATA, IP_REASS_MAX_PBUFS, MEMP_NUM_SYS_TIMEOUT." 
        	  	             NoteCH="启用此参数后，将对传入的分段IP数据包进行重组。需要注意的是，传出数据包大小不受影响，可通过IP_FRAG进行控制。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_IPV4禁用时，IP_REASSEMBLY 也禁用。&lt;br&gt;此参数与 MEMP_NUM_REASSDATA、IP_REASS_MAX_PBUFS 和MEMP_NUM_SYS_TIMEOUT相关。"/>
    </RefParameter>
    
    <RefParameter Name="IP_FRAG" Comment="IP_FRAG" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="IP_FRAG must be disabled when LWIP_IPV4 is disabled.&lt;br&gt;There is also some dependencies with LWIP_NETIF_TX_SINGLE_PBUF." 
        	              DiagnosticCH="当禁用LWIP_IPV4时，IP_FRAG也必须禁用。&lt;br&gt; 此项与 LWIP_NETIF_TX_SINGLE_PBUF相关。" 
        	              Expression="LWIP_IPV4=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, outgoing IP packets are fragmented if their size exceeds MTU. Note that this option does not affect incoming packet sizes, which can be controlled via IP_REASSEMBLY." 
        	  	             NoteCH="启用此参数后，如果传出IP数据包大小超过MTU，则会被分段。需要注意的是，传入数据包大小不受影响，可通过IP_REASSEMBLY进行控制。"/>
    </RefParameter>
    <RefParameter Name="IP_FRAG" Comment="IP_FRAG" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, outgoing IP packets are fragmented if their size exceeds MTU. Note that this option does not affect incoming packet sizes, which can be controlled via IP_REASSEMBLY.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP_FRAG must be disabled when LWIP_IPV4 is disabled.&lt;br&gt;There is also some dependencies with LWIP_NETIF_TX_SINGLE_PBUF." 
        	  	             NoteCH="启用此参数后，如果传出IP数据包大小超过MTU，则会被分段。需要注意的是，传入数据包大小不受影响，可通过IP_REASSEMBLY进行控制。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;  当LWIP_IPV4禁用时，IP_FRAG也禁用。&lt;br&gt; 此参数与 LWIP_NETIF_TX_SINGLE_PBUF相关。"/>
    </RefParameter>
    
    <RefParameter Name="IP_REASS_MAXAGE" Comment="IP_REASS_MAXAGE" Type="integer" Unit="Second(s)" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="15" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum time (in multiples of IP_TMR_INTERVAL - so seconds, normally) a fragmented IP packet waits for all fragments to arrive. If not all fragments arrived in this time, the whole packet is discarded." 
        	  	             NoteCH="分段IP数据包等待所有片段到达的最长时间（通常为IP_TMR_INTERVAL的倍数，以秒计算）。如果在此时间内未收到所有的分段IP数据包，则丢弃整个IP数据包。"/>
    </RefParameter>
    
    <RefParameter Name="IP_REASS_MAX_PBUFS" Comment="IP_REASS_MAX_PBUFS" Type="integer" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="10" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="=MEMP_NUM_REASSDATA" Max="=PBUF_POOL_SIZE-1" >
        <Condition   Expression="MEMP_MEM_MALLOC=1 &amp; IP_REASSEMBLY=1"/>
        <Annotation Note="Total maximum amount of pbufs waiting to be reassembled. Since the received pbufs are enqueued, be sure to configure PBUF_POOL_SIZE &gt; IP_REASS_MAX_PBUFS so that the stack is still able to receive packets even if the maximum amount of fragments is enqueued for reassembly!&lt;br&gt;When IPv4 *and* IPv6 are enabled, this even changes to (PBUF_POOL_SIZE &gt; 2 * IP_REASS_MAX_PBUFS)!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use IP_REASSEMBLY requires IP_REASS_MAX_PBUFS&gt;=MEMP_NUM_REASSDATA when MEMP_MEM_MALLOC is enabled." 
        	  	             NoteCH="等待重新组装的pbuf的最大总量。由于接收到的pbuf在队列中排队，请确保配置 PBUF_POOL_SIZE &gt; IP_REASS_MAX_PBUFS，这样即使最大数量的分段数据包排队等待重新组装，堆栈仍然能够接收数据包。&lt;br&gt; 当启用IPv4 *和* IPv6 时，该值甚至可达到 (PBUF_POOL_SIZE &gt; 2 * IP_REASS_MAX_PBUFS)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC启用时，使用 IP_REASSEMBLY需要IP_REASS_MAX_PBUFS&gt;=MEMP_NUM_REASSDATA 。"/>
    </RefParameter>
    <RefParameter Name="IP_REASS_MAX_PBUFS" Comment="IP_REASS_MAX_PBUFS" Type="integer" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="10" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=PBUF_POOL_SIZE-1" >
        <Annotation Note="Total maximum amount of pbufs waiting to be reassembled. Since the received pbufs are enqueued, be sure to configure PBUF_POOL_SIZE &gt; IP_REASS_MAX_PBUFS so that the stack is still able to receive packets even if the maximum amount of fragments is enqueued for reassembly!&lt;br&gt;When IPv4 *and* IPv6 are enabled, this even changes to (PBUF_POOL_SIZE &gt; 2 * IP_REASS_MAX_PBUFS)!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use IP_REASSEMBLY requires IP_REASS_MAX_PBUFS&gt;=MEMP_NUM_REASSDATA when MEMP_MEM_MALLOC is enabled." 
        	  	             NoteCH="等待重新组装的pbuf的最大总量。由于接收到的pbuf在队列中排队，请确保配置PBUF_POOL_SIZE &gt; IP_REASS_MAX_PBUFS，这样即使最大数量的分段数据包排队等待重新组装，堆栈仍然能够接收数据包。&lt;br&gt;当启用IPv4 *和* IPv6 时，该值甚至可达到 (PBUF_POOL_SIZE &gt; 2 * IP_REASS_MAX_PBUFS)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当MEMP_MEM_MALLOC启用时，使用 IP_REASSEMBLY需要 IP_REASS_MAX_PBUFS&gt;=MEMP_NUM_REASSDATA。"/>
    </RefParameter>
    
    <RefParameter Name="IP_DEFAULT_TTL" Comment="IP_DEFAULT_TTL" Type="Integer" Unit="Node(s)" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="255" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="255" >
        <Annotation Note="Default value for Time-To-Live used by transport layers.&lt;br&gt;This tells how long the packets may live on the network before they are dropped. Each time the packet passes a router, firewall, computer, i.e a node, the TTL is decremented with one step.&lt;br&gt;Setting the TTL to 255 would be considered rude since this would make a packet live an extremely long time on the internet.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP_DEFAULT_TTL is used to set by default: ICMP_TTL, RAW_TTL, UDP_TTL and TCP_TTL." 
        	  	             NoteCH="传输层使用的TTL（生存时间）默认值。&lt;br&gt; 表明数据包被丢弃之前在网络上存在的时间。数据包每经过一个路由器、防火墙、计算器（即节点），TTL值减1。&lt;br&gt; 不建议将TTL值设置为255，否则数据包会在网络中存在很长时间。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; IP_DEFAULT_TTL默认用于设置 ICMP_TTL、RAW_TTL、UDP_TTL 和 TCP_TTL。"/>
    </RefParameter>
    
    <RefParameter Name="IP_SOF_BROADCAST" Comment="IP_SOF_BROADCAST" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, the SOF_BROADCAST field is used to enable broadcast filter per pcb on udp and raw send operations. To enable broadcast filter on recv operations, you also have to set IP_SOF_BROADCAST_RECV=&quot;Enabled&quot;.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use IP_SOF_BROADCAST_RECV requires IP_SOF_BROADCAST enabled." 
        	  	             NoteCH="当启用此参数时，SOF_BROADCAST字段用于在UDP和原始发送操作中，为每个PCB启用广播过滤器。要在接收操作中启用广播过滤，还需要设置 IP_SOF_BROADCAST_RECV=&quot;开启&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IP_SOF_BROADCAST_RECV 需要启用IP_SOF_BROADCAST。"/>
    </RefParameter>
    
    <RefParameter Name="IP_SOF_BROADCAST_RECV" Comment="IP_SOF_BROADCAST_RECV" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use IP_SOF_BROADCAST_RECV requires IP_SOF_BROADCAST enabled." 
        	              DiagnosticCH="使用IP_SOF_BROADCAST_RECV，需要启用IP_SOF_BROADCAST。" 
        	              Expression="IP_SOF_BROADCAST=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, broadcast filter on recv operations is enabled." 
        	  	             NoteCH="启用此参数后，将在接收操作中启用广播过滤。"/>
    </RefParameter>
    <RefParameter Name="IP_SOF_BROADCAST_RECV" Comment="IP_SOF_BROADCAST_RECV" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, broadcast filter on recv operations is enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use IP_SOF_BROADCAST_RECV requires IP_SOF_BROADCAST enabled." 
        	  	             NoteCH="启用此参数后，将在接收操作中启用广播过滤。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IP_SOF_BROADCAST_RECV需要启用IP_SOF_BROADCAST。"/>
    </RefParameter>
    
    <RefParameter Name="IP_FORWARD_ALLOW_TX_ON_RX_NETIF" Comment="IP_FORWARD_ALLOW_TX_ON_RX_NETIF" Type="list" Group="IPv4 Options" GroupCH="IPv4 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this parameter allows ip_forward() to send packets back out on the netif where it was received. This should only be used for wireless networks.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: When this is &quot;Enabled&quot;, make sure your netif driver correctly marks incoming link-layer-broadcast/multicast packets as such using the corresponding pbuf flags!" 
        	  	             NoteCH="设置此参数允许ip_forward()通过接收到数据包的netif接口将该数据包发送出去。仅应用于无线网络。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 当此参数设置为&quot;开启&quot;时，确保netif驱动程序使用相应的pbuf标志正确标记传入的链路层广播/多播数据包。"/>
    </RefParameter>
    
    <!-- *************************** IPv4 - ICMP Options ******************************-->
    <RefParameter Name="ICMP_TTL" Comment="ICMP_TTL" Type="Integer" Unit="Node(s)" Group="IPv4 - ICMP Options" GroupCH="IPv4 - ICMP 选项" DefaultValue="=IP_DEFAULT_TTL" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="255" Reload="false" >
        <Annotation Note="Default value for Time-To-Live used by ICMP packets." 
        	  	             NoteCH="ICMP数据包TTL（生存时间）默认值。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_BROADCAST_PING" Comment="LWIP_BROADCAST_PING" Type="list" Group="IPv4 - ICMP Options" GroupCH="IPv4 - ICMP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this parameter allows responding to broadcast pings (default is unicast only)." 
        	  	             NoteCH="设置此参数允许响应广播ping（默认为仅单播）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_MULTICAST_PING" Comment="LWIP_MULTICAST_PING" Type="list" Group="IPv4 - ICMP Options" GroupCH="IPv4 - ICMP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this parameter to allow responding to multicast pings (default is unicast only)." 
        	  	             NoteCH="设置此参数允许响应组播ping（默认为仅单播）。"/>
    </RefParameter>
    
    <!-- *************************** Multicast Options ******************************-->
    <RefParameter Name="LWIP_MULTICAST_TX_OPTIONS" Comment="LWIP_MULTICAST_TX_OPTIONS" CommentCH="LWIP_MULTICAST_TX_OPTIONS" Type="list" Group="Multicast Options" GroupCH="组播选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use LWIP_MULTICAST_TX_OPTIONS requires LWIP_RAW and/or LWIP_UDP enabled." 
        	              DiagnosticCH="使用LWIP_MULTICAST_TX_OPTIONS需要LWIP_RAW或LWIP_UDP开启" 
        	              Expression="LWIP_UDP=1|LWIP_RAW=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this parameter to allow multicast TX support like the socket options IP_MULTICAST_TTL/IP_MULTICAST_IF/IP_MULTICAST_LOOP, as well as (currently only) core support for the corresponding IPv6 options." 
        	  	             NoteCH="设置此参数以开启组播发送（TX）支持，类似于套接字选项中IP_MULTICAST_TTL/IP_MULTICAST_IF/IP_MULTICAST_LOOP，并且为（仅为）对应的IPv6选项提供核心支持。"/>
    </RefParameter>
    <RefParameter Name="LWIP_MULTICAST_TX_OPTIONS" Comment="LWIP_MULTICAST_TX_OPTIONS" CommentCH="LWIP_MULTICAST_TX_OPTIONS" Type="list" Group="Multicast Options" GroupCH="组播选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Set this parameter to allow multicast TX support like the socket options IP_MULTICAST_TTL/IP_MULTICAST_IF/IP_MULTICAST_LOOP, as well as (currently only) core support for the corresponding IPv6 options.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_MULTICAST_TX_OPTIONS requires LWIP_RAW and/or LWIP_UDP enabled." 
        	  	             NoteCH="设置此参数以开启组播发送（TX）支持，类似于套接字选项中IP_MULTICAST_TTL/IP_MULTICAST_IF/IP_MULTICAST_LOOP，并且为（仅为）对应的IPv6选项提供核心支持。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;使用LWIP_MULTICAST_TX_OPTIONS需要LWIP_RAW或LWIP_UDP开启"/>
    </RefParameter>
    
    <!-- *************************** Callback - Raw Options ******************************-->
    <RefParameter Name="LWIP_RAW" Comment="LWIP_RAW" CommentCH="LWIP_RAW" Type="list" Group="Callback - Raw Options" GroupCH="回调 - Raw 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use LWIP_RAW requires MEMP_NUM_RAW_PCB&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="当MEMP_MEM_MALLOC关闭时，使用LWIP_RAW需要MEMP_NUM_RAW_PCB&gt;1。" 
        	              Expression="MEMP_MEM_MALLOC=0 &amp; MEMP_NUM_RAW_PCB>1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this parameter is enabled, the application layer to hook into the IP layer itself is enabled." 
        	  	             NoteCH="当此参数开启时，使应用层直接挂钩到IP层。"/>
    </RefParameter>
    <RefParameter Name="LWIP_RAW" Comment="LWIP_RAW" CommentCH="LWIP_RAW" Type="list" Group="Callback - Raw Options" GroupCH="回调 - Raw 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use LWIP_RAW requires MEMP_NUM_RAW_PCB&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="当MEMP_MEM_MALLOC关闭时, , 使用LWIP_RAW需要MEMP_NUM_RAW_PCB&gt;1。" 
        	              Expression="MEMP_MEM_MALLOC=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this parameter is enabled, the application layer to hook into the IP layer itself is enabled." 
        	  	             NoteCH="当此参数开启时，使应用层直接挂钩到IP层。"/>
    </RefParameter>
    <RefParameter Name="LWIP_RAW" Comment="LWIP_RAW" CommentCH="LWIP_RAW" Type="list" Group="Callback - Raw Options" GroupCH="回调 - Raw 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="If this parameter is enabled, the application layer to hook into the IP layer itself is enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: &lt;br&gt;Use LWIP_RAW requires MEMP_NUM_RAW_PCB&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	  	             NoteCH="当此参数开启时，使应用层直接挂钩到IP层。&lt;br&gt;&lt;b&gt;依赖条件&lt;/b&gt;: &lt;br&gt;当MEMP_MEM_MALLOC关闭时, , 使用LWIP_RAW需要MEMP_NUM_RAW_PCB&gt;1。"/>
    </RefParameter>
    
    <RefParameter Name="RAW_TTL" Comment="RAW_TTL" Type="Integer" Unit="Node(s)" Group="Callback - Raw Options" GroupCH="回调 - Raw 选项" DefaultValue="=IP_DEFAULT_TTL" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="255" Reload="false" >
        <Annotation Note="Default value for Time-To-Live used by Raw packets." 
        	  	             NoteCH="原始数据包TTL（生存时间）默认值。"/>
    </RefParameter>
    
    <!-- *************************** IPv4 - DHCP Options ******************************-->
    <RefParameter Name="DHCP_DOES_ARP_CHECK" Comment="DHCP_DOES_ARP_CHECK" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use DHCP_DOES_ARP_CHECK requires LWIP_DHCP and LWIP_ARP both enabled." 
        	              DiagnosticCH="使用DHCP_DOES_ARP_CHECK需要启用LWIP_DHCP 和 LWIP_ARP。" 
        	              Expression="LWIP_DHCP=1 &amp; LWIP_ARP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, an ARP check on the offered address is done." 
        	  	             NoteCH="当此参数开启时，将对提供的地址进行ARP检查。"/>
    </RefParameter>
    <RefParameter Name="DHCP_DOES_ARP_CHECK" Comment="DHCP_DOES_ARP_CHECK" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, an ARP check on the offered address is done.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use DHCP_DOES_ARP_CHECK requires LWIP_DHCP and LWIP_ARP both enabled." 
        	  	             NoteCH="当此参数开启时，将对提供的地址进行ARP检查。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用DHCP_DOES_ARP_CHECK需要启用LWIP_DHCP 和LWIP_ARP。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_BOOTP_FILE" Comment="LWIP_DHCP_BOOTP_FILE" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_DHCP_BOOTP_FILE cannot be used with IPv6." 
        	              DiagnosticCH="不支持同时使用LWIP_DHCP_BOOTP_FILE和IPv6。" 
        	              Expression="LWIP_IPV6=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, offered_si_addr and boot_file_name are stored." 
        	  	             NoteCH="当此参数开启时，offered_si_addr 和boot_file_name已存储。"/>
    </RefParameter>
    <RefParameter Name="LWIP_DHCP_BOOTP_FILE" Comment="LWIP_DHCP_BOOTP_FILE" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, offered_si_addr and boot_file_name are stored.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_DHCP_BOOTP_FILE cannot be used with IPv6." 
        	  	             NoteCH="当此参数开启时，offered_si_addr 和boot_file_name已存储。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 不支持同时使用LWIP_DHCP_BOOTP_FILE 和 IPv6。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_GET_NTP_SRV" Comment="LWIP_DHCP_GET_NTP_SRV" Type="list" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, request NTP servers with discover/select is performed. For each response packet, an callback is called, which has to be provided by the port: void dhcp_set_ntp_servers(u8_t num_ntp_servers, ip_addr_t* ntp_server_addrs)." 
        	  	             NoteCH="当此参数开启时，通过“发现 / 选择” 功能请求NTP服务器。对于每个响应数据包，都会调用一个回调函数，该回调函数必须由端口 void dhcp_set_ntp_servers(u8_t num_ntp_servers, ip_addr_t* ntp_server_addrs) 提供。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_MAX_NTP_SERVERS" Comment="LWIP_DHCP_MAX_NTP_SERVERS" Type="Integer" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="This parameter set the maximum of NTP servers requested." 
        	  	             NoteCH="此参数用于设置所请求的NTP服务器的最大数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_MAX_DNS_SERVERS" Comment="LWIP_DHCP_MAX_DNS_SERVERS" Type="Integer" Group="IPv4 - DHCP Options" GroupCH="IPv4 - DHCP 选项" DefaultValue="=DNS_MAX_SERVERS" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum of DNS servers requested.&lt;br&gt;0: Request DNS servers with discover/select.&lt;br&gt;DNS servers received in the response are passed to DNS via @ref dns_setserver()&lt;br&gt;(up to the maximum limit defined here)." 
        	  	             NoteCH="此参数用于设置所请求的DNS服务器的最大数量。&lt;br&gt;0: 通过“发现 / 选择” 功能请求DNS服务器。&lt;br&gt; 响应过程中接收到的DNS服务器会通过@ref dns_setserver()传递给DNS 。&lt;br&gt;（不超过此处定义的最大数量限制）"/>
    </RefParameter>
    
    <!-- *************************** IPv4 - AUTOIP Options ******************************-->
    <RefParameter Name="LWIP_AUTOIP" Comment="LWIP_AUTOIP" Type="list" Group="IPv4 - AUTOIP Options" GroupCH="IPv4 - AUTOIP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use LWIP_AUTOIP requires LWIP_ARP and LWIP_IPV4 enabled." 
        	              DiagnosticCH="使用LWIP_AUTOIP需要启用LWIP_ARP 和 LWIP_IPV4。"
        	              Expression="LWIP_ARP=1 &amp; LWIP_IPV4=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, AUTOIP (AUTOmatic linklocal IP) module is enabled." 
        	  	             NoteCH="当此参数开启时，启用AUTOIP （自动链路本地IP）模块。"/>
    </RefParameter>
    <RefParameter Name="LWIP_AUTOIP" Comment="LWIP_AUTOIP" Type="list" Group="IPv4 - AUTOIP Options" GroupCH="IPv4 - AUTOIP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, AUTOIP (AUTOmatic linklocal IP) module is enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_AUTOIP requires LWIP_ARP and LWIP_IPV4 enabled." 
        	  	             NoteCH="当此参数开启时，启用AUTOIP （自动链路本地IP）模块。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_AUTOIP 需要启用LWIP_ARP 和 LWIP_IPV4。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_AUTOIP_COOP" Comment="LWIP_DHCP_AUTOIP_COOP" Type="list" Group="IPv4 - AUTOIP Options" GroupCH="IPv4 - AUTOIP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_DHCP_AUTOIP_COOP requires LWIP_AUTOIP and LWIP_DHCP both enabled." 
        	              DiagnosticCH="使用LWIP_DHCP_AUTOIP_COOP需要启用LWIP_AUTOIP 和LWIP_DHCP。" 
        	              Expression="LWIP_AUTOIP=1 &amp; LWIP_DHCP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it allows DHCP and AUTOIP to be both enabled on the same interface at the same time." 
        	  	             NoteCH="当此参数开启时，允许在同一接口上同时启用DHCP和AUTOIP。"/>
    </RefParameter>
    <RefParameter Name="LWIP_DHCP_AUTOIP_COOP" Comment="LWIP_DHCP_AUTOIP_COOP" Type="list" Group="IPv4 - AUTOIP Options" GroupCH="IPv4 - AUTOIP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, it allows DHCP and AUTOIP to be both enabled on the same interface at the same time.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_DHCP_AUTOIP_COOP requires LWIP_AUTOIP and LWIP_DHCP both enabled." 
        	  	             NoteCH="当此参数开启时，允许在同一接口上同时启用DHCP和AUTOIP。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_DHCP_AUTOIP_COOP 需要启用LWIP_AUTOIP 和LWIP_DHCP。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP_AUTOIP_COOP_TRIES" Comment="LWIP_DHCP_AUTOIP_COOP_TRIES" Type="Integer" Group="IPv4 - AUTOIP Options" GroupCH="IPv4 - AUTOIP 选项" DefaultValue="9" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter sets to the number of DHCP DISCOVER probes that should be sent before falling back on AUTOIP (the DHCP client keeps running in this case). This can be set as low as 1 to get an AutoIP address very quickly, but you should be prepared to handle a changing IP address when DHCP overrides AutoIP." 
        	  	             NoteCH="该参数设置回退到AUTOIP之前（这种情况下DHCP客户端继续运行）应该发送的DHCP DISCOVER 探测数据包的数量。此参数可设置为1，便于快速获取AutoIP地址，但用户需做好准备处理DHCP覆盖AutoIP时的IP地址变化。"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - SNMP MIB2 Callbacks Options ******************************-->
    <RefParameter Name="LWIP_MIB2_CALLBACKS" Comment="LWIP_MIB2_CALLBACKS" Type="list" Group="Infrastructure - SNMP MIB2 Callbacks Options" GroupCH="基础配置 - SNMP MIB2 回调选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, this turn on SNMP MIB2 callbacks.&lt;br&gt;Turn this on to get callbacks needed to implement MIB2.&lt;br&gt;Usually MIB2_STATS should be enabled, too.&lt;br&gt;Please read the snmp_agent.txt before turning on." 
        	  	             NoteCH="当此参数开启时，将启用SNMP MIB2回调。&lt;br&gt; 启用此选项可获取实现MIB2所需的回调。&lt;br&gt; 通常也应启用MIB2_STATS。&lt;br&gt; 启用前，请先阅读 snmp_agent.txt。"/>
    </RefParameter>
    
    <!-- *************************** Callback - DNS Options ******************************-->
    <RefParameter Name="DNS_TABLE_SIZE" Comment="DNS_TABLE_SIZE" Type="Integer" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="DNS maximum number of entries to maintain locally." 
        	  	             NoteCH="DNS本地维护的最大条目数。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_MAX_NAME_LENGTH" Comment="DNS_MAX_NAME_LENGTH" Type="Integer" Unit="Byte(s)" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="256" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="DNS maximum host name length supported in the name table." 
        	  	             NoteCH="名称表支持的DNS主机名最大长度。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_MAX_SERVERS" Comment="DNS_MAX_SERVERS" Type="Integer" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="2" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="The maximum of DNS servers.&lt;br&gt;The first server can be initialized automatically by defining DNS_SERVER_ADDRESS(ipaddr), where ipaddr is an ip_addr_t*." 
        	  	             NoteCH="DNS服务器的最大数量。&lt;br&gt; 通过定义DNS_SERVER_ADDRESS(ipaddr)（其中ipaddr是ip_addr_t*）来自动初始化第一个DNS服务器。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_MAX_RETRIES" Comment="DNS_MAX_RETRIES" Type="Integer" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="DNS maximum number of retries when asking for a name, before timeout" 
        	  	             NoteCH="DNS在超时前请求名称的最大重试次数"/>
    </RefParameter>
    
    <RefParameter Name="DNS_DOES_NAME_CHECK" Comment="DNS_DOES_NAME_CHECK" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="DNS do a name checking between the query and the response." 
        	  	             NoteCH="查询和响应之间的DNS名称检查。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS_SECURE" Comment="LWIP_DNS_SECURE" Type="Integer" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="=LWIP_DNS_SECURE_RAND_XID|LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING|LWIP_DNS_SECURE_RAND_SRC_PORT" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter controls the security level of the DNS implementation.&lt;br&gt;All DNS security features are used by default performed thanks to a logical OR: LWIP_DNS_SECURE_RAND_XID | LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT.&lt;br&gt;This is overridable but should only be needed by very small targets or when using against non standard DNS servers." 
        	  	             NoteCH="此参数控制DNS实现的安全级别。&lt;br&gt; 默认情况下，通过逻辑或运算使用所有的DNS安全功能，即：LWIP_DNS_SECURE_RAND_XID | LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT。&lt;br&gt; 这是可以被覆盖重写的，但仅在极小目标或者使用非标准 DNS 服务器时才需要。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS_SECURE_RAND_XID" Comment="LWIP_DNS_SECURE_RAND_XID" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter sets the DNS random security level." 
        	  	             NoteCH="此参数设置DNS随机安全级别。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING" Comment="LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="2" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="2" CommentCH="开启"/>
        <Annotation Note="This parameter sets the DNS security level without multiple outstanding." 
        	  	             NoteCH="此参数设置DNS安全级别（不存在多个未完成状态）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS_SECURE_RAND_SRC_PORT" Comment="LWIP_DNS_SECURE_RAND_SRC_PORT" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="4" CommentCH="开启"/>
        <Annotation Note="This parameter sets the DNS security level with random source port." 
        	  	             NoteCH="此参数通过随机源端口设置DNS安全级别。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_LOCAL_HOSTLIST" Comment="DNS_LOCAL_HOSTLIST" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use DNS_LOCAL_HOSTLIST requires DNS_LOCAL_HOSTLIST_INIT or DNS_LOCAL_HOSTLIST_IS_DYNAMIC defined." 
        	              DiagnosticCH="使用DNS_LOCAL_HOSTLIST 需要定义DNS_LOCAL_HOSTLIST_INIT 或 DNS_LOCAL_HOSTLIST_IS_DYNAMIC。" 
        	              Expression="DNS_LOCAL_HOSTLIST_INIT=1 | DNS_LOCAL_HOSTLIST_IS_DYNAMIC = 1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, a local host-to-address list is implemented.&lt;br&gt;If enabled, you have to define an initializer DNS_LOCAL_HOSTLIST_INIT to {DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip4&quot;, IPADDR4_INIT_BYTES(1,2,3,4)),DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip6&quot;, IPADDR6_INIT_HOST(123, 234, 345, 456)}. This additional definition can be added inside a user section within lwipopts.h file&lt;br&gt;Instead, you can also use an external function: define DNS_LOOKUP_LOCAL_EXTERN(x) extern err_t my_lookup_function(const char *name, ip_addr_t *addr, u8_t dns_addrtype) that looks up the IP address and returns ERR_OK if found (LWIP_DNS_ADDRTYPE_xxx is passed in dns_addrtype)." 
        	  	             NoteCH="当此参数开启时，将实现一个本地主机名到IP地址列表。&lt;br&gt; 如果启用，用户需要将初始设定式 DNS_LOCAL_HOSTLIST_INIT 定义为 {DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip4&quot;, IPADDR4_INIT_BYTES(1,2,3,4)),DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip6&quot;, IPADDR6_INIT_HOST(123, 234, 345, 456)}。该附加定义可添加至 lwipopts.h 文件的“user”部分。&lt;br&gt; 此外，也可以使用一个外部函数：define DNS_LOOKUP_LOCAL_EXTERN(x) extern err_t my_lookup_function(const char *name, ip_addr_t *addr, u8_t dns_addrtype)，用于查找IP地址，并在找到IP地址时返回 ERR_OK（LWIP_DNS_ADDRTYPE_xxx 传入 dns_addrtype）。"/>
    </RefParameter>
    <RefParameter Name="DNS_LOCAL_HOSTLIST" Comment="DNS_LOCAL_HOSTLIST" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, a local host-to-address list is implemented.&lt;br&gt;If enabled, you have to define an initializer DNS_LOCAL_HOSTLIST_INIT to {DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip4&quot;, IPADDR4_INIT_BYTES(1,2,3,4)),DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip6&quot;, IPADDR6_INIT_HOST(123, 234, 345, 456)}&lt;br&gt;Instead, you can also use an external function: define DNS_LOOKUP_LOCAL_EXTERN(x) extern u32_t my_lookup_function(const char *name) that returns the IP address or INADDR_NONE if not found.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use DNS_LOCAL_HOSTLIST requires DNS_LOCAL_HOSTLIST_INIT or DNS_LOCAL_HOSTLIST_IS_DYNAMIC defined." 
        	  	             NoteCH="当此参数开启时，将实现一个本地主机名到IP地址列表。&lt;br&gt; 如果启用，用户需要将初始设定式DNS_LOCAL_HOSTLIST_INIT 定义为 {DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip4&quot;, IPADDR4_INIT_BYTES(1,2,3,4)),DNS_LOCAL_HOSTLIST_ELEM(&quot;host_ip6&quot;, IPADDR6_INIT_HOST(123, 234, 345, 456)}。&lt;br&gt; 此外，也可以使用一个外部函数：define DNS_LOOKUP_LOCAL_EXTERN(x) extern u32_t my_lookup_function(const char *name)，该函数返回IP地址，或者未查找到IP地址时返回 INADDR_NONE。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用DNS_LOCAL_HOSTLIST 需要定义 DNS_LOCAL_HOSTLIST_INIT 或 DNS_LOCAL_HOSTLIST_IS_DYNAMIC。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_LOCAL_HOSTLIST_IS_DYNAMIC" Comment="DNS_LOCAL_HOSTLIST_IS_DYNAMIC" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this is turned on, the local host-list can be dynamically changed at runtime.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use DNS_LOCAL_HOSTLIST requires DNS_LOCAL_HOSTLIST_INIT or DNS_LOCAL_HOSTLIST_IS_DYNAMIC defined." 
        	  	             NoteCH="当此参数开启时，可以在运行时动态更改本地主机列表。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用DNS_LOCAL_HOSTLIST需要定义DNS_LOCAL_HOSTLIST_INIT 或 DNS_LOCAL_HOSTLIST_IS_DYNAMIC。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DNS_SUPPORT_MDNS_QUERIES" Comment="LWIP_DNS_SUPPORT_MDNS_QUERIES" Type="list" Group="Callback - DNS Options" GroupCH="回调 - DNS 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable querying &quot;.local&quot; names via mDNS using a One-Shot Multicast DNS Query." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，利用多播DNS通过One-Shot mDNS查询&quot;.local&quot; 域名。"/>
    </RefParameter>
    
    <!-- *************************** Callback - UDP Options ******************************-->
    <RefParameter Name="LWIP_UDPLITE" Comment="LWIP_UDPLITE" Type="list" Group="Callback - UDP Options" GroupCH="回调 - UDP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_UDPLITE requires LWIP_UDP enabled." 
        	              DiagnosticCH="使用LWIP_UDPLITE 需要启用 LWIP_UDP。" 
        	              Expression="LWIP_UDP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, it turns on UDP-Lite (Requires LWIP_UDP)." 
        	  	             NoteCH="启用此参数时，将开启UDP-Lite（需要启用LWIP_UDP）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_UDPLITE" Comment="LWIP_UDPLITE" Type="list" Group="Callback - UDP Options" GroupCH="回调 - UDP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, it turns on UDP-Lite (Requires LWIP_UDP).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_UDPLITE requires LWIP_UDP enabled." 
        	  	             NoteCH="启用此参数时，将开启UDP-Lite（需要启用LWIP_UDP）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_UDPLITE 需要启用LWIP_UDP。"/>
    </RefParameter>
    
    <RefParameter Name="UDP_TTL" Comment="UDP_TTL" Type="Integer" Unit="Node(s)" Group="Callback - UDP Options" GroupCH="回调 - UDP 选项" DefaultValue="=IP_DEFAULT_TTL" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="255" Reload="false" >
        <Annotation Note="Default UDP Time-To-Live value." 
        	  	             NoteCH="UDP TTL（生存时间）默认值"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETBUF_RECVINFO" Comment="LWIP_NETBUF_RECVINFO" Type="list" Group="Callback - UDP Options" GroupCH="回调 - UDP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Append destination addr and port to every netbuf." 
        	  	             NoteCH="附加目的地址和端口到每个netbuf结构体。"/>
    </RefParameter>
    
    <!-- *************************** Callback - TCP Options ******************************-->
    <RefParameter Name="TCP_TTL" Comment="TCP_TTL" Type="Integer" Unit="Node(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=IP_DEFAULT_TTL" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="255" Reload="false" >
        <Annotation Note="Default TCP Time-To-Live value." 
        	  	             NoteCH="TCP TTL（生存时间）默认值"/>
    </RefParameter>

    <RefParameter Name="TCP_WND" Comment="TCP_WND" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=4*TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=TCP_MSS" Max="=MIN(MIN(IF(LWIP_WND_SCALE &amp; LWIP_TCP,4294967295,4294967295),IF(LWIP_TCP,65535,4294967295)),MIN(IF(LWIP_WND_SCALE &amp; LWIP_TCP,65535*INTPOW(2,TCP_RCV_SCALE),4294967295),IF(LWIP_TCP &amp; !MEMP_MEM_MALLOC &amp; PBUF_POOL_SIZE &amp; !LWIP_DISABLE_TCP_SANITY_CHECKS,PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN+PBUF_LINK_HLEN+PBUF_IP_HLEN+PBUF_TRANSPORT_HLEN)),4294967295)))" >
        <Condition Expression="LWIP_DISABLE_TCP_SANITY_CHECKS=0 &amp; LWIP_TCP=1"/>
        <Annotation Note="Size of a TCP window.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: when using TCP_RCV_SCALE, TCP_WND is the total size with scaling applied. Maximum window value in the TCP header will be TCP_WND &gt;&gt; TCP_RCV_SCALE.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;:&lt;br&gt;TCP_WND Min and Max values have some dependencies with other parameters (see init.c file for all details):&lt;br&gt;If you use TCP_WND with LWIP_TCP enabled:&lt;br&gt;- The minimum value advised by the stack is 2*TCP_MSS&lt;br&gt;- TCP_WND must fit in an u16_t or you have to enable window scaling&lt;br&gt;If you use TCP_WND with LWIP_TCP and LWIP_WND_SCALE enabled:&lt;br&gt;- TCP_WND must fit in an u32_t&lt;br&gt;- TCP_WND must be lower or equals than (0xFFFFU &lt;&lt; TCP_RCV_SCALE)&lt;br&gt;If you use TCP_WND with LWIP_TCP enabled and MEMP_MEM_MALLOC and LWIP_DISABLE_TCP_SANITY_CHECKS are disabled:- TCP_WND must be lower or equal than PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1." 
        	  	             NoteCH="TCP窗口大小。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 使用TCP_RCV_SCALE时，TCP_WND代表应用了缩放的总体大小。TCP头部的窗口最大值为TCP_WND &gt;&gt; TCP_RCV_SCALE。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; &lt;br&gt; TCP_WND的最大值和最小值与其他参数相关（详见init.c 文件）：&lt;br&gt; 使用TCP_WND 并启用LWIP_TCP时：&lt;br&gt;- 堆栈建议的最小值为 2*TCP_MSS&lt;br&gt;- TCP_WND必须是u16_t 类型数据，否则需要启用窗口缩放。&lt;br&gt; 使用TCP_WND 并启用LWIP_TCP 和 LWIP_WND_SCALE时：&lt;br&gt;- TCP_WND 必须是u32_t 类型数据。&lt;br&gt;- TCP_WND 必须小于或等于 (0xFFFFU &lt;&lt; TCP_RCV_SCALE)。&lt;br&gt; 使用TCP_WND并启用LWIP_TCP 且禁用MEMP_MEM_MALLOC 和 LWIP_DISABLE_TCP_SANITY_CHECKS时：- TCP_WND 必须小于或等于 PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))。&lt;br&gt; 在明确操作的情况下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1。"/>
    </RefParameter>
    <RefParameter Name="TCP_WND" Comment="TCP_WND" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=4*TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="=MIN(MIN(IF(LWIP_WND_SCALE &amp; LWIP_TCP,4294967295,4294967295),IF(LWIP_TCP,65535,4294967295)),MIN(IF(LWIP_WND_SCALE &amp; LWIP_TCP,65535*INTPOW(2,TCP_RCV_SCALE),4294967295),IF(LWIP_TCP &amp; !MEMP_MEM_MALLOC &amp; PBUF_POOL_SIZE &amp; !LWIP_DISABLE_TCP_SANITY_CHECKS,PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN+PBUF_LINK_HLEN+PBUF_IP_HLEN+PBUF_TRANSPORT_HLEN)),4294967295)))" >
        <Annotation Note="Size of a TCP window.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: when using TCP_RCV_SCALE, TCP_WND is the total size with scaling applied. Maximum window value in the TCP header will be TCP_WND &gt;&gt; TCP_RCV_SCALE.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;:&lt;br&gt;TCP_WND Min and Max values have some dependencies with other parameters (see init.c file for all details):&lt;br&gt;If you use TCP_WND with LWIP_TCP enabled:&lt;br&gt;- The minimum value advised by the stack is 2*TCP_MSS&lt;br&gt;- TCP_WND must fit in an u16_t or you have to enable window scaling&lt;br&gt;If you use TCP_WND with LWIP_TCP and LWIP_WND_SCALE enabled:&lt;br&gt;- TCP_WND must fit in an u32_t&lt;br&gt;- TCP_WND must be lower or equals than (0xFFFFU &lt;&lt; TCP_RCV_SCALE)&lt;br&gt;If you use TCP_WND with LWIP_TCP enabled and MEMP_MEM_MALLOC and LWIP_DISABLE_TCP_SANITY_CHECKS are disabled:- TCP_WND must be lower or equal than PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1." 
        	  	             NoteCH="TCP窗口大小。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 使用TCP_RCV_SCALE时，TCP_WND代表应用了缩放的总体大小。TCP头部的窗口最大值为 TCP_WND &gt;&gt; TCP_RCV_SCALE。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; &lt;br&gt; TCP_WND的最大值和最小值与其他参数相关（详见init.c 文件）：&lt;br&gt; 使用TCP_WND 并启用LWIP_TCP时：&lt;br&gt;- 堆栈建议的最小值为 2*TCP_MSS&lt;br&gt;- TCP_WND必须是u16_t 类型数据，否则需要启用窗口缩放。&lt;br&gt; 使用TCP_WND 并启用LWIP_TCP 和 LWIP_WND_SCALE时：&lt;br&gt;- TCP_WND 必须是u32_t类型数据。&lt;br&gt;- TCP_WND 必须小于或等于 (0xFFFFU &lt;&lt; TCP_RCV_SCALE)。&lt;br&gt; 使用TCP_WND 并启用LWIP_TCP 且禁用MEMP_MEM_MALLOC 和 LWIP_DISABLE_TCP_SANITY_CHECKS时：- TCP_WND 必须小于或等于 PBUF_POOL_SIZE*(PBUF_POOL_BUFSIZE-(PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))。&lt;br&gt; 在明确操作的情况下，将LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_MAXRTX" Comment="TCP_MAXRTX" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="12" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="1000000" Reload="false" >
        <Condition Expression="LWIP_TCP=0"/>
        <Annotation Note="Maximum number of retransmissions of data segments.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP=&quot;Enabled&quot;, TCP_MAXRTX must less or equal to 12." 
        	  	             NoteCH="数据段最大重传次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当 LWIP_TCP=&quot;开启&quot;时，TCP_MAXRTX 必须小于或等于 12。"/>
    </RefParameter>
    <RefParameter Name="TCP_MAXRTX" Comment="TCP_MAXRTX" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="12" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="12" Reload="false" >
        <Annotation Note="Maximum number of retransmissions of data segments.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP=&quot;Enabled&quot;, TCP_MAXRTX must less or equal to 12." 
        	  	             NoteCH="数据段最大重传次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_TCP=&quot;开启&quot;时，TCP_MAXRTX 必须小于或等于 12。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_SYNMAXRTX" Comment="TCP_SYNMAXRTX" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="1000000" Reload="false" >
        <Condition Expression="LWIP_TCP=0"/>
        <Annotation Note="Maximum number of retransmissions of SYN segments.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP=&quot;Enabled&quot;, TCP_SYNMAXRTX must less or equal to 12." 
        	  	             NoteCH="SYN段最大重传次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_TCP=&quot;开启&quot;时，TCP_SYNMAXRTX 必须小于或等于 12。"/>
    </RefParameter>
    <RefParameter Name="TCP_SYNMAXRTX" Comment="TCP_SYNMAXRTX" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="12" Reload="false" >
        <Annotation Note="Maximum number of retransmissions of SYN segments.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP=&quot;Enabled&quot;, TCP_SYNMAXRTX must less or equal to 12." 
        	  	             NoteCH="SYN段最大重传次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_TCP=&quot;开启&quot;时，TCP_SYNMAXRTX 必须小于或等于 12。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_QUEUE_OOSEQ" Comment="TCP_QUEUE_OOSEQ" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=LWIP_TCP" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this parameter is enabled, TCP will queue segments that arrive out of order. Define to 0 if your device is low on memory." 
        	  	             NoteCH="启用此参数时，TCP将对无序到达的段进行排队。如果设备内存不足，将此参数设置为&quot;关闭&quot;。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_SACK_OUT" Comment="LWIP_TCP_SACK_OUT" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="To use LWIP_TCP_SACK_OUT, LWIP_TCP and TCP_QUEUE_OOSEQ need to be enabled." 
        	              DiagnosticCH="使用LWIP_TCP_SACK_OUT需要启用LWIP_TCP 和 TCP_QUEUE_OOSEQ。" 
        	              Expression="TCP_QUEUE_OOSEQ=1 &amp; LWIP_TCP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="If this parameter is enabled, TCP will support sending selective acknowledgements (SACKs)." 
        	  	             NoteCH="启用此参数时，TCP将发送选择性确认（SACKs）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_TCP_SACK_OUT" Comment="LWIP_TCP_SACK_OUT" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="If this parameter is enabled, TCP will support sending selective acknowledgements (SACKs).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: To use LWIP_TCP_SACK_OUT, LWIP_TCP and TCP_QUEUE_OOSEQ need to be enabled." 
        	  	             NoteCH="启用此参数时，TCP将发送选择性确认（SACKs）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用 LWIP_TCP_SACK_OUT需要启用LWIP_TCP 和 TCP_QUEUE_OOSEQ。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_MAX_SACK_NUM" Comment="LWIP_TCP_MAX_SACK_NUM" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="1" Max="1000000" Reload="false" >
        <Condition Expression="LWIP_TCP=1 &amp; LWIP_TCP_SACK_OUT=1"/>
        <Annotation Note="Maximum number of SACK values to include in TCP segments. Must be at least 1, but is only used if LWIP_TCP_SACK_OUT is enabled.&lt;br&gt;NOTE: Even though we never send more than 3 or 4 SACK ranges in a single segment (depending on other options), setting this option to values greater than 4 is not pointless.&lt;br&gt;This is basically the max number of SACK ranges we want to keep track of. As new data is delivered, some of the SACK ranges may be removed or merged. In that case some of those older SACK ranges may be used again. The amount of memory used to store SACK ranges is LWIP_TCP_MAX_SACK_NUM * 8 bytes for each TCP PCB.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_TCP_MAX_SACK_NUM must be greater than 0.&lt;br&gt;To use LWIP_TCP_MAX_SACK_NUM, LWIP_TCP_SACK_OUT and LWIP_TCP need to be enabled." 
        	  	             NoteCH="TCP段中包含的SACK 值的最大数量。此参数至少为1，但仅在启用LWIP_TCP_SACK_OUT时使用。&lt;br&gt; 注：尽管单个数据段中从未发送超过3个或4个SACK范围（取决于其他选项设置），但也可以将此参数设置为大于4。&lt;br&gt; 基本上4个SACK范围就是需要跟踪的最大数量了。随着新数据的送达，部分SACK范围可能会被移除或合并。这种情况下，可能会再次用到之前的SACK范围。每个TCP PCB块用于储存SACK范围的内存大小为：LWIP_TCP_MAX_SACK_NUM * 8 字节。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; LWIP_TCP_MAX_SACK_NUM 必须大于0。&lt;br&gt; 使用LWIP_TCP_MAX_SACK_NUM需要启用LWIP_TCP_SACK_OUT 和 LWIP_TCP。"/>
    </RefParameter>
    <RefParameter Name="LWIP_TCP_MAX_SACK_NUM" Comment="LWIP_TCP_MAX_SACK_NUM" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="4" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="1000000" Reload="false" >
        <Annotation Note="Maximum number of SACK values to include in TCP segments. Must be at least 1, but is only used if LWIP_TCP_SACK_OUT is enabled.&lt;br&gt;NOTE: Even though we never send more than 3 or 4 SACK ranges in a single segment (depending on other options), setting this option to values greater than 4 is not pointless.&lt;br&gt;This is basically the max number of SACK ranges we want to keep track of. As new data is delivered, some of the SACK ranges may be removed or merged. In that case some of those older SACK ranges may be used again. The amount of memory used to store SACK ranges is LWIP_TCP_MAX_SACK_NUM * 8 bytes for each TCP PCB.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_TCP_MAX_SACK_NUM must be greater than 0.&lt;br&gt;To use LWIP_TCP_MAX_SACK_NUM, LWIP_TCP_SACK_OUT and LWIP_TCP need to be enabled." 
        	  	             NoteCH="TCP段中包含的SACK 值的最大数量。此参数至少为1，但仅在启用LWIP_TCP_SACK_OUT时使用。&lt;br&gt; 注：尽管单个数据段中从未发送超过3个或4个SACK范围（取决于其他选项设置），但也可以将此参数设置为大于4。 &lt;br&gt; 基本上4个SACK范围就是需要跟踪的最大数量了。随着新数据的送达，部分SACK范围可能会被移除或合并。 这种情况下，可能会再次用到之前的SACK范围。每个TCP PCB块用于储存SACK范围的内存大小为：LWIP_TCP_MAX_SACK_NUM * 8 字节。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; LWIP_TCP_MAX_SACK_NUM 必须大于0。&lt;br&gt; 使用LWIP_TCP_MAX_SACK_NUM需要启用LWIP_TCP_SACK_OUT 和 LWIP_TCP。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_MSS" Comment="TCP_MSS" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="536" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="1" Max="=IF( (PBUF_POOL_SIZE * 0.5 * (PBUF_POOL_BUFSIZE - (PBUF_LINK_HLEN + 20 + 20)))>1460,1460,(PBUF_POOL_SIZE * 0.5 * (PBUF_POOL_BUFSIZE - (PBUF_LINK_HLEN + 20 + 20))))" >
        <Annotation Note="TCP Maximum segment size. Default value is 536, this is a conservative value, you might want to increase this. For the receive side, this MSS is advertised to the remote side when opening a connection. For the transmit size, this MSS sets an upper limit on the MSS advertised by the remote host.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: With Ethernet, the maximum size of a TCP segment allowed is 1460. To handle corner cases, the maximum value is also limited to: PBUF_POOL_SIZE / 2 * (PBUF_POOL_BUFSIZE - (PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))." 
        	  	             NoteCH="TCP最大段大小。默认值为536（保守值，可根据需要增加）。对于接收端，会在建立连接时告知远程端TCP最大段大小（MMS）。对于传输大小，此参数设置了向远程主机通告的MSS上限。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 对于以太网，TCP MSS为1460字节。特殊情况下，TCP MSS值可取：PBUF_POOL_SIZE / 2 * (PBUF_POOL_BUFSIZE - (PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN))。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_CALCULATE_EFF_SEND_MSS" Comment="TCP_CALCULATE_EFF_SEND_MSS" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Maximum size of a segment that TCP really sends, the 'effective send MSS,' MUST be the smaller of the send MSS (which reflects the available reassembly buffer size at the remote host) and the largest size permitted by the IP layer (RFC 1122) Setting this to 1 enables code that checks TCP_MSS against the MTU of the netif used for a connection and limits the MSS if it would be too big otherwise." 
        	  	             NoteCH="TCP实际发送的数据段最大大小，即“有效发送MSS”，必须是发送MSS（反应远程主机上可用的重组缓冲区大小）和IP层允许的最大值（RFC 1122）中较小的值。将此参数设置为&quot;开启&quot;将启用一段代码，检查对比TCP_MSS与用于连接的netif的MTU，并限制MSS过大的情况。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_SND_BUF" Comment="TCP_SND_BUF" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=2*TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=TCP_MSS*2" Max="2147483647" >
        <Condition Expression="LWIP_DISABLE_TCP_SANITY_CHECKS=0 &amp; LWIP_TCP=1"/>
        <Annotation Note="TCP sender buffer space (bytes). To achieve good performance.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use TCP_SND_BUF requires TCP enabled. When LWIP_TCP is enabled, TCP_SND_BUF must be at least as much as (2 * TCP_MSS) for things to work smoothly.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to avoid Min value limitation.&lt;br&gt;TCP_SND_BUF value is also used to set value of TCP_SND_QUEUELEN and TCP_SNDLOWAT." 
        	  	             NoteCH="TCP发送缓冲空间（字节）。为实现良好性能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TCP_SND_BUF 需要启用TCP。当启用LWIP_TCP时，TCP_SND_BUF至少是 (2 * TCP_MSS) 才能保证正常运行。&lt;br&gt; 在明确操作的情况下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1，以避免最小值限制。&lt;br&gt; TCP_SND_BUF值还用于设置 TCP_SND_QUEUELEN 和 TCP_SNDLOWAT的值。"/>
    </RefParameter>
    <RefParameter Name="TCP_SND_BUF" Comment="TCP_SND_BUF" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=2*TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" >
        <Annotation Note="TCP sender buffer space (bytes). To achieve good performance.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use TCP_SND_BUF requires TCP enabled. When LWIP_TCP is enabled, TCP_SND_BUF must be at least as much as (2 * TCP_MSS) for things to work smoothly.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to avoid Min value limitation.&lt;br&gt;TCP_SND_BUF value is also used to set value of TCP_SND_QUEUELEN and TCP_SNDLOWAT." 
        	  	             NoteCH="TCP发送缓冲空间（字节）。为实现良好性能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TCP_SND_BUF 需要启用TCP。当启用LWIP_TCP时，TCP_SND_BUF至少是 (2 * TCP_MSS) 才能保证正常运行。&lt;br&gt; 在明确操作的情况下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1，以避免最小值限制。&lt;br&gt; TCP_SND_BUF 值还用于设置 TCP_SND_QUEUELEN  和 TCP_SNDLOWAT的值。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_SND_QUEUELEN" Comment="TCP_SND_QUEUELEN" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=((4*TCP_SND_BUF) + (TCP_MSS - 1))/TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=MAX(IF(LWIP_TCP, 2, 0), IF(!LWIP_DISABLE_TCP_SANITY_CHECKS &amp; LWIP_TCP,2*TCP_SND_BUF/TCP_MSS,0))" Max="=IF(LWIP_TCP, 65535, 2147483647)" >
        <Annotation Note="TCP sender buffer space (pbufs).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCP_SND_QUEUELEN must be at least as much as (2*TCP_SND_BUF/TCP_MSS) if LWIP_TCP is enabled and LWIP_DISABLE_TCP_SANITY_CHECKS disabled.&lt;br&gt;TCP_SND_QUEUELEN must be at least 2 for no-copy TCP writes to work, if LWIP_TCP is enabled.&lt;br&gt;TCP_SND_QUEUELEN must fit in an u16_t, if LWIP_TCP is enabled." 
        	  	             NoteCH="TCP发送缓冲空间（pbufs）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用LWIP_TCP 并禁用 LWIP_DISABLE_TCP_SANITY_CHECKS时，TCP_SND_QUEUELEN至少是 (2*TCP_SND_BUF/TCP_MSS)。&lt;br&gt; 如果启用了LWIP_TCP，TCP_SND_QUEUELEN至少设置为2才能进行零拷贝 TCP 写入操作。&lt;br&gt; 当LWIP_TCP启用时，TCP_SND_QUEUELEN 必须是 u16_t 类型数据。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_SNDLOWAT" Comment="TCP_SNDLOWAT" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=MIN(MAX(TCP_SND_BUF/2, (2*TCP_MSS)+1), TCP_SND_BUF-1)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=IF(!LWIP_DISABLE_TCP_SANITY_CHECKS &amp; LWIP_TCP, MIN(TCP_SND_BUF-1,65535-(4*TCP_MSS)-1), 2147483647)" >
        <Annotation Note="TCP writable space (bytes). This must be less than TCP_SND_BUF. It is the amount of space which must be available in the TCP snd_buf for select to return writable (combined with TCP_SNDQUEUELOWAT).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCP_SNDLOWAT is forced to be less than TCP_SND_BUF when LWIP_TCP is enabled and LWIP_DISABLE_TCP_SANITY_CHECKS is disabled.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to disable the Max value limitation." 
        	  	             NoteCH="TCP写空间（字节）。此参数必须小于TCP_SND_BUF。TCP写空间是指TCP snd_buf 中可用的空间大小 ，用于select函数返回可写状态（与TCP_SNDQUEUELOWAT一起使用）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用LWIP_TCP 并禁用 LWIP_DISABLE_TCP_SANITY_CHECKS时，TCP_SNDLOWAT 强制小于 TCP_SND_BUF。&lt;br&gt; 在明确操作的情况下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1，以关闭最大值限制。 "/>
    </RefParameter>
    
    <RefParameter Name="TCP_SNDQUEUELOWAT" Comment="TCP_SNDQUEUELOWAT" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=MAX(TCP_SND_QUEUELEN/2, 5)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=IF(!LWIP_DISABLE_TCP_SANITY_CHECKS &amp; LWIP_TCP, TCP_SND_QUEUELEN-1, 1000000)" >
        <Annotation Note="TCP writable bufs (pbuf count). This must be less than TCP_SND_QUEUELEN. If the number of pbufs queued on a pcb drops below this number, select returns writable (combined with TCP_SNDLOWAT).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCP_SNDQUEUELOWAT must be less than TCP_SND_QUEUELEN when LWIP_TCP is enabled and LWIP_DISABLE_TCP_SANITY_CHECKS is disabled.&lt;br&gt;If you know what you are doing, define LWIP_DISABLE_TCP_SANITY_CHECKS to 1 to disable the Max value limitation." 
        	  	             NoteCH="TCP写缓存（(pbuf数量）。此参数必须小于TCP_SND_QUEUELEN。如果PCB中排队的pbuf数量小于此参数，则select函数返回可写状态（与TCP_SNDLOWAT一起使用）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当启用LWIP_TCP并禁用LWIP_DISABLE_TCP_SANITY_CHECKS时，TCP_SNDQUEUELOWAT必须小于TCP_SND_QUEUELEN。&lt;br&gt; 在明确操作的情况下，将 LWIP_DISABLE_TCP_SANITY_CHECKS 定义为 1，以关闭最大值限制。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_OOSEQ_MAX_BYTES" Comment="TCP_OOSEQ_MAX_BYTES" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Maximum number of bytes queued on ooseq per pcb if TCP_OOSEQ_BYTES_LIMIT is not defined. Default is 0 (no limit).. Only valid for TCP_QUEUE_OOSEQ=&quot;Enabled&quot;." 
        	  	             NoteCH="各PCB的ooseq链表中排队最大字节数（未定义TCP_OOSEQ_BYTES_LIMIT）。默认值为0（无限制）。仅在TCP_QUEUE_OOSEQ=&quot;开启&quot;时有效。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_OOSEQ_BYTES_LIMIT(pcb)" Comment="TCP_OOSEQ_BYTES_LIMIT(pcb)" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=TCP_OOSEQ_MAX_BYTES" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum number of bytes to be queued on ooseq per pcb, given the pcb. Use this to override TCP_OOSEQ_MAX_BYTES to a dynamic value per pcb.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Only valid for TCP_QUEUE_OOSEQ=&quot;Enabled&quot; and TCP_OOSEQ_MAX_BYTES=1." 
        	  	             NoteCH="各PCB（给定PCB）的ooseq链表中可排队的最大字节数。使用此参数将TCP_OOSEQ_MAX_BYTES覆盖为每个PCB的动态值。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 仅在 TCP_QUEUE_OOSEQ=&quot;开启&quot; 且 TCP_OOSEQ_MAX_BYTES=1时有效。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_OOSEQ_MAX_PBUFS" Comment="TCP_OOSEQ_MAX_PBUFS" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Default maximum number of pbufs queued on ooseq per pcb if TCP_OOSEQ_BYTES_LIMIT is not defined. Default is 0 (no limit). Only valid for TCP_QUEUE_OOSEQ=&quot;Enabled&quot;." 
        	  	             NoteCH="各PCB的ooseq链表中排队最大字节数（未定义TCP_OOSEQ_BYTES_LIMIT）。默认值为0（无限制）。仅在TCP_QUEUE_OOSEQ=&quot;开启&quot;时有效。"/>
    </RefParameter>

    <RefParameter Name="TCP_OOSEQ_PBUFS_LIMIT(pcb)" Comment="TCP_OOSEQ_PBUFS_LIMIT(pcb)" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=TCP_OOSEQ_MAX_PBUFS" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum number of pbufs to be queued on ooseq per pcb, given the pcb. Use this to override TCP_OOSEQ_MAX_PBUFS to a dynamic value per pcb.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Only valid for TCP_QUEUE_OOSEQ=&quot;Enabled&quot; and TCP_OOSEQ_MAX_PBUFS=1." 
        	  	             NoteCH="各PCB（给定PCB）的ooseq链表中可排队的最大字节数。使用此参数将TCP_OOSEQ_MAX_PBUFS 覆盖为每个PCB的动态值。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 仅在 TCP_QUEUE_OOSEQ=&quot;开启&quot; 且 TCP_OOSEQ_MAX_PBUFS=1时有效。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_LISTEN_BACKLOG" Comment="TCP_LISTEN_BACKLOG" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="Use TCP_LISTEN_BACKLOG requires LWIP_TCP, and TCP_DEFAULT_LISTEN_BACKLOG must be less than 256 and greater or equal than 0." 
        	              DiagnosticCH="使用TCP_LISTEN_BACKLOG需要启用LWIP_TCP，且TCP_DEFAULT_LISTEN_BACKLOG必须大于等于0且小于256。" 
        	              Expression="LWIP_TCP=1 &amp; TCP_DEFAULT_LISTEN_BACKLOG &lt; 256 &amp; TCP_DEFAULT_LISTEN_BACKLOG &gt; -1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, the backlog option for tcp listen pcb is set." 
        	  	             NoteCH="当启用此参数时，将设置TCP listen PCB的backlog参数。"/>
    </RefParameter>    
    <RefParameter Name="TCP_LISTEN_BACKLOG" Comment="TCP_LISTEN_BACKLOG" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, the backlog option for tcp listen pcb is set.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use TCP_LISTEN_BACKLOG requires LWIP_TCP, and TCP_DEFAULT_LISTEN_BACKLOG must be less than 256 and greater or equal than 0." 
        	  	             NoteCH="当启用此参数时，将设置TCP listen PCB的backlog参数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TCP_LISTEN_BACKLOG 需要启用LWIP_TCP，且TCP_DEFAULT_LISTEN_BACKLOG必须大于等于0且小于256。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_DEFAULT_LISTEN_BACKLOG" Comment="TCP_DEFAULT_LISTEN_BACKLOG" Type="integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="255" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="255" >
        <Condition Expression="LWIP_TCP=1 &amp; TCP_LISTEN_BACKLOG=1"/>
        <Annotation Note="Maximum allowed backlog for TCP listen netconns. This backlog is used unless another is explicitly specified. 0xff is the maximum (u8_t).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Link with LWIP_TCP and TCP_LISTEN_BACKLOG parameters: when LWIP_TCP and TCP_LISTEN_BACKLOG are enabled, TCP_DEFAULT_LISTEN_BACKLOG must less than 256." 
        	  	             NoteCH="TCP listen网络连接允许的最大backlog值。除非明确指定了其他值，否则将使用此backlog值。最大值为0xff (u8_t)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 与参数LWIP_TCP 和 TCP_LISTEN_BACKLOG 相关：当 LWIP_TCP 和 TCP_LISTEN_BACKLOG启用时，TCP_DEFAULT_LISTEN_BACKLOG 必须小于256。"/>
    </RefParameter>
    <RefParameter Name="TCP_DEFAULT_LISTEN_BACKLOG" Comment="TCP_DEFAULT_LISTEN_BACKLOG" Type="integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="255" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="1000000" >
        <Annotation Note="Maximum allowed backlog for TCP listen netconns. This backlog is used unless another is explicitly specified. 0xff is the maximum (u8_t).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Link with LWIP_TCP and TCP_LISTEN_BACKLOG parameters: when LWIP_TCP and TCP_LISTEN_BACKLOG are enabled, TCP_DEFAULT_LISTEN_BACKLOG must less than 256." 
        	  	             NoteCH="TCP listen网络连接允许的最大backlog值。除非明确指定了其他值，否则将使用此backlog值。最大值为0xff (u8_t)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 与参数 LWIP_TCP 和 TCP_LISTEN_BACKLOG 相关：当 LWIP_TCP 和 TCP_LISTEN_BACKLOG启用时，TCP_DEFAULT_LISTEN_BACKLOG 必须小于256。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_OVERSIZE" Comment="TCP_OVERSIZE" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="TCP_MSS" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <PossibleValue Comment="128 Bytes" Value="128" CommentCH="128 Bytes"/>
        <PossibleValue Comment="TCP_MSS Bytes" Value="TCP_MSS" CommentCH="TCP_MSS Bytes"/>
        <PossibleValue Comment="(TCP_MSS/4) Bytes" Value="(TCP_MSS/4)" CommentCH="(TCP_MSS/4) Bytes"/>
        <Annotation Note="Maximum number of bytes that tcp_write may allocate ahead of time in an attempt to create shorter pbuf chains for transmission. The meaningful range is 0 to TCP_MSS.&lt;br&gt;Some suggested values are:&lt;br&gt;- 0: Disable oversized allocation. Each tcp_write() allocates a new pbuf (old behaviour)&lt;br&gt;- 1: Allocate size-aligned pbufs with minimal excess. Use this if your scatter-gather DMA requires aligned fragments&lt;br&gt;- 128: Limit the pbuf/memory overhead to 20%&lt;br&gt;- TCP_MSS: Try to create unfragmented TCP packets&lt;br&gt;- TCP_MSS/4: Try to create 4 fragments or less per TCP packet.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If TCP_OVERSIZE&gt;0 LWIP_NETIF_TX_SINGLE_PBUF can be used." 
        	  	             NoteCH="tcp_write可以提前分配的最大字节数，以尝试创建更短的pbuf链进行传输。有效范围：0 至 TCP_MSS。&lt;br&gt; 参数值设定如下：&lt;br&gt;- 0：禁止超出合理范围的分配。各tcp_write() 分配一个新的 pbuf（旧行为）&lt;br&gt;- 1：分配大小一致的pbuf，尽量减少多余空间。当分散/聚集式DMA访问需要大小一致的片段时使用此设置。&lt;br&gt;- 128：将pbuf/内存开销限制为20%。&lt;br&gt;- TCP_MSS：创建不分段的TCP数据包。&lt;br&gt;- TCP_MSS/4：每个TCP数据包包含4或及更少片段。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 如果TCP_OVERSIZE&gt;0，可以使用LWIP_NETIF_TX_SINGLE_PBUF。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_TIMESTAMPS" Comment="LWIP_TCP_TIMESTAMPS" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support the TCP timestamp option.&lt;br&gt;The timestamp option is currently only used to help remote hosts, it is not really used locally. Therefore, it is only enabled when a TS option is received in the initial SYN packet from a remote host." 
        	  	             NoteCH="支持 TCP 时间戳选项。&lt;br&gt; 时间戳选项目前仅用于协助远程主机，本地并不使用。因此，只有接收到远程主机初始SYN数据包中的时间戳选项时，才会启用本参数。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_WND_UPDATE_THRESHOLD" Comment="TCP_WND_UPDATE_THRESHOLD" Type="Integer" Unit="Byte(s)" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="=MIN(TCP_WND/4,TCP_MSS*4)" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Difference in window to trigger an explicit window update.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCP_WND_UPDATE_THRESHOLD is the min between (TCP_WND / 4) and (TCP_MSS * 4)." 
        	  	             NoteCH="触发显式窗口更新的窗口差异。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; TCP_WND_UPDATE_THRESHOLD 为 (TCP_WND / 4) 和 (TCP_MSS * 4) 之间的最小值。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_EVENT_API" Comment="LWIP_EVENT_API" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_EVENT_API=&quot;Enabled&quot;: The user defines lwip_tcp_event() to receive all events (accept, sent, etc) that happen in the system.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled when LWIP_TCP is enabled." 
        	  	             NoteCH="LWIP_EVENT_API=&quot;开启&quot;：用户定义lwip_tcp_event()来接受系统中发生的所有事件（接收、发送等）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_TCP时，必须启用 LWIP_EVENT_API 和 LWIP_CALLBACK_API 中的一个。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_CALLBACK_API" Comment="LWIP_CALLBACK_API" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled when LWIP_TCP is enabled." 
        	              DiagnosticCH="启用LWIP_TCP时，必须启用LWIP_EVENT_API 和 LWIP_CALLBACK_API中的一个。" 
        	              Expression="LWIP_TCP=1 &amp; LWIP_EVENT_API=0"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_CALLBACK_API=&quot;Enabled&quot;: The PCB callback function is called directly for the event. This is the default." 
        	  	             NoteCH="LWIP_CALLBACK_API=&quot;开启&quot;：针对事件直接调用PCB回调函数。这是默认设置。"/>
    </RefParameter>
    <RefParameter Name="LWIP_CALLBACK_API" Comment="LWIP_CALLBACK_API" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="LWIP_CALLBACK_API=&quot;Enabled&quot;: The PCB callback function is called directly for the event. This is the default.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled when LWIP_TCP is enabled." 
        	  	             NoteCH="LWIP_CALLBACK_API=&quot;开启&quot;：针对事件直接调用PCB回调函数。这是默认设置。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_TCP时，必须启用LWIP_EVENT_API 和 LWIP_CALLBACK_API中的一个。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_WND_SCALE" Comment="LWIP_WND_SCALE" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set LWIP_WND_SCALE to &quot;Enabled&quot; to enable window scaling.&lt;br&gt;When LWIP_WND_SCALE is enabled but TCP_RCV_SCALE is 0, we can use a large send window while having a small receive window only." 
        	  	             NoteCH="设置LWIP_WND_SCALE=&quot;开启&quot;开启窗口缩放。&lt;br&gt; 当启用LWIP_WND_SCALE 但TCP_RCV_SCALE=0时，可以使用一个大的发送窗口和小的接收窗口。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_RCV_SCALE" Comment="TCP_RCV_SCALE" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="14" >
        <Condition Expression="LWIP_TCP=1"/>
        <Annotation Note="Set TCP_RCV_SCALE to the desired scaling factor, shift count in the range of 0..14.&lt;br&gt;When LWIP_WND_SCALE is enabled but TCP_RCV_SCALE is 0, we can use a large send window while having a small receive window only.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP is enabled, maximum valid window scale value is 14." 
        	  	             NoteCH="将 TCP_RCV_SCALE 设置为所需的缩放因子，移位计数范围是0至14。&lt;br&gt;当启用LWIP_WND_SCALE 但TCP_RCV_SCALE=0时，可以使用一个大的发送窗口和小的接收窗口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_TCP启用时，最大有效窗口缩放因子为14。"/>
    </RefParameter>
    <RefParameter Name="TCP_RCV_SCALE" Comment="TCP_RCV_SCALE" Type="Integer" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Set TCP_RCV_SCALE to the desired scaling factor, shift count in the range of 0..14.&lt;br&gt;When LWIP_WND_SCALE is enabled but TCP_RCV_SCALE is 0, we can use a large send window while having a small receive window only.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: If LWIP_TCP is enabled, maximum valid window scale value is 14." 
        	  	             NoteCH="将TCP_RCV_SCALE设置为所需的缩放因子，移位计数范围是0至14。&lt;br&gt;当启用LWIP_WND_SCALE 但TCP_RCV_SCALE=0时，可以使用一个大的发送窗口和小的接收窗口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当LWIP_TCP启用时，最大有效窗口缩放因子为14。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_PCB_NUM_EXT_ARGS" Comment="LWIP_TCP_PCB_NUM_EXT_ARGS" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this is &gt; 0, every tcp pcb (including listen pcb) includes a number of additional argument entries in an array (see tcp_ext_arg_alloc_id).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: None" 
        	  	             NoteCH="当此参数&gt; 0时，每个TCP PCB（包括Listen PCB）在数组中包含一些额外的参数项（参见 tcp_ext_arg_alloc_id）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 无。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ALTCP" Comment="LWIP_ALTCP" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <Condition Diagnostic="The application layered tcp API does not work with LWIP_EVENT_API." 
        	              DiagnosticCH="此应用层TCP API无法与 LWIP_EVENT_API协同工作。" 
        	              Expression="LWIP_EVENT_API=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable the altcp API. altcp is an abstraction layer that prevents applications linking against the tcp.h functions but provides the same functionality. It is used to e.g. add SSL/TLS or proxy-connect support to an application written for the tcp callback API without that application knowing the protocol details.&lt;br&gt;With LWIP_ALTCP=&quot;Disabled&quot;, applications written against the altcp API can still be compiled but are directly linked against the tcp.h callback API and then cannot use layered protocols." 
        	  	             NoteCH="启用应用层 TCP API。应用层 TCP（altcp）是一个抽象层，防止应用程序链接到tcp.h 函数，但具有相同的功能，能够用于为TCP回调API所编写的应用程序添加SSL/TLS或代理连接支持，无需了解协议细节。&lt;br&gt; 当LWIP_ALTCP=&quot;关闭&quot;时，针对altcp API编写的应用程序仍然可以编译，但会直接链接到tcp.h回调API，这样一来，这些应用程序就无法使用分层协议。"/>
    </RefParameter>
	<RefParameter Name="LWIP_ALTCP" Comment="LWIP_ALTCP" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable the altcp API. altcp is an abstraction layer that prevents applications linking against the tcp.h functions but provides the same functionality. It is used to e.g. add SSL/TLS or proxy-connect support to an application written for the tcp callback API without that application knowing the protocol details.&lt;br&gt;With LWIP_ALTCP=&quot;Disabled&quot;, applications written against the altcp API can still be compiled but are directly linked against the tcp.h callback API and then cannot use layered protocols." 
        	  	             NoteCH="启用altcp API。altcp是一个抽象层，防止应用程序链接到tcp.h函数，但提供相同的功能。例如，可用于为tcp 回调API编写的应用程序添加SSL/TLS或代理连接支持，无需应用程序了解协议细节。&lt;br&gt;当LWIP_ALTCP=&quot;关闭&quot;时，仍然可以编译基于 altcp API 编写的应用程序，但直接链接到tcp.h 回调API，因此不能使用分层协议。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ALTCP_TLS" Comment="LWIP_ALTCP_TLS" Type="list" Group="Callback - TCP Options" GroupCH="回调 - TCP 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable TLS support for altcp API. This needs a port of the functions in altcp_tls.h to a TLS library. A port to ARM mbedtls is provided with lwIP, see apps/altcp_tls/ directory and LWIP_ALTCP_TLS_MBEDTLS option.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: None" 
        	  	             NoteCH="启用altcp API支持TLS。需要将altcp_tls.h 中的函数移植到TLS库中。lwIP提供了移植到ARM mbedtls的方法，参见apps/altcp_tls/目录和LWIP_ALTCP_TLS_MBEDTLS选项。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 无。"/>
    </RefParameter>
    
    <!-- *************************** Network Interfaces Options ******************************-->
    <RefParameter Name="LWIP_SINGLE_NETIF" Comment="LWIP_SINGLE_NETIF" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option uses use a single netif only. This is the common case for small real-life targets. Some code like routing etc. can be left out." 
        	  	             NoteCH="此选项仅使用一个netif，常见于小型现实应用目标。可以省略部分代码，如路由等。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_HOSTNAME" Comment="LWIP_NETIF_HOSTNAME" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option uses DHCP_OPTION_HOSTNAME with netif's hostname field." 
        	  	             NoteCH="此选项使用DHCP_OPTION_HOSTNAME和netif主机名字段。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_API" Comment="LWIP_NETIF_API" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_NETIF_API requires NO_SYS=0" 
        	              DiagnosticCH="使用LWIP_NETIF_API需要设置NO_SYS=0。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is set to &quot;Enabled&quot;, netif api is supported (in netifapi.c)." 
        	  	             NoteCH="当此参数设置为&quot;开启&quot;时，支持netif api （netifapi.c）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETIF_API" Comment="LWIP_NETIF_API" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is not set, netif api is not supported (in netifapi.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Since NO_SYS=1, you cannot use NETIF API." 
        	  	             NoteCH="当此参数设置为0时，不支持netif api （netifapi.c）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 由于NO_SYS=1，无法使用NETIF API。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_STATUS_CALLBACK" Comment="LWIP_NETIF_STATUS_CALLBACK" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set parameter allow to support a callback function whenever an interface changes its up/down status (i.e., due to DHCP IP acquisition)." 
        	  	             NoteCH="设置此参数，支持接口UP/DOWN状态发生变化（即DHCP IP获取）时调用回调函数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_EXT_STATUS_CALLBACK" Comment="LWIP_NETIF_EXT_STATUS_CALLBACK" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set parameter allow to support an extended callback function for several netif related event that supports multiple subscribers." 
        	  	             NoteCH="设置此参数，支持多个netif相关事件（多个订阅者）的扩展回调函数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_LINK_CALLBACK" Comment="LWIP_NETIF_LINK_CALLBACK" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set parameter allow to support a callback function from an interface whenever the link changes (i.e., link down)." 
        	  	             NoteCH="设置此参数，在链路发生变化（即链路断开）时支持接口的回调函数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_REMOVE_CALLBACK" Comment="LWIP_NETIF_REMOVE_CALLBACK" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set parameter allow to support a callback function that is called when a netif has been removed." 
        	  	             NoteCH="设置此参数，支持在netif被移除时调用回调函数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_HWADDRHINT" Comment="LWIP_NETIF_HWADDRHINT" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set parameter allow to support cache link-layer-address hints (e.g. table indices) in struct netif. TCP and UDP can make use of this to prevent scanning the ARP table for every sent packet. While this is faster for big ARP tables or many concurrent connections, it might be counterproductive if you have a tiny ARP table or if there never are concurrent connections." 
        	  	             NoteCH="设置此参数，支持在netif结构中缓存链路层地址提示（例如表索引）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_TX_SINGLE_PBUF" Comment="LWIP_NETIF_TX_SINGLE_PBUF" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_NETIF_TX_SINGLE_PBUF requires TCP_OVERSIZE&gt;0." 
        	              DiagnosticCH="使用LWIP_NETIF_TX_SINGLE_PBUF需要设置TCP_OVERSIZE&gt;0。" 
        	              Expression="LWIP_TCP=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, lwIP tries to put all data to be sent into one single pbuf. This is for compatibility with DMA-enabled MACs that do not support scatter-gather. Beware that this might involve CPU-memcpy before transmitting that would not be needed without this flag! Use this only if you need to!&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: a driver should NOT rely on getting single pbufs but check TX pbufs for being in one piece. If not, @ref pbuf_clone can be used to get a single pbuf." 
        	  	             NoteCH="开启此参数时，lwIP尝试将所有待发送数据放到一个pbuf中。目的是兼容启用DMA但不支持分散/聚集模式的MAC设备。需要注意的是，传输之前可能会涉及到CPU memcpy（如果此参数标志未置起，则不需要）。仅在有需要的情况下使用此功能。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt; 驱动程序不应依赖于获取单个pbuf，而应检查TX pbuf是否完整。如果不完整，可以使用 @ref pbuf_clone 获得一个pbuf。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETIF_TX_SINGLE_PBUF" Comment="LWIP_NETIF_TX_SINGLE_PBUF" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_NETIF_TX_SINGLE_PBUF requires TCP_OVERSIZE&gt;0." 
        	              DiagnosticCH="使用LWIP_NETIF_TX_SINGLE_PBUF 需要设置TCP_OVERSIZE&gt;0。" 
        	              Expression="LWIP_TCP=1 &amp; TCP_OVERSIZE != 0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, lwIP tries to put all data to be sent into one single pbuf. This is for compatibility with DMA-enabled MACs that do not support scatter-gather. Beware that this might involve CPU-memcpy before transmitting that would not be needed without this flag! Use this only if you need to!&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: a driver should NOT rely on getting single pbufs but check TX pbufs for being in one piece. If not, @ref pbuf_clone can be used to get a single pbuf." 
        	  	             NoteCH="开启此参数时，lwIP尝试将所有待发送数据放到一个pbuf中。目的是兼容启用DMA但不支持分散/聚集模式的MAC设备。需要注意的是，传输之前可能会涉及到CPU memcpy（如果此参数标志未置起，则不需要）。仅在有需要的情况下使用此功能。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt; 驱动程序不应依赖于获取单个pbuf，而应检查TX pbuf是否完整。如果不完整，可以使用 @ref pbuf_clone 获得一个pbuf。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETIF_TX_SINGLE_PBUF" Comment="LWIP_NETIF_TX_SINGLE_PBUF" Type="list" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, lwIP tries to put all data to be sent into one single pbuf. This is for compatibility with DMA-enabled MACs that do not support scatter-gather. Beware that this might involve CPU-memcpy before transmitting that would not be needed without this flag! Use this only if you need to!&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: a driver should NOT rely on getting single pbufs but check TX pbufs for being in one piece. If not, @ref pbuf_clone can be used to get a single pbuf.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_NETIF_TX_SINGLE_PBUF requires TCP_OVERSIZE&gt;0." 
        	  	             NoteCH="开启此参数时，lwIP尝试将所有待发送数据放到一个pbuf中。目的是兼容启用DMA但不支持分散/聚集模式的MAC设备。需要注意的是，传输之前可能会涉及到CPU memcpy（如果此参数标志未置起，则不需要）。仅在有需要的情况下使用此功能。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt; 驱动程序不应依赖于获取单个pbuf，而应检查TX pbuf是否完整。如果不完整，可以使用 @ref pbuf_clone 获得一个pbuf。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用 LWIP_NETIF_TX_SINGLE_PBUF 需要设置TCP_OVERSIZE&gt;0。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NUM_NETIF_CLIENT_DATA" Comment="LWIP_NUM_NETIF_CLIENT_DATA" Type="Integer" Group="Network Interfaces Options" GroupCH="网络接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of clients that may store data in client_data member array of struct netif (max. 256)." 
        	  	             NoteCH="可以在netif结构体client_data成员数组中储存数据的客户端数量（最大值：256）。"/>
    </RefParameter>
    
    <!-- *************************** NETIF - Loopback Interface Options ******************************-->
    <RefParameter Name="LWIP_HAVE_LOOPIF" Comment="LWIP_HAVE_LOOPIF" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Expression="LWIP_NETIF_LOOPBACK=1 &amp; LWIP_SINGLE_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, LwIP supports loop interface (127.0.0.1). This is only needed when no real netifs are available. If at least one other netif is available, loopback traffic uses this netif." 
        	  	             NoteCH="开启此参数时，LwIP支持回环接口（127.0.0.1）。只有在没有任何可用netif的情况下才开启此参数。如果至少有一个netif可用，则回环流量使用此netif。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HAVE_LOOPIF" Comment="LWIP_HAVE_LOOPIF" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, LwIP supports loop interface (127.0.0.1). This is only needed when no real netifs are available. If at least one other netif is available, loopback traffic uses this netif." 
        	  	             NoteCH="开启此参数时，LwIP支持回环接口（127.0.0.1）。只有在没有任何可用netif的情况下才开启此参数。如果至少有一个netif可用，则回环流量使用此netif。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_LOOPIF_MULTICAST" Comment="LWIP_LOOPIF_MULTICAST" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, LwIP supports multicast/IGMP on loop interface (127.0.0.1)." 
        	  	             NoteCH="开启此参数时，LwIP支持回环接口（127.0.0.1）的组播（Multicast）/IGMP功能。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_LOOPBACK" Comment="LWIP_NETIF_LOOPBACK" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support sending packets with a destination IP address equal to the netif IP address, looping them back up the stack." 
        	  	             NoteCH="支持发送目的IP地址与netif IP地址相同的数据包，并将数据包沿协议栈向上回环传输。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_LOOPBACK_MAX_PBUFS" Comment="LWIP_LOOPBACK_MAX_PBUFS" Type="Integer" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum number of pbufs on queue for loopback sending for each netif (0 = disabled)." 
        	  	             NoteCH="每个netif回环发送队列上允许的pbuf最大数量（0：关闭此功能）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETIF_LOOPBACK_MULTITHREADING" Comment="LWIP_NETIF_LOOPBACK_MULTITHREADING" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_NETIF_LOOPBACK_MULTITHREADING is enabled when NO_SYS=0." 
        	              DiagnosticCH="当NO_SYS=0时，启用LWIP_NETIF_LOOPBACK_MULTITHREADING。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This option indicates whether threading is enabled in the system, as netifs must change how they behave depending on this setting for the LWIP_NETIF_LOOPBACK option to work.&lt;br&gt;Setting this is needed to avoid reentering non-reentrant functions like tcp_input().&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;Enabled&quot;: Indicates that the user is using a multithreaded environment like tcpip.c. In this case, netif-&gt;input() is called directly.&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;Disabled&quot;: Indicates a polling (or NO_SYS=1) setup. The packets are put on a list and netif_poll() must be called in the main application loop." 
        	  	             NoteCH="此选项用于指示系统中是否启用了线程。netif需要根据线程启用与否来改变其行为，以便正常使用LWIP_NETIF_LOOPBACK选项。&lt;br&gt; 需要设置此选项，避免重新输入不可重入函数，如 tcp_input()。&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;开启&quot;：用户使用多线程环境，如 tcpip.c。在这种情况下，直接调用 netif-&gt;input()。&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;关闭&quot;：轮询（或 NO_SYS=1）设置。数据包被放在一个列表中，并且必须在主应用程序循环中调用 netif_poll()。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETIF_LOOPBACK_MULTITHREADING" Comment="LWIP_NETIF_LOOPBACK_MULTITHREADING" Type="list" Group="NETIF - Loopback Interface Options" GroupCH="NETIF - 回环接口选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This option indicates whether threading is enabled in the system, as netifs must change how they behave depending on this setting for the LWIP_NETIF_LOOPBACK option to work.&lt;br&gt;Setting this is needed to avoid reentering non-reentrant functions like tcp_input().&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;Enabled&quot;: Indicates that the user is using a multithreaded environment like tcpip.c. In this case, netif-&gt;input() is called directly.&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;Disabled&quot;: Indicates a polling (or NO_SYS=1) setup. The packets are put on a list and netif_poll() must be called in the main application loop.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_NETIF_LOOPBACK_MULTITHREADING is disabled when NO_SYS=1." 
        	  	             NoteCH="此选项用于指示系统中是否启用了线程。netif需要根据线程启用与否来改变其行为，以便正常使用LWIP_NETIF_LOOPBACK选项。&lt;br&gt; 需要设置此选项，避免重新输入不可重入函数，如 tcp_input()。&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;开启&quot;：用户使用多线程环境，如 tcpip.c。在这种情况下，直接调用 netif-&gt;input()。&lt;br&gt;LWIP_NETIF_LOOPBACK_MULTITHREADING=&quot;关闭&quot;：轮询（或 NO_SYS=1）设置。数据包被放在一个列表中，并且必须在主应用程序循环中调用 netif_poll()。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 当NO_SYS=1时，关闭LWIP_NETIF_LOOPBACK_MULTITHREADING。"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Threading Options ******************************-->
    <RefParameter Name="TCPIP_THREAD_NAME" Comment="TCPIP_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;tcpip_thread&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <Condition Diagnostic="TCPIP_THREAD_NAME is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用TCPIP_THREAD_NAME。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Name assigned to the main tcpip thread." 
        	  	             NoteCH="主tcpip线程指定名称"/>
    </RefParameter>
    <RefParameter Name="TCPIP_THREAD_NAME" Comment="TCPIP_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;tcpip_thread&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <Annotation Note="Name assigned to the main tcpip thread.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCPIP_THREAD_NAME is used only if NO_SYS=0." 
        	  	             NoteCH="主tcpip线程指定名称。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用TCPIP_THREAD_NAME。"/>
    </RefParameter>
    
    <RefParameter Name="TCPIP_THREAD_STACKSIZE" Comment="TCPIP_THREAD_STACKSIZE" Type="Integer" Unit="Word(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1024" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=FREERTOS$context:configMINIMAL_STACK_SIZE" Max="=FREERTOS$context:TOTAL_HEAP_SIZE/4" >
        <Condition Diagnostic="TCPIP_THREAD_STACKSIZE is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; This parameter has been set with a non zero value to avoid functional issue with FREERTOS.&lt;br&gt;Up to user to fine tune this parameter value considering all dependencies.&lt;br&gt;&lt;b&gt;Min value:&lt;/b&gt; The Min TCPIP Thread Stack Size value is the Min Stack Size of FREERTOS.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt; The Max TCPIP Thread Stack Size value is the Total Heap Size of FREERTOS divided by 4." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用TCPIP_THREAD_STACKSIZE。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt; 该参数设置为非零值，避免FREERTOS功能性问题。&lt;br&gt; 用户可根据依赖条件对此参数进行微调。&lt;br&gt;&lt;b&gt;最小值：&lt;/b&gt; TCPIP最小线程堆栈大小等于FREERTOS的最小堆栈大小。&lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt; TCPIP最大线程堆栈大小等于FREERTOS总堆大小除以4。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Stack size used by the main tcpip thread (Word 32 bits). The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="主tcpip线程使用的堆栈大小（字，32位）。堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="TCPIP_THREAD_STACKSIZE" Comment="TCPIP_THREAD_STACKSIZE" Type="Integer" Unit="Byte(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Stack size used by the main tcpip thread. The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCPIP_THREAD_STACKSIZE is used only if NO_SYS=0." 
        	  	             NoteCH="主tcpip线程使用的堆栈大小。堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用TCPIP_THREAD_STACKSIZE。"/>
    </RefParameter>
    
    <RefParameter Name="TCPIP_THREAD_PRIO" Comment="TCPIP_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="3" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="=FREERTOS$context:configMAX_PRIORITIES-1" >
        <Condition Diagnostic="TCPIP_THREAD_PRIO is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; The default value is aligned on FreeRTOS default Task Priority.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt; The Max of TCPIP Thread Priority strictly less than the current FREERTOS MAX_PRIORITIES parameter." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用TCPIP_THREAD_PRIO。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt; 默认值与 FreeRTOS默认任务优先级保持一致。 &lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt; TCPIP线程最高优先级必须小于当前FREERTOS MAX_PRIORITIES参数。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Priority assigned to the main tcpip thread. The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="主tcpip线程指定优先级。优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="TCPIP_THREAD_PRIO" Comment="TCPIP_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Priority assigned to the main tcpip thread. The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCPIP_THREAD_PRIO is used only if NO_SYS=0." 
        	  	             NoteCH="主tcpip线程指定优先级。优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;T只有在NO_SYS=0时才使用CPIP_THREAD_PRIO。"/>
    </RefParameter>
    
    <RefParameter Name="TCPIP_MBOX_SIZE" Comment="TCPIP_MBOX_SIZE" Type="Integer" Unit="Byte(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="TCPIP_MBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0才使用TCPIP_MBOX_SIZE。" 
        	              Expression="NO_SYS=0"/>
         <Annotation Note="Mailbox size for the tcpip thread messages. The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when tcpip_init is called.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples." 
        	  	             NoteCH="tcpip线程消息邮箱大小。队列大小值取决于具体的平台，但在调用tcpip_init时，这个值会传递给 sys_mbox_new()函数。&lt;br&gt; 为确保功能正常，例如AT32 Work Bench固件包LwIP示例，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="TCPIP_MBOX_SIZE" Comment="TCPIP_MBOX_SIZE" Type="Integer" Unit="Byte(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Mailbox size for the tcpip thread messages. The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when tcpip_init is called.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCPIP_MBOX_SIZE is used only if NO_SYS=0." 
        	  	             NoteCH="tcpip线程消息邮箱大小。队列大小值取决于具体的平台，但在调用tcpip_init时，这个值会传递给 sys_mbox_new()函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用TCPIP_MBOX_SIZE。"/>
    </RefParameter>
    
    <RefParameter Name="SLIPIF_THREAD_NAME" Comment="SLIPIF_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;slipif_loop&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SLIPIF_THREAD_NAME is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在 NO_SYS=0时才使用SLIPIF_THREAD_NAME。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Name assigned to the slipif_loop thread." 
        	  	             NoteCH="slipif_loop线程指定名称。"/>
    </RefParameter>
    <RefParameter Name="SLIPIF_THREAD_NAME" Comment="SLIPIF_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;slipif_loop&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Name assigned to the slipif_loop thread.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SLIPIF_THREAD_NAME is used only if NO_SYS=0." 
        	  	             NoteCH="slipif_loop线程指定名称。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用SLIPIF_THREAD_NAME。"/>
    </RefParameter>
    
    <RefParameter Name="SLIPIF_THREAD_STACKSIZE" Comment="SLIPIF_THREAD_STACKSIZE" Type="Integer" Unit="Word(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1024" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="=FREERTOS$context:configMINIMAL_STACK_SIZE" Max="=FREERTOS$context:TOTAL_HEAP_SIZE/4" >
        <Condition Diagnostic="SLIPIF_THREAD_STACKSIZE is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; This parameter has been set with a non zero value to avoid functional issue with FREERTOS.&lt;br&gt;Up to user to fine tune this parameter value considering all dependencies.&lt;br&gt;&lt;b&gt;Min value:&lt;/b&gt;The Min SLIPIF Thread Stack Size value is the Min Stack Size of FREERTOS.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt;The Max SLIPIF Thread Stack Size value is the Total Heap Size of FREERTOS divided by 4." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用SLIPIF_THREAD_STACKSIZE。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt; 该参数设置为非零值，避免FREERTOS功能性问题。&lt;br&gt; 用户可根据依赖条件对此参数进行微调。&lt;br&gt;&lt;b&gt;最小值：&lt;/b&gt;SLIPIF最小线程堆栈大小等于FREERTOS的最小堆栈大小。&lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt;SLIPIF最大线程堆栈大小等于FREERTOS总堆大小除以4。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Stack size used by the slipif_loop thread. The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="slipif_loop线程使用的堆栈大小。堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="SLIPIF_THREAD_STACKSIZE" Comment="SLIPIF_THREAD_STACKSIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Stack size used by the slipif_loop thread. The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SLIPIF_THREAD_STACKSIZE is used only if NO_SYS=0." 
        	  	             NoteCH="slipif_loop线程使用的堆栈大小。堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用SLIPIF_THREAD_STACKSIZE。"/>
    </RefParameter>
    
    <RefParameter Name="SLIPIF_THREAD_PRIO" Comment="SLIPIF_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="3" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="=FREERTOS$context:configMAX_PRIORITIES-1" >
        <Condition Diagnostic="SLIPIF_THREAD_PRIO is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; The default value is aligned on FreeRTOS default Task Priority.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt;The Max of SLIPIF Thread Priority strictly less than the current FREERTOS MAX_PRIORITIES parameter." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用SLIPIF_THREAD_PRIO。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt; 默认值与 FreeRTOS默认任务优先级保持一致。&lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt;SLIPIF线程最高优先级必须小于当前 FREERTOS MAX_PRIORITIES 参数。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Priority assigned to the slipif_loop thread. The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="slipif_loop线程指定优先级。优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="SLIPIF_THREAD_PRIO" Comment="SLIPIF_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Priority assigned to the slipif_loop thread. The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SLIPIF_THREAD_PRIO is used only if NO_SYS=0." 
        	  	             NoteCH="slipif_loop线程指定优先级。优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用SLIPIF_THREAD_PRIO。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_THREAD_NAME" Comment="DEFAULT_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;lwIP&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <Condition Diagnostic="DEFAULT_THREAD_NAME is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_THREAD_NAME。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Name assigned to any other lwIP thread." 
        	  	             NoteCH="其他lwIP线程指定名称。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_THREAD_NAME" Comment="DEFAULT_THREAD_NAME" Type="string edit" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="&quot;lwIP&quot;" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <Annotation Note="Name assigned to any other lwIP thread.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_THREAD_NAME is used only if NO_SYS=0." 
        	  	             NoteCH="其他lwIP线程指定名称。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_THREAD_NAME。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_THREAD_STACKSIZE" Comment="DEFAULT_THREAD_STACKSIZE" Type="Integer" Unit="Word(s)" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1024" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="=FREERTOS$context:configMINIMAL_STACK_SIZE" Max="=FREERTOS$context:TOTAL_HEAP_SIZE/4" >
        <Condition Diagnostic="DEFAULT_THREAD_STACKSIZE is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; This parameter has been set with a non zero value to avoid functional issue with FREERTOS.&lt;br&gt;Up to user to fine tune this parameter value considering all dependencies.&lt;br&gt;&lt;b&gt;Min value:&lt;/b&gt; The Min Default Thread Stack Size value is the Min Stack Size of FREERTOS.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt; The Max Default Thread Stack Size value is the Total Heap Size of FREERTOS divided by 4." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_THREAD_STACKSIZE 。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt;该参数设置为非零值，避免FREERTOS功能性问题。&lt;br&gt;用户可根据依赖条件对此参数进行微调。&lt;br&gt;&lt;b&gt;最小值：&lt;/b&gt; 最小默认线程堆栈值等于FREERTOS的最小堆栈大小。&lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt; 最大默认线程堆栈值等于FREERTOS总堆大小除以4。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Stack size used by any other lwIP thread.&lt;br&gt;The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="其他lwIP线程使用的堆栈大小。&lt;br&gt;堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_THREAD_STACKSIZE" Comment="DEFAULT_THREAD_STACKSIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false">
        <Annotation Note="Stack size used by any other lwIP thread.&lt;br&gt;The stack size value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_THREAD_STACKSIZE is used only if NO_SYS=0." 
        	  	             NoteCH="其他lwIP线程使用的堆栈大小。&lt;br&gt;堆栈大小的值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_THREAD_STACKSIZE。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_THREAD_PRIO" Comment="DEFAULT_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="3" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="=FREERTOS$context:configMAX_PRIORITIES-1" >
        <Condition Diagnostic="DEFAULT_THREAD_PRIO is used only if NO_SYS=0.&lt;br&gt;&lt;b&gt;Default Preset:&lt;/b&gt; The default value is aligned on FreeRTOS default Task Priority.&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt; The Max of Default Thread Priority strictly less than the current FREERTOS MAX_PRIORITIES parameter." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_THREAD_PRIO。&lt;br&gt;&lt;b&gt;默认预设：&lt;/b&gt;默认值与 FreeRTOS默认任务优先级保持一致。&lt;br&gt;&lt;b&gt;最大值：&lt;/b&gt;  默认线程最高优先级必须小于当前 FREERTOS MAX_PRIORITIES 参数。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Priority assigned to any other lwIP thread.&lt;br&gt;The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created." 
        	  	             NoteCH="其他lwIP线程指定优先级。&lt;br&gt;优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_THREAD_PRIO" Comment="DEFAULT_THREAD_PRIO" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false">
        <Annotation Note="Priority assigned to any other lwIP thread.&lt;br&gt;The priority value itself is platform-dependent, but is passed to sys_thread_new() when the thread is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_THREAD_PRIO is used only if NO_SYS=0." 
        	  	             NoteCH="其他lwIP线程指定优先级。&lt;br&gt;优先级值取决于具体的平台，但在创建线程时，这个值会传递给 sys_thread_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_THREAD_PRIO。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_RAW_RECVMBOX_SIZE" Comment="DEFAULT_RAW_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_RAW_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_RAW_RECVMBOX_SIZE。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_RAW.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created." 
        	  	             NoteCH="NETCONN_RAW上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_RAW_RECVMBOX_SIZE" Comment="DEFAULT_RAW_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_RAW.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_RAW_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	  	             NoteCH="NETCONN_RAW上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_RAW_RECVMBOX_SIZE。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_UDP_RECVMBOX_SIZE" Comment="DEFAULT_UDP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_UDP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_UDP_RECVMBOX_SIZE。" 
        	              Expression="NO_SYS=0 &amp; LWIP_UDP=1"/>
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_UDP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples, if LWIP_UDP is enabled." 
        	  	             NoteCH="NETCONN_UDP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;为确保功能正常，例如AT32 Work Bench固件包LwIP示例，在启用LWIP_UDP的情况下，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_UDP_RECVMBOX_SIZE" Comment="DEFAULT_UDP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_UDP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_UDP_RECVMBOX_SIZE。" 
        	              Expression="NO_SYS=0 &amp; LWIP_UDP=0"/>
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_UDP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples, if LWIP_UDP is enabled." 
        	  	             NoteCH="NETCONN_UDP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;为确保功能正常，例如AT32 Work Bench固件包LwIP示例，在启用LWIP_UDP的情况下，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_UDP_RECVMBOX_SIZE" Comment="DEFAULT_UDP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_UDP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_UDP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	  	             NoteCH="NETCONN_UDP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_UDP_RECVMBOX_SIZE。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_TCP_RECVMBOX_SIZE" Comment="DEFAULT_TCP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_TCP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_TCP_RECVMBOX_SIZE。" 
        	              Expression="NO_SYS=0 &amp; LWIP_TCP=1"/>
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_TCP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples, if LWIP_TCP is enabled." 
        	  	             NoteCH="NETCONN_TCP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;为确保功能正常，例如AT32 Work Bench固件包LwIP示例，在启用LWIP_TCP的情况下，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_TCP_RECVMBOX_SIZE" Comment="DEFAULT_TCP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_TCP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_TCP_RECVMBOX_SIZE。" 
        	              Expression="NO_SYS=0 &amp; LWIP_TCP=0"/>
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_TCP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples, if LWIP_TCP is enabled." 
        	  	             NoteCH="NETCONN_TCP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;为确保功能正常，例如AT32 Work Bench固件包LwIP示例，在启用LWIP_TCP的情况下，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_TCP_RECVMBOX_SIZE" Comment="DEFAULT_TCP_RECVMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Mailbox size for the incoming packets on a NETCONN_TCP.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the recvmbox is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_TCP_RECVMBOX_SIZE is used only if NO_SYS=0." 
        	  	             NoteCH="NETCONN_TCP上用于接收传入数据包的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_TCP_RECVMBOX_SIZE。"/>
    </RefParameter>
    
    <RefParameter Name="DEFAULT_ACCEPTMBOX_SIZE" Comment="DEFAULT_ACCEPTMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="6" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="DEFAULT_ACCEPTMBOX_SIZE is used only if NO_SYS=0." 
        	              DiagnosticCH="只有在NO_SYS=0时才使用DEFAULT_ACCEPTMBOX_SIZE。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="Mailbox size for the incoming connections.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the acceptmbox is created.&lt;br&gt;To be functional, the default value (0 in opt.h) is defined to 6 like in AT32 Work Bench Firmware packages LwIP examples." 
        	  	             NoteCH="用于处理传入连接请求的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;为确保功能正常，例如AT32 Work Bench固件包LwIP示例，默认值（opt.h中为0）定义为6。"/>
    </RefParameter>
    <RefParameter Name="DEFAULT_ACCEPTMBOX_SIZE" Comment="DEFAULT_ACCEPTMBOX_SIZE" Type="Integer" Group="Infrastructure - Threading Options" GroupCH="基础配置 - 线程选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="Mailbox size for the incoming connections.&lt;br&gt;The queue size value itself is platform-dependent, but is passed to sys_mbox_new() when the acceptmbox is created.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: DEFAULT_ACCEPTMBOX_SIZE is used only if NO_SYS=0." 
        	  	             NoteCH="用于处理传入连接请求的邮箱大小。&lt;br&gt;队列大小值取决于具体的平台，但在创建接收邮箱时，这个值会传递给 sys_mbox_new() 函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 只有在NO_SYS=0时才使用DEFAULT_ACCEPTMBOX_SIZE。"/>
    </RefParameter>
    
    <!-- *************************** Thread Safe APIs - Netconn Options ******************************-->
    <RefParameter Name="LWIP_NETCONN" Comment="LWIP_NETCONN" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="Use NETCONN API requires NO_SYS=0 and MEMP_NUM_TCPIP_MSG_API&gt;0 if MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="关闭MEMP_MEM_MALLOC时，使用 NETCONN API 要求 NO_SYS=0 且 MEMP_NUM_TCPIP_MSG_API&gt;0。" 
        	              Expression="NO_SYS=0 &amp; MEMP_MEM_MALLOC=0 &amp; MEMP_NUM_TCPIP_MSG_API &gt; 0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, Netconn API is enabled (require to use api_lib.c)." 
        	  	             NoteCH="开启此参数时，启用Netconn API（需要api_lib.c）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETCONN" Comment="LWIP_NETCONN" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="Use NETCONN API requires NO_SYS=0 and MEMP_NUM_TCPIP_MSG_API&gt;0 if MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="关闭MEMP_MEM_MALLOC时，使用 NETCONN API 要求 NO_SYS=0 且 MEMP_NUM_TCPIP_MSG_API&gt;0。" 
        	              Expression="NO_SYS=0 &amp; MEMP_MEM_MALLOC=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, Netconn API is enabled (require to use api_lib.c)." 
        	  	             NoteCH="开启此参数时，启用Netconn API（需要api_lib.c）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETCONN" Comment="LWIP_NETCONN" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, Netconn API is enabled (require to use api_lib.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use NETCONN API requires NO_SYS=0 and MEMP_NUM_TCPIP_MSG_API&gt;0 if MEMP_MEM_MALLOC is disabled." 
        	  	             NoteCH="开启此参数时，启用Netconn API（需要api_lib.c）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 关闭MEMP_MEM_MALLOC时，使用 NETCONN API 要求 NO_SYS=0 且 MEMP_NUM_TCPIP_MSG_API&gt;0。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCPIP_TIMEOUT" Comment="LWIP_TCPIP_TIMEOUT" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_TCPIP_TIMEOUT requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_TCPIP_TIMEOUT 需要先启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable tcpip_timeout/tcpip_untimeout to create timers running in tcpip_thread from another thread." 
        	  	             NoteCH="启用 tcpip_timeout/tcpip_untimeout，从另一个线程创建在tcpip_thread中运行的定时器。"/>
    </RefParameter>
    <RefParameter Name="LWIP_TCPIP_TIMEOUT" Comment="LWIP_TCPIP_TIMEOUT" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable tcpip_timeout/tcpip_untimeout to create timers running in tcpip_thread from another thread.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_TCPIP_TIMEOUT requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="启用 tcpip_timeout/tcpip_untimeout，从另一个线程创建在tcpip_thread中运行的定时器。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_TCPIP_TIMEOUT 需要先启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETCONN_SEM_PER_THREAD" Comment="LWIP_NETCONN_SEM_PER_THREAD" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_NETCONN_SEM_PER_THREAD requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用 LWIP_NETCONN_SEM_PER_THREAD 需要先启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use one (thread-local) semaphore per thread calling socket/netconn functions instead of allocating one semaphore per netconn (and per select etc.)&lt;br&gt;ATTENTION: a thread-local semaphore for API calls is needed:&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_GET() returning a sys_sem_t&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_ALLOC() creating the semaphore&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_FREE() freeing the semaphore&lt;br&gt;The latter 2 can be invoked up by calling netconn_thread_init()/netconn_thread_cleanup().&lt;br&gt;Ports may call these for threads created with sys_thread_new()." 
        	  	             NoteCH="启用此参数，调用socket/netconn函数，每个线程使用一个信号量（线程本地），而不是每个netconn（以及select等）分配一个信号量。&lt;br&gt;注意：API调用需要一个线程本地信号量：&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_GET() 返回 sys_sem_t&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_ALLOC() 创建信号量 &lt;br&gt;- LWIP_NETCONN_THREAD_SEM_FREE() 释放信号量&lt;br&gt; 可以通过调用 netconn_thread_init()/netconn_thread_cleanup() 来调用后面两个函数。&lt;br&gt; 端口可以调用这些函数，用于 sys_thread_new() 创建的线程。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETCONN_SEM_PER_THREAD" Comment="LWIP_NETCONN_SEM_PER_THREAD" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable this parameter to use one (thread-local) semaphore per thread calling socket/netconn functions instead of allocating one semaphore per netconn (and per select etc.)&lt;br&gt;ATTENTION: a thread-local semaphore for API calls is needed:&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_GET() returning a sys_sem_t&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_ALLOC() creating the semaphore&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_FREE() freeing the semaphore&lt;br&gt;The latter 2 can be invoked up by calling netconn_thread_init()/netconn_thread_cleanup().&lt;br&gt;Ports may call these for threads created with sys_thread_new().&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_NETCONN_SEM_PER_THREAD requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="启用此参数，调用socket/netconn函数，每个线程使用一个信号量（线程本地），而不是每个netconn（以及select等）分配一个信号量。&lt;br&gt;注意：API调用需要一个线程本地信号量：&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_GET() 返回 sys_sem_t&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_ALLOC() 创建信号量&lt;br&gt;- LWIP_NETCONN_THREAD_SEM_FREE() 释放信号量&lt;br&gt; 可以通过调用 netconn_thread_init()/netconn_thread_cleanup()来调用后面两个函数。&lt;br&gt;端口可以调用这些函数，用于 sys_thread_new()创建的线程。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_NETCONN_SEM_PER_THREAD 需要先启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_NETCONN_FULLDUPLEX" Comment="LWIP_NETCONN_FULLDUPLEX" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_NETCONN_FULLDUPLEX requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_NETCONN_FULLDUPLEX需要先启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables code that allows reading from one thread, writing from a 2nd thread and closing from a 3rd thread at the same time.&lt;br&gt;ATTENTION: This is currently really alpha! Some requirements:&lt;br&gt;- LWIP_NETCONN_SEM_PER_THREAD==&quot;Enabled&quot; is required to use one socket/netconn from multiple threads at once&lt;br&gt;- sys_mbox_free() has to unblock receive tasks waiting on recvmbox/acceptmbox and prevent a task pending on this during/after deletion." 
        	  	             NoteCH="此参数启用一段代码，这段代码允许一个线程负责读取、第二个线程负责写入同时第三个线程关闭操作。&lt;br&gt;注意： 目前还处于初级测试阶段（alpha 阶段）。相关要求：&lt;br&gt;- 设置LWIP_NETCONN_SEM_PER_THREAD==&quot;开启&quot;，同时多个线程使用一个 socket/netconn。&lt;br&gt;- sys_mbox_free() 需要解除recvmbox/acceptmbox邮箱上等待的接受任务阻塞状态，并在邮箱处于删除状态或者已经被删除时防止任务挂起。"/>
    </RefParameter>
    <RefParameter Name="LWIP_NETCONN_FULLDUPLEX" Comment="LWIP_NETCONN_FULLDUPLEX" Type="list" Group="Thread Safe APIs - Netconn Options" GroupCH="线程安全APIs - Netconn 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables code that allows reading from one thread, writing from a 2nd thread and closing from a 3rd thread at the same time.&lt;br&gt;ATTENTION: This is currently really alpha! Some requirements:&lt;br&gt;- LWIP_NETCONN_SEM_PER_THREAD==&quot;Enabled&quot; is required to use one socket/netconn from multiple threads at once&lt;br&gt;- sys_mbox_free() has to unblock receive tasks waiting on recvmbox/acceptmbox and prevent a task pending on this during/after deletion.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_NETCONN_FULLDUPLEX requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="此参数启用一段代码，这段代码允许一个线程负责读取、第二个线程负责写入同时第三个线程关闭操作。&lt;br&gt;注意： 目前还处于初级测试阶段（alpha 阶段）。相关要求：&lt;br&gt;- 设置LWIP_NETCONN_SEM_PER_THREAD==&quot;开启&quot; ，同时多个线程使用一个 socket/netconn。&lt;br&gt;- sys_mbox_free() 需要解除recvmbox/acceptmbox邮箱上等待的接受任务阻塞状态， 并在邮箱处于删除状态或者已经被删除时防止任务挂起。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用LWIP_NETCONN_FULLDUPLEX 需要先启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <!-- *************************** Thread Safe APIs - Socket Options ******************************-->
    <RefParameter Name="LWIP_SOCKET" Comment="LWIP_SOCKET" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="Use Socket API requires LWIP_NETCONN enabled, NO_SYS=0, MEMP_NUM_NETCONN&gt;0, MEMP_NUM_TCPIP_MSG_API&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="使用Socket API 需要启用LWIP_NETCONN，并设置NO_SYS=0，MEMP_NUM_NETCONN&gt;0，MEMP_NUM_TCPIP_MSG_API&gt;0，MEMP_MEM_MALLOC关闭。" 
                          Expression="NO_SYS=0 &amp; LWIP_NETCONN=1 &amp; MEMP_NUM_NETCONN &gt; 0 &amp; MEMP_MEM_MALLOC=0 &amp; MEMP_NUM_TCPIP_MSG_API &gt; 0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Semaphore="S_LWIP_SOCKET"/>
        <Annotation Note="When this parameter is enabled, Socket API is enabled (require to use sockets.c)" 
        	  	             NoteCH="当开启此参数时，Socket API启用（需要sockets.c）"/>
    </RefParameter>
    <RefParameter Name="LWIP_SOCKET" Comment="LWIP_SOCKET" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <Condition Diagnostic="Use Socket API requires LWIP_NETCONN enabled, NO_SYS=0, MEMP_NUM_NETCONN&gt;0, MEMP_NUM_TCPIP_MSG_API&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	              DiagnosticCH="使用Socket API 需要启用LWIP_NETCONN，并设置NO_SYS=0，MEMP_NUM_NETCONN&gt;0，MEMP_MEM_MALLOC开启。" 
        	              Expression="NO_SYS=0 &amp; LWIP_NETCONN=1 &amp; MEMP_NUM_NETCONN &gt; 0 &amp; MEMP_MEM_MALLOC=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Semaphore="S_LWIP_SOCKET"/>
        <Annotation Note="When this parameter is enabled, Socket API is enabled (require to use sockets.c)" 
        	  	             NoteCH="当开启此参数时，Socket API启用（需要sockets.c）"/>
    </RefParameter>
    <RefParameter Name="LWIP_SOCKET" Comment="LWIP_SOCKET" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, Socket API is enabled (require to use sockets.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use Socket API requires LWIP_NETCONN enabled, NO_SYS=0, MEMP_NUM_NETCONN&gt;0, MEMP_NUM_TCPIP_MSG_API&gt;0 when MEMP_MEM_MALLOC is disabled." 
        	  	             NoteCH="开启此参数时，Socket API启用（需要sockets.c）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用Socket API 需要启用LWIP_NETCONN，并设置NO_SYS=0，MEMP_NUM_NETCONN&gt;0，MEMP_NUM_TCPIP_MSG_API&gt;0，MEMP_MEM_MALLOC关闭。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_COMPAT_SOCKETS" Comment="LWIP_COMPAT_SOCKETS" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2" Reload="false" >
        <Condition Diagnostic="Use LWIP_COMPAT_SOCKETS option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="使用LWIP_COMPAT_SOCKETS选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="LWIP_COMPAT_SOCKETS==1: Enable BSD-style sockets functions names through defines.&lt;br&gt;LWIP_COMPAT_SOCKETS==2: Same as ==1 but correctly named functions are created.&lt;br&gt;While this helps code completion, it might conflict with existing libraries (only used if you use sockets.c)." 
        	  	             NoteCH="LWIP_COMPAT_SOCKETS==1：通过宏定义启用BSD风格socket函数名。&lt;br&gt;LWIP_COMPAT_SOCKETS==2：其功能与设置为1基本相同，但会创建名称正确的函数。&lt;br&gt;有助于代码补全，但可能会与现有的库产生冲突（仅在使用sockets.c时使用此功能）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_COMPAT_SOCKETS" Comment="LWIP_COMPAT_SOCKETS" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <Annotation Note="When this parameter is enabled, Socket API is enabled (require to use sockets.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_COMPAT_SOCKETS option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="开启此参数时，Socket API启用（需要sockets.c）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_COMPAT_SOCKETS 选项需要启用 RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_POSIX_SOCKETS_IO_NAMES" Comment="LWIP_POSIX_SOCKETS_IO_NAMES" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Use LWIP_POSIX_SOCKETS_IO_NAMES option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="使用LWIP_POSIX_SOCKETS_IO_NAMES选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable POSIX-style sockets functions names. Disable this option if you use a POSIX operating system that uses the same names (read, write and close). (only used if you use sockets.c)." 
        	  	             NoteCH="启用 POSIX风格socket函数名。如果使用支持POSIX标准的操作系统，且该系统使用了相同的名称（如read、write 和 close），则关闭此选项（仅在使用sockets.c时使用此功能）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_POSIX_SOCKETS_IO_NAMES" Comment="LWIP_POSIX_SOCKETS_IO_NAMES" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable POSIX-style sockets functions names. Disable thisoption if you use a POSIX operating system that uses the same names (read, write and close). (only used if you use sockets.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_POSIX_SOCKETS_IO_NAMES option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="启用 POSIX风格socket函数名。如果使用支持POSIX标准的操作系统，且该系统使用了相同的名称（如read、write 和 close），则关闭此选项（仅在使用sockets.c时使用此功能）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_POSIX_SOCKETS_IO_NAMES 选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SOCKET_OFFSET" Comment="LWIP_SOCKET_OFFSET" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="Use LWIP_SOCKET_OFFSET requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="使用LWIP_SOCKET_OFFSET需要启用RTOC（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="LWIP_SOCKET_OFFSET==n: Increases the file descriptor number created by LwIP with n.&lt;br&gt;This can be useful when there are multiple APIs which create file descriptors.&lt;br&gt;When they all start with a different offset and you won't make them overlap you can re implement read/write/close/ioctl/fnctl to send the requested action to the right library (sharing select will need more work though)." 
        	  	             NoteCH="LWIP_SOCKET_OFFSET==n：将LwIP创建的文件描述符编号增加n。&lt;br&gt; 存在多个创建文件描述符的API时，可以使用此功能。&lt;br&gt; 如果这些API以不同的偏移量开始创建描述符，并能确保不会重叠，那么就可以重新实现 read/write/close/ioctl/fnctl 等函数，将请求的操作发送至正确的库（共享select函数需要更多操作）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SOCKET_OFFSET" Comment="LWIP_SOCKET_OFFSET" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <Annotation Note="LWIP_SOCKET_OFFSET==n: Increases the file descriptor number created by LwIP with n.&lt;br&gt;This can be useful when there are multiple APIs which create file descriptors.&lt;br&gt;When they all start with a different offset and you won't make them overlap you can re implement read/write/close/ioctl/fnctl to send the requested action to the right library (sharing select will need more work though).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_SOCKET_OFFSET requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="LWIP_SOCKET_OFFSET==n：将LwIP创建的文件描述符编号增加n。&lt;br&gt;存在多个创建文件描述符的API时，可以使用此功能。&lt;br&gt;如果这些API以不同的偏移量开始创建描述符，并能确保不会重叠，那么就可以重新实现 read/write/close/ioctl/fnctl等函数，将请求的操作发送至正确的库（共享select函数需要更多操作）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SOCKET_OFFSET 需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_KEEPALIVE" Comment="LWIP_TCP_KEEPALIVE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_TCP_KEEPALIVE option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="使用LWIP_TCP_KEEPALIVE选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable TCP_KEEPIDLE, TCP_KEEPINTVL and TCP_KEEPCNT options processing. Note that TCP_KEEPIDLE and TCP_KEEPINTVL have to be set in seconds (does not require sockets.c, and will affect tcp.c)." 
        	  	             NoteCH="启用TCP_KEEPIDLE、TCP_KEEPINTVL 和 TCP_KEEPCNT 选项处理。注意TCP_KEEPIDLE 和 TCP_KEEPINTVL 必须以秒为单位设置（不需要 sockets.c，并且会影响 tcp.c）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_TCP_KEEPALIVE" Comment="LWIP_TCP_KEEPALIVE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable TCP_KEEPIDLE, TCP_KEEPINTVL and TCP_KEEPCNT options processing. Note that TCP_KEEPIDLE and TCP_KEEPINTVL have to be set in seconds (does not require sockets.c, and will affect tcp.c).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_TCP_KEEPALIVE option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="启用 TCP_KEEPIDLE、TCP_KEEPINTVL 和 TCP_KEEPCNT 选项处理。注意 TCP_KEEPIDLE 和 TCP_KEEPINTVL 必须以秒为单位设置（不需要 sockets.c，并且会影响 tcp.c）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用 LWIP_TCP_KEEPALIVE 选项需要启用 RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SO_SNDTIMEO" Comment="LWIP_SO_SNDTIMEO" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SO_SNDTIMEO option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SO_SNDTIMEO选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable send timeout for sockets/netconns and SO_SNDTIMEO processing." 
        	  	             NoteCH="为socket/netconn和SO_SNDTIMEO处理启用发送超时。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SO_SNDTIMEO" Comment="LWIP_SO_SNDTIMEO" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable send timeout for sockets/netconns and SO_SNDTIMEO processing.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SO_SNDTIMEO option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="为socket/netconn和SO_SNDTIMEO处理启用发送超时。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用 LWIP_SO_SNDTIMEO 选项要求启用 RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SO_RCVTIMEO" Comment="LWIP_SO_RCVTIMEO" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SO_RCVTIMEO option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SO_RCVTIMEO选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable receive timeout for sockets/netconns and SO_RCVTIMEO processing." 
        	  	             NoteCH="为socket/netconn和SO_RCVTIMEO处理启用接收超时。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SO_RCVTIMEO" Comment="LWIP_SO_RCVTIMEO" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable receive timeout for sockets/netconns and SO_RCVTIMEO processing.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SO_RCVTIMEO option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="为socket/netconn和SO_RCVTIMEO处理启用接收超时。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SO_RCVTIMEO 选项要求启用 RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SO_SNDRCVTIMEO_NONSTANDARD" Comment="LWIP_SO_SNDRCVTIMEO_NONSTANDARD" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SO_SNDRCVTIMEO_NONSTANDARD option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SO_SNDRCVTIMEO_NONSTANDARD选项要求启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, SO_RCVTIMEO/SO_SNDTIMEO take an int (milliseconds, much like winsock does) instead of a struct timeval (default)." 
        	  	             NoteCH="当开启此参数时，SO_RCVTIMEO/SO_SNDTIMEO接受一个int类型参数（单位为毫秒，与winsock相似操作），而不是使用struct timeval（默认）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SO_SNDRCVTIMEO_NONSTANDARD" Comment="LWIP_SO_SNDRCVTIMEO_NONSTANDARD" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, SO_RCVTIMEO/SO_SNDTIMEO take an int (milliseconds, much like winsock does) instead of a struct timeval (default).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SO_SNDRCVTIMEO_NONSTANDARD option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="当开启此参数时，SO_RCVTIMEO/SO_SNDTIMEO接受一个int类型参数（单位为毫秒，与winsock相似操作），而不是使用struct timeval（默认）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用 LWIP_SO_SNDRCVTIMEO_NONSTANDARD 选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SO_RCVBUF" Comment="LWIP_SO_RCVBUF" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SO_RCVBUF option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SO_RCVBUF选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable SO_RCVBUF processing." 
        	  	             NoteCH="启用SO_RCVBUF处理。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SO_RCVBUF" Comment="LWIP_SO_RCVBUF" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable SO_RCVBUF processing.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SO_RCVBUF option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="启用 SO_RCVBUF处理。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SO_RCVBUF选项需要启用 RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SO_LINGER" Comment="LWIP_SO_LINGER" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SO_LINGER option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SO_LINGER选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This paarmeter enables SO_LINGER processing." 
        	  	             NoteCH="此参数用于启用SO_LINGER处理。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SO_LINGER" Comment="LWIP_SO_LINGER" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This paarmeter enables SO_LINGER processing.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SO_LINGER option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="此参数用于启用SO_LINGER处理。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SO_LINGER选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="RECV_BUFSIZE_DEFAULT" Comment="RECV_BUFSIZE_DEFAULT" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="2000000000" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="Enable RECV_BUFSIZE_DEFAULT option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用RECV_BUFSIZE_DEFAULT选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="If LWIP_SO_RCVBUF is used, this is the default value for recv_bufsize." 
        	  	             NoteCH="如果使用LWIP_SO_RCVBUF，则此参数是recv_bufsize的默认值。"/>
    </RefParameter>
    <RefParameter Name="RECV_BUFSIZE_DEFAULT" Comment="RECV_BUFSIZE_DEFAULT" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="2000000000" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="If LWIP_SO_RCVBUF is used, this is the default value for recv_bufsize.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable RECV_BUFSIZE_DEFAULT option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="如果使用LWIP_SO_RCVBUF，则此参数是recv_bufsize的默认值。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用RECV_BUFSIZE_DEFAULT选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT" Comment="LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="20000" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="Enable LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="使用LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <Annotation Note="If set by default, TCP socket/netconn close waits 20 seconds max to send the FIN." 
        	  	             NoteCH="默认设置下，TCP socket/netconn关闭最多等待20秒发送FIN。"/>
    </RefParameter>
    <RefParameter Name="LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT" Comment="LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT" Type="Integer" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="20000" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="If set by default, TCP socket/netconn close waits 20 seconds max to send the FIN.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="默认设置下，TCP socket/netconn关闭最多等待20秒发送FIN。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="SO_REUSE" Comment="SO_REUSE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable SO_REUSE option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用SO_REUSE选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable SO_REUSEADDR option." 
        	  	             NoteCH="启用SO_REUSEADDR选项。"/>
    </RefParameter>
    <RefParameter Name="SO_REUSE" Comment="SO_REUSE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable SO_REUSEADDR option.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable SO_REUSE option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="关闭SO_REUSEADDR选项。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SO_REUSE选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="SO_REUSE_RXTOALL" Comment="SO_REUSE_RXTOALL" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable SO_REUSE_RXTOALL option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用SO_REUSE_RXTOALL选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Pass a copy of incoming broadcast/multicast packets to all local matches if SO_REUSEADDR is turned on.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Adds a memcpy for every packet if passing to more than one pcb!" 
        	  	             NoteCH="如果启用了SO_REUSEADDR，传入的广播/组播数据包的副本会被传递给所有本地匹配PCB。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 如果传递给多个PCB，则每个数据包需要添加一个memcpy函数。"/>
    </RefParameter>
    <RefParameter Name="SO_REUSE_RXTOALL" Comment="SO_REUSE_RXTOALL" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Pass a copy of incoming broadcast/multicast packets to all local matches if SO_REUSEADDR is turned on.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Adds a memcpy for every packet if passing to more than one pcb!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable SO_REUSE_RXTOALL option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="如果启用了SO_REUSEADDR，传入的广播/组播数据包的副本会被传递给所有本地匹配PCB。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;如果传递给多个PCB，则每个数据包需要添加一个memcpy函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SO_REUSE_RXTOALL选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_FIONREAD_LINUXMODE" Comment="LWIP_FIONREAD_LINUXMODE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Enable LWIP_FIONREAD_LINUXMODE option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_FIONREAD_LINUXMODE选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="By default, LWIP_FIONREAD_LINUXMODE is disabled: ioctl/FIONREAD returns the amount of pending data in the network buffer. This is the way windows does it. It's the default for lwIP since it is smaller.&lt;br&gt;When LWIP_FIONREAD_LINUXMODE is enabled: ioctl/FIONREAD returns the size of the next pending datagram in bytes. This is the way linux does it. This code is only here for compatibility." 
        	  	             NoteCH="默认情况下，LWIP_FIONREAD_LINUXMODE处于禁用状态：ioctl/FIONREAD 返回网络缓冲区中待处理的数据量。这种方式与windows系统的操作方式一样。lwIP采用这种方式作为默认设置，原因是数据量较小。&lt;br&gt;启用LWIP_FIONREAD_LINUXMODE时：ioctl/FIONREAD 返回下一个待处理数据报的大小（单位：字节）。Linux系统采用这种方式。 此处代码仅出于兼容性考虑。"/>
    </RefParameter>
    <RefParameter Name="LWIP_FIONREAD_LINUXMODE" Comment="LWIP_FIONREAD_LINUXMODE" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="By default, LWIP_FIONREAD_LINUXMODE is disabled: ioctl/FIONREAD returns the amount of pending data in the network buffer. This is the way windows does it. It's the default for lwIP since it is smaller.&lt;br&gt;When LWIP_FIONREAD_LINUXMODE is enabled: ioctl/FIONREAD returns the size of the next pending datagram in bytes. This is the way linux does it. This code is only here for compatibility.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_FIONREAD_LINUXMODE option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="默认情况下，LWIP_FIONREAD_LINUXMODE处于禁用状态：ioctl/FIONREAD 返回网络缓冲区中待处理的数据量。这种方式与windows系统的操作方式一样。lwIP采用这种方式作为默认设置，原因是数据量较小。&lt;br&gt;启用LWIP_FIONREAD_LINUXMODE时：ioctl/FIONREAD 返回下一个待处理数据报的大小（单位：字节）。Linux系统采用这种方式。此处代码仅出于兼容性考虑。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_FIONREAD_LINUXMODE选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SOCKET_SELECT" Comment="LWIP_SOCKET_SELECT" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SOCKET_SELECT option requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SOCKET_SELECT选项需要启用RTOS（NO_SYS=0）。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Semaphore="S_LWIP_SOCKET"/>
        <Annotation Note="When this parameter is enabled, select() for sockets uses a netconn callback to keep track of events. This saves RAM (counters per socket) and code (netconn event callback), which should improve performance a bit)." 
        	  	             NoteCH="开启此参数时，socket的select()函数采用netconn回调来跟踪事件。这种方式可以节省 RAM（每个socket的计数器）和代码（netconn事件回调），从而提升性能。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SOCKET_SELECT" Comment="LWIP_SOCKET_SELECT" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, select() for sockets uses a netconn callback to keep track of events. This saves RAM (counters per socket) and code (netconn event callback), which should improve performance a bit).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SOCKET_SELECT option requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="开启此参数时，socket的select()函数采用netconn回调来跟踪事件。这种方式可以节省 RAM（每个socket的计数器）和代码（netconn事件回调），从而提升性能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SOCKET_SELECT选项需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SOCKET_POLL" Comment="LWIP_SOCKET_POLL" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Reload="false" >
        <Condition Diagnostic="Enable LWIP_SOCKET_POLL requires RTOS enabled (NO_SYS=0)." 
        	              DiagnosticCH="启用LWIP_SOCKET_POLL需要启用RTOS（NO_SYS=0)。" 
        	              Expression="NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Semaphore="S_LWIP_SOCKET"/>
        <Annotation Note="When this parameter is enabled, enable poll() for sockets (including struct pollfd, nfds_t, and constants)." 
        	  	             NoteCH="开启此参数时，启用socket的poll()函数（包括pollfd结构体、nfds_t和常数）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SOCKET_POLL" Comment="LWIP_SOCKET_POLL" Type="list" Group="Thread Safe APIs - Socket Options" GroupCH="线程安全 APIs - Socket 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Basic" Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, enable poll() for sockets (including struct pollfd, nfds_t, and constants).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable LWIP_SOCKET_POLL requires RTOS enabled (NO_SYS=0)." 
        	  	             NoteCH="开启此参数时，启用socket的poll()函数（包括pollfd结构体、nfds_t和常数）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用 LWIP_SOCKET_POLL 需要启用RTOS（NO_SYS=0）。"/>
    </RefParameter>
    
    <!-- *************************** PolarSSL Options ******************************-->
    <RefParameter Name="LWIP_USE_EXTERNAL_POLARSSL" Comment="LWIP_USE_EXTERNAL_POLARSSL" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this option to use external PolarSSL library." 
        	  	             NoteCH="启用此选项，使用外部PolarSSL库。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_MD5" Comment="LWIP_INCLUDED_POLARSSL_MD5" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="CHAP (CHAP_SUPPORT), EAP (EAP_SUPPORT), L2TP(PPPOL2TP_AUTH_SUPPORT) AUTH and MD5 Random (PPP_MD5_RANDM) require MD5 support (LWIP_INCLUDED_POLARSSL_MD5 enabled)." 
        	              DiagnosticCH="CHAP (CHAP_SUPPORT)、EAP (EAP_SUPPORT)、L2TP(PPPOL2TP_AUTH_SUPPORT) AUTH 和 MD5 Random (PPP_MD5_RANDM) 需要 MD5支持（启用LWIP_INCLUDED_POLARSSL_MD5）。" 
        	              Expression="CHAP_SUPPORT=1|EAP_SUPPORT=1|PPPOL2TP_AUTH_SUPPORT=1|PPP_MD5_RANDM=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enabled allows to use lwIP internal PolarSSL for MD5." 
        	  	             NoteCH="启用此参数，允许MD5使用lwIP内部PolarSSL库。"/>
    </RefParameter>
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_MD5" Comment="LWIP_INCLUDED_POLARSSL_MD5" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use lwIP internal PolarSSL for MD5.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: CHAP (CHAP_SUPPORT), EAP (EAP_SUPPORT), L2TP(PPPOL2TP_AUTH_SUPPORT) AUTH and MD5 Random (PPP_MD5_RANDM) require MD5 support (LWIP_INCLUDED_POLARSSL_MD5 enabled)." 
        	  	             NoteCH="启用此参数，允许MD5使用lwIP内部PolarSSL库。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; CHAP (CHAP_SUPPORT)、EAP (EAP_SUPPORT)、L2TP(PPPOL2TP_AUTH_SUPPORT) AUTH 和 MD5 Random (PPP_MD5_RANDM) 需要MD5支持（启用LWIP_INCLUDED_POLARSSL_MD5）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_MD4" Comment="LWIP_INCLUDED_POLARSSL_MD4" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="MSCHAP (MSCHAP_SUPPORT) requires MD4 support (LWIP_INCLUDED_POLARSSL_MD4 enabled)." 
        	              DiagnosticCH="MSCHAP (MSCHAP_SUPPORT) 需要 MD4支持（启用LWIP_INCLUDED_POLARSSL_MD4）。" 
        	              Expression="MSCHAP_SUPPORT=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enabled allows to use lwIP internal PolarSSL for MD4." 
        	  	             NoteCH="启用此参数，允许MD4使用lwIP内部PolarSSL库。"/>
    </RefParameter>
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_MD4" Comment="LWIP_INCLUDED_POLARSSL_MD4" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use lwIP internal PolarSSL for MD4.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MSCHAP (MSCHAP_SUPPORT) requires MD4 support (LWIP_INCLUDED_POLARSSL_MD4 enabled)." 
        	  	             NoteCH="启用此参数，允许MD4使用lwIP内部PolarSSL库。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; MSCHAP (MSCHAP_SUPPORT) 需要MD4支持（启用LWIP_INCLUDED_POLARSSL_MD4）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_SHA1" Comment="LWIP_INCLUDED_POLARSSL_SHA1" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="MSCHAP (MSCHAP_SUPPORT) requires SHA1 support (LWIP_INCLUDED_POLARSSL_SHA1 enabled)." 
        	              DiagnosticCH="MSCHAP (MSCHAP_SUPPORT) 需要SHA1支持（启用LWIP_INCLUDED_POLARSSL_SHA1）。" 
        	              Expression="MSCHAP_SUPPORT=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enabled allows to use lwIP internal PolarSSL for SHA1." 
        	  	             NoteCH="启用此参数，允许SHA1使用lwIP内部PolarSSL库。"/>
    </RefParameter>
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_SHA1" Comment="LWIP_INCLUDED_POLARSSL_SHA1" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use lwIP internal PolarSSL for SHA1.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MSCHAP (MSCHAP_SUPPORT) requires SHA1 support (LWIP_INCLUDED_POLARSSL_SHA1 enabled)." 
        	  	             NoteCH="启用此参数，允许SHA1使用lwIP内部PolarSSL库。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; MSCHAP (MSCHAP_SUPPORT) 需要SHA1支持（启用LWIP_INCLUDED_POLARSSL_SHA1）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_DES" Comment="LWIP_INCLUDED_POLARSSL_DES" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="MSCHAP (MSCHAP_SUPPORT) requires DES support (LWIP_INCLUDED_POLARSSL_DES enabled)." 
        	              DiagnosticCH="MSCHAP (MSCHAP_SUPPORT) 需要DES支持（启用LWIP_INCLUDED_POLARSSL_DES）。" 
        	              Expression="MSCHAP_SUPPORT=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enabled allows to use lwIP internal PolarSSL for DES." 
        	  	             NoteCH="启用此参数，允许DES使用lwIP内部PolarSSL库。"/>
    </RefParameter>
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_DES" Comment="LWIP_INCLUDED_POLARSSL_DES" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use lwIP internal PolarSSL for DES.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MSCHAP (MSCHAP_SUPPORT) requires DES support (LWIP_INCLUDED_POLARSSL_DES enabld)." 
        	  	             NoteCH="启用此参数，允许DES使用lwIP内部PolarSSL库。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; MSCHAP (MSCHAP_SUPPORT) 需要DES支持（启用LWIP_INCLUDED_POLARSSL_DES）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_ARC4" Comment="LWIP_INCLUDED_POLARSSL_ARC4" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="1" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="MSCHAP (MSCHAP_SUPPORT) and MPPE (MPPE_SUPPORT) require ARC4 support (LWIP_INCLUDED_POLARSSL_ARC4 enabled)." 
        	              DiagnosticCH="MSCHAP (MSCHAP_SUPPORT) 和 MPPE (MPPE_SUPPORT) 需要ARC4支持（启用LWIP_INCLUDED_POLARSSL_ARC4）。" 
        	              Expression="MSCHAP_SUPPORT=1 &amp; MPPE_SUPPORT=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enabled allows to use lwIP internal PolarSSL for ARC4." 
        	  	             NoteCH="启用此参数，允许ARC4使用lwIP内部PolarSSL库。"/>
    </RefParameter>
    <RefParameter Name="LWIP_INCLUDED_POLARSSL_ARC4" Comment="LWIP_INCLUDED_POLARSSL_ARC4" Type="list" Group="PolarSSL Options" GroupCH="PolarSSL 选项" DefaultValue="0" TabName="Key Options" TabNameCH="关键选项" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable this parameter to use lwIP internal PolarSSL for ARC4.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MSCHAP (MSCHAP_SUPPORT) requires ARC4 support (LWIP_INCLUDED_POLARSSL_ARC4 enabled)." 
        	  	             NoteCH="启用此参数，允许ARC4使用lwIP内部PolarSSL库。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; MSCHAP (MSCHAP_SUPPORT) 需要ARC4支持（启用LWIP_INCLUDED_POLARSSL_ARC4）。"/>
    </RefParameter>
    
    <!-- *************************** PPP Options ******************************-->
    <RefParameter Name="PPP_SUPPORT" Comment="PPP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Basic" >
        <Condition Diagnostic="&lt;b&gt;Warning: up to user to take care!&lt;/b&gt;: Enable PPP requires user specific code not generated by AT32 Work Bench. This is reserved for advanced users.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use PPP_SUPPORT requires at least PPPOS_SUPPORT, PPPOE_SUPPORT or PPPOL2TP_SUPPORT turned on.&lt;br&gt;PPP_SUPPORT needs also PPP_IPV4_SUPPORT and/or PPP_IPV6_SUPPORT turned on." 
        	              DiagnosticCH="&lt;b&gt;注意事项：用户需要注意以下几点：&lt;/b&gt; 启用PPP协议需要用户特定代码，而非AT32 Work Bench生成的代码。为高级用户预留。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用PPP_SUPPORT 至少需要开启 PPPOS_SUPPORT、PPPOE_SUPPORT 或 PPPOL2TP_SUPPORT。&lt;br&gt;PPP_SUPPORT 还需要开启 PPP_IPV4_SUPPORT 和/或 PPP_IPV6_SUPPORT。" 
        	              Expression="PPPOS_SUPPORT=1|PPPOE_SUPPORT=1|PPPOL2TP_SUPPORT=1 &amp; PPP_IPV4_SUPPORT=1|PPP_IPV6_SUPPORT=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, Point-to-Point Protocol (PPP) is enabled." 
        	  	             NoteCH="启用此参数时，点对点协议（PPP）会被启用。"/>
    </RefParameter>
    <RefParameter Name="PPP_SUPPORT" Comment="PPP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="When this parameter is enabled, Point-to-Point Protocol (PPP) is enabled.&lt;br&gt;&lt;b&gt;Warning: up to user to take care!&lt;/b&gt;: Enable PPP requires user specific code not generated by AT32 Work Bench. This is reserved for advanced users.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use PPP_SUPPORT requires PPPOS_SUPPORT, PPPOE_SUPPORT or PPPOL2TP_SUPPORT turned on.&lt;br&gt;PPP_SUPPORT needs also PPP_IPV4_SUPPORT and/or PPP_IPV6_SUPPORT turned on." 
        	  	             NoteCH="启用此参数时，点对点协议（PPP）会被启用。&lt;br&gt;&lt;b&gt;注意事项：用户需要注意以下几点：&lt;/b&gt; 启用PPP协议需要用户特定代码，而非AT32 Work Bench生成的代码。为高级用户预留。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用PPP_SUPPORT 需要开启PPPOS_SUPPORT、PPPOE_SUPPORT 或 PPPOL2TP_SUPPORT 。&lt;br&gt;PPP_SUPPORT 还需要启用 PPP_IPV4_SUPPORT 和/或 PPP_IPV6_SUPPORT。"/>
    </RefParameter>
    
    <RefParameter Name="PPPOE_SUPPORT" Comment="PPPOE_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <Condition Diagnostic="Use PPPOE_SUPPORT requires LWIP_ETHERNET." 
        	              DiagnosticCH="使用PPPOE_SUPPORT需要启用LWIP_ETHERNET。" 
        	              Expression="LWIP_ETHERNET=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable PPP Over Ethernet.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Enable PPP requires user specific code not generated by AT32 Work Bench. This is reserved for advanced users." 
        	  	             NoteCH="启用PPP Over Ethernet。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 启用PPP协议需要用户特定代码，而非AT32 Work Bench生成的代码。为高级用户预留。"/>
    </RefParameter>
    <RefParameter Name="PPPOE_SUPPORT" Comment="PPPOE_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Enable PPP Over Ethernet.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use PPPOE_SUPPORT requires LWIP_ETHERNET.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Enable PPP requires user specific code not generated by AT32 Work Bench. This is reserved for advanced users." 
        	  	             NoteCH="启用PPP Over Ethernet。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用PPPOE_SUPPORT 需要启用LWIP_ETHERNET。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 启用PPP协议需要用户特定代码，而非AT32 Work Bench生成的代码。为高级用户预留。"/>
    </RefParameter>
    
    <RefParameter Name="PPPOL2TP_SUPPORT" Comment="PPPOL2TP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP Over L2TP." 
        	  	             NoteCH="此参数用于启用PPP Over L2TP。 "/>
    </RefParameter>
    
    <RefParameter Name="PPPOL2TP_AUTH_SUPPORT" Comment="PPPOL2TP_AUTH_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=PPPOL2TP_SUPPORT" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP Over L2TP Auth (enable MD5 support)." 
        	  	             NoteCH="此参数用于启用PPP Over L2TP Auth（启用MD5支持）。"/>
    </RefParameter>
    
    <RefParameter Name="PPPOS_SUPPORT" Comment="PPPOS_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=PPP_SUPPORT" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable PPP Over Serial.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PPP_SUPPORT needs either PPPOS_SUPPORT or PPPOE_SUPPORT turned on.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Enable PPP requires user specific code not generated by AT32 Work Bench. This is reserved for advanced users." 
        	  	             NoteCH="启用PPP Over Serial。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PPP_SUPPORT 需要启用 PPPOS_SUPPORT 或 PPPOE_SUPPORT。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 启用PPP协议需要用户特定代码，而非AT32 Work Bench生成的代码。为高级用户预留。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_PPP_API" Comment="LWIP_PPP_API" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=PPP_SUPPORT &amp; !NO_SYS" TabName="PPP" TabNameCH="PPP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="Use LWIP_PPP_API requires NO_SYS=0 and PPP_SUPPORT enabled." 
        	              DiagnosticCH="使用LWIP_PPP_API 需要设置NO_SYS=0 并启用PPP_SUPPORT。" 
        	              Expression="NO_SYS=0 &amp; PPP_SUPPORT=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP API (in pppapi.c).&lt;br&gt;It is by default enabled if NO_SYS equals 0 and if PPP_SUPPORT is enabled." 
        	  	             NoteCH="此参数用于启用PPP API（pppapi.c）。&lt;br&gt;当NO_SYS=0且PPP_SUPPORT启用时，默认启用此参数。"/>
    </RefParameter>
    <RefParameter Name="LWIP_PPP_API" Comment="LWIP_PPP_API" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables PPP API (in pppapi.c).&lt;br&gt;It is by default enabled if NO_SYS equals 0 and if PPP_SUPPORT is enabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Use LWIP_PPP_API requires NO_SYS=0 and PPP_SUPPORT enabled." 
        	  	             NoteCH="此参数用于启用PPP API（pppapi.c）。&lt;br&gt;当NO_SYS=0且PPP_SUPPORT启用时，默认启用此参数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_PPP_API 需要设置NO_SYS=0 且启用PPP_SUPPORT。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_PPP_PCB" Comment="MEMP_NUM_PPP_PCB" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of simultaneously active PPP connections (requires the PPP_SUPPORT option)" 
        	  	             NoteCH="同时激活的PPP连接数量（需要使用PPP_SUPPORT选项）"/>
    </RefParameter>
    
    <RefParameter Name="PPP_NUM_TIMEOUTS_PER_PCB" Comment="PPP_NUM_TIMEOUTS_PER_PCB" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=1 + PPP_IPV4_SUPPORT + PPP_IPV6_SUPPORT + CCP_SUPPORT" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="Number of sys_timeouts running in parallel per ppp_pcb.&lt;br&gt;See the detailed explanation at the end of ppp_impl.h about simultaneous timers analysis (requires the PPP_SUPPORT option)." 
        	  	             NoteCH="每个ppp_pcb并行运行的sys_timeouts超时数。&lt;br&gt;参见ppp_impl.h末尾关于同步计时器分析的详细解释（需要PPP_SUPPORT选项）。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_PPPOS_INTERFACES" Comment="MEMP_NUM_PPPOS_INTERFACES" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=MEMP_NUM_PPP_PCB" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active PPPoS interfaces (only used with PPPOS_SUPPORT enabled)" 
        	  	             NoteCH="同时处于活动状态的PPPoS接口数量（仅在启用PPPOS_SUPPORT时）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_PPPOE_INTERFACES" Comment="MEMP_NUM_PPPOE_INTERFACES" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active PPPoE interfaces (only used with PPPOE_SUPPORT enabled)" 
        	  	             NoteCH="同时处于活动状态的PPPoE接口数量（仅在启用PPPOE_SUPPORT时）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_PPPOL2TP_INTERFACES" Comment="MEMP_NUM_PPPOL2TP_INTERFACES" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrently active PPPoL2TP interfaces (only used with PPPOL2TP_SUPPORT enabled)" 
        	  	             NoteCH="同时处于活动状态的PPPoL2TP接口数量（仅在启用PPPOL2TP_SUPPORT时）"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_PPP_API_MSG" Comment="MEMP_NUM_PPP_API_MSG" Type="integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="5" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of concurrent PPP API messages (in pppapi.c)" 
        	  	             NoteCH="并发的PPP API消息数量（pppapi.c）"/>
    </RefParameter>
    
    <RefParameter Name="PPP_INPROC_IRQ_SAFE" Comment="PPP_INPROC_IRQ_SAFE" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="When this parameter is enabled, pppos_input() is called using tcpip_callback().&lt;br&gt;Please read the &quot;PPPoS input path&quot; chapter in the PPP documentation about this option." 
        	  	             NoteCH="开启此参数时，使用tcpip_callback()调用pppos_input()。&lt;br&gt;关于此选项，请参考PPP 协议文件中&quot;PPPoS输入路径&quot; 章节。"/>
    </RefParameter>
    
    <RefParameter Name="PRINTPKT_SUPPORT" Comment="PRINTPKT_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP print packet support.&lt;br&gt;Mandatory for debugging, it displays exchanged packet content in debug trace." 
        	  	             NoteCH="此参数启用PPP打印数据包。&lt;br&gt;调试时必需设置此选项，会在调试跟踪过程中显示所交换的数据包内容。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_IPV4_SUPPORT" Comment="PPP_IPV4_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=LWIP_IPV4" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <Condition Diagnostic="PPP_IPV4_SUPPORT needs LWIP_IPV4 turned on." 
        	              DiagnosticCH="PPP_IPV4_SUPPORT需要启用LWIP_IPV4" 
        	              Expression="LWIP_IPV4=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP IPv4 support.&lt;br&gt;By default, this parameter is set with LWIP_IPV4." 
        	  	             NoteCH="此参数用于启用PPP IPv4支持。&lt;br&gt;默认情况下，此参数设置为LWIP_IPV4。"/>
    </RefParameter>    
    <RefParameter Name="PPP_IPV4_SUPPORT" Comment="PPP_IPV4_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables PPP IPv4 support.&lt;br&gt;By default, this parameter is set with LWIP_IPV4.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PPP_IPV4_SUPPORT needs LWIP_IPV4 turned on." 
        	  	             NoteCH="此参数用于启用PPP IPv4支持。&lt;br&gt;默认情况下，此参数设置为LWIP_IPV4。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PPP_IPV4_SUPPORT 需要启用LWIP_IPV4。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_IPV6_SUPPORT" Comment="PPP_IPV6_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=LWIP_IPV6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <Condition Diagnostic="PPP_IPV6_SUPPORT needs LWIP_IPV6 turned on." 
        	              DiagnosticCH="PPP_IPV6_SUPPORT需要启用LWIP_IPV6。" 
        	              Expression="LWIP_IPV6=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP IPv6 support.&lt;br&gt;By default, this parameter is set with LWIP_IPV6.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PPP_IPV6_SUPPORT needs LWIP_IPV6 turned on." 
        	  	             NoteCH="此参数用于启用PPP IPv6支持。&lt;br&gt;默认情况下，此参数设置为LWIP_IPV6。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PPP_IPV6_SUPPORT 需要启用LWIP_IPV6。"/>
    </RefParameter>
    <RefParameter Name="PPP_IPV6_SUPPORT" Comment="PPP_IPV6_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables PPP IPv6 support.&lt;br&gt;By default, this parameter is set with LWIP_IPV6.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: PPP_IPV6_SUPPORT needs LWIP_IPV6 turned on." 
        	  	             NoteCH="此参数用于启用PPP IPv6支持。&lt;br&gt;默认情况下，此参数设置为LWIP_IPV6。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; PPP_IPV6_SUPPORT 需要启用LWIP_IPV6。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_NOTIFY_PHASE" Comment="PPP_NOTIFY_PHASE" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP notify phase support.&lt;br&gt;PPP notify phase support allows you to set a callback which is called on change of the internal PPP state machine.&lt;br&gt;This can be used for example to set a LED pattern depending on the current phase of the PPP session." 
        	  	             NoteCH="此参数用于启用PPP通知阶段支持。&lt;br&gt;PPP通知阶段支持允许用户设置一个回调，在内部PPP状态机发生变化时调用。&lt;br&gt;例如，可以根据PPP会话当前阶段来设置LED模式。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_USE_PBUF_RAM" Comment="PPP_USE_PBUF_RAM" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="pbuf_type PPP is using for LCP, PAP, CHAP, EAP, CCP, IPCP and IP6CP packets.&lt;br&gt;Memory allocated must be single buffered for PPP to works, it requires pbuf that are not going to be chained when allocated. This requires setting PBUF_POOL_BUFSIZE to at least 512 bytes, which is quite huge for small systems.&lt;br&gt;Setting PPP_USE_PBUF_RAM to &quot;Enabled&quot; makes PPP use memory from heap where continuous buffers are required, allowing you to use a smaller PBUF_POOL_BUFSIZE." 
        	  	             NoteCH="pbuf_type PPP 用于 LCP、PAP、CHAP、EAP、CCP、IPCP 和 IP6CP 数据包。&lt;br&gt;分配的内存必须采用单缓冲机制以确保PPP协议正常工作，需要内存分配时不会链接的pbuf。用户需要将 PBUF_POOL_BUFSIZE 设置为至少512字节，这个数值对于小型系统而言非常大。&lt;br&gt;设置 PPP_USE_PBUF_RAM = 开启，PPP在需要连续缓冲区时使用堆内存，允许用户使用较小的PBUF_POOL_BUFSIZE。" />
    </RefParameter>
    
    <RefParameter Name="PPP_FCS_TABLE" Comment="PPP_FCS_TABLE" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Keep a 256*2 byte table to speed up FCS calculation for PPPoS." 
        	  	             NoteCH="保留一个256*2 字节的表格，用于加快PPPoS的FCS计算速度。"/>
    </RefParameter>
    
    <RefParameter Name="PAP_SUPPORT" Comment="PAP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support Password Authentication Protocol (PAP)." 
        	  	             NoteCH="支持密码认证协议（PAP）。"/>
    </RefParameter>
    
    <RefParameter Name="CHAP_SUPPORT" Comment="CHAP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support Challenge Handshake Authentication Protocol (CHAP)." 
        	  	             NoteCH="支持挑战握手认证协议 （CHAP）。"/>
    </RefParameter>
    
    <RefParameter Name="MSCHAP_SUPPORT" Comment="MSCHAP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <Condition Diagnostic="Enable MSCHAP_SUPPORT requires CHAP_SUPPORT enabled." 
        	              DiagnosticCH="启用MSCHAP_SUPPORT需要启用CHAP_SUPPORT。" 
        	              Expression="CHAP_SUPPORT=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support Microsoft version of Challenge Handshake Authentication Protocol (MSCHAP).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set MSCHAP_SUPPORT requires CHAP_SUPPORT enabled." 
        	  	             NoteCH="支持微软挑战握手认证协议（MSCHAP）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置MSCHAP_SUPPORT 需要启用CHAP_SUPPORT。"/>
    </RefParameter>
    <RefParameter Name="MSCHAP_SUPPORT" Comment="MSCHAP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Support Microsoft version of Challenge Handshake Authentication Protocol (MSCHAP).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Enable MSCHAP_SUPPORT requires CHAP_SUPPORT enabled." 
        	  	             NoteCH="支持微软挑战握手认证协议（MSCHAP）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 启用MSCHAP_SUPPORT 需要启用CHAP_SUPPORT。"/>
    </RefParameter>
    
    <RefParameter Name="EAP_SUPPORT" Comment="EAP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP EAP." 
        	  	             NoteCH="此参数用于启用PPP EAP。"/>
    </RefParameter>
    
    <RefParameter Name="CCP_SUPPORT" Comment="CCP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP CCP." 
        	  	             NoteCH="此参数用于启用PPP CCP。"/>
    </RefParameter>
    
    <RefParameter Name="MPPE_SUPPORT" Comment="MPPE_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <Condition Diagnostic="Set MPPE_SUPPORT requires CCP_SUPPORT, MSCHAP_SUPPORT and CHAP_SUPPORT enabled." 
        	              DiagnosticCH="设置MPPE_SUPPORT需要启用CCP_SUPPORT、MSCHAP_SUPPORT 和 CHAP_SUPPORT。" 
        	              Expression="CCP_SUPPORT=1 &amp; MSCHAP_SUPPORT=1 &amp; CHAP_SUPPORT=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables MPPE." 
        	  	             NoteCH="此参数用于启用MPPE。"/>
    </RefParameter>
    <RefParameter Name="MPPE_SUPPORT" Comment="MPPE_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables MPPE.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set MPPE_SUPPORT requires CCP_SUPPORT, MSCHAP and CHAP_SUPPORT enabled." 
        	  	             NoteCH="此参数用于启用MPPE。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置MPPE_SUPPORT 需要启用CCP_SUPPORT、MSCHAP 和 CHAP_SUPPORT。"/>
    </RefParameter>
    
    <RefParameter Name="CBCP_SUPPORT" Comment="CBCP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Support Callback Control Protocol (CBCP).&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: CURRENTLY NOT SUPPORTED! DO NOT SET!" 
        	  	             NoteCH="支持回调控制协议（CBCP）。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 目前不支持！请勿设置！"/>
    </RefParameter>
    
    <RefParameter Name="ECP_SUPPORT" Comment="ECP_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Support ECP Control Protocol.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: CURRENTLY NOT SUPPORTED! DO NOT SET!" 
        	  	             NoteCH="支持ECP协议。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 目前不支持！请勿设置！"/>
    </RefParameter>
    
    <RefParameter Name="DEMAND_SUPPORT" Comment="DEMAND_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter enables dial on demand support.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: CURRENTLY NOT SUPPORTED! DO NOT SET!" 
        	  	             NoteCH="此参数用于启用按需拨号。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 目前不支持！请勿设置！"/>
    </RefParameter>
    
    <RefParameter Name="LQR_SUPPORT" Comment="LQR_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP link quality report. Do nothing except exchanging some LCP packets." 
        	  	             NoteCH="此参数用于启用PPP链路质量报告。只能交换LCP数据包。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_SERVER" Comment="PPP_SERVER" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables PPP server support (waiting for incoming PPP session)." 
        	  	             NoteCH="此参数用于启用PPP服务器支持（等待传入的PPP会话）。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_OUR_NAME" Comment="PPP_OUR_NAME" Type="string edit" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="&quot;lwIP&quot;" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Visible="true" Reload="false">
        <Condition Diagnostic="Set PPP_OUR_NAME requires PPP_SERVER enabled." 
        	              DiagnosticCH="设置PPP_OUR_NAME需要启用PPP_SERVER。" 
        	              Expression="PPP_SERVER=1"/>
        <Annotation Note="This parameter purpose is to set our name for authentication." 
        	  	             NoteCH="此参数用于设置认证名称。"/>
    </RefParameter>
    <RefParameter Name="PPP_OUR_NAME" Comment="PPP_OUR_NAME" Type="string edit" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="&quot;lwIP&quot;" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="This parameter purpose is to set our name for authentication.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set PPP_OUR_NAME requires PPP_SERVER enabled." 
        	  	             NoteCH="此参数用于设置认证名称。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置 PPP_OUR_NAME 需要启用PPP_SERVER。"/>
    </RefParameter>
    
    <RefParameter Name="VJ_SUPPORT" Comment="VJ_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="Set VJ_SUPPORT requires PPP_IPV4_SUPPORT and PPPOS_SUPPORT enabled." 
        	              DiagnosticCH="设置VJ_SUPPORT需要启用PPP_IPV4_SUPPORT 和 PPPOS_SUPPORT。" 
        	              Expression="PPPOS_SUPPORT=1 &amp; PPP_IPV4_SUPPORT=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Support Van Jacobson (VJ) header compression." 
        	  	             NoteCH="支持Van Jacobson (VJ) 头压缩。"/>
    </RefParameter>
    <RefParameter Name="VJ_SUPPORT" Comment="VJ_SUPPORT" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Support Van Jacobson (VJ) header compression.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set VJ_SUPPORT requires PPP_IPV4_SUPPORT and PPPOS_SUPPORT enabled." 
        	  	             NoteCH="支持Van Jacobson (VJ) 头压缩。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置VJ_SUPPORT 需要启用 PPP_IPV4_SUPPORT 和 PPPOS_SUPPORT。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_MD5_RANDM" Comment="PPP_MD5_RANDM" Type="list" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=CHAP_SUPPORT|EAP_SUPPORT|PPPOL2TP_AUTH_SUPPORT" TabName="PPP" TabNameCH="PPP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Use MD5 for better randomness. Enabled by default if CHAP, EAP, or L2TP AUTH support is enabled." 
        	  	             NoteCH="使用MD5确保随机性。当开启CHAP、EAP 或 L2TP AUTH支持时，默认启用此选项。"/>
    </RefParameter>
    
    <RefParameter Name="FSM_DEFTIMEOUT" Comment="FSM_DEFTIMEOUT" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Timeout time in seconds." 
        	  	             NoteCH="超时时间（秒）。"/>
    </RefParameter>
    
    <RefParameter Name="FSM_DEFMAXTERMREQS" Comment="FSM_DEFMAXTERMREQS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="2" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Set the maximum Terminate-Request transmissions." 
        	  	             NoteCH="设置最大终止请求传输次数。"/>
    </RefParameter>
    
    <RefParameter Name="FSM_DEFMAXCONFREQS" Comment="FSM_DEFMAXCONFREQS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Set the Maximum Configure-Request transmissions." 
        	  	             NoteCH="设置最大配置请求传输次数。"/>
    </RefParameter>
    
    <RefParameter Name="FSM_DEFMAXNAKLOOPS" Comment="FSM_DEFMAXNAKLOOPS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="5" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Set the Maximum number of nak loops." 
        	  	             NoteCH="设置NAK循环的最大次数。"/>
    </RefParameter>
    
    <RefParameter Name="UPAP_DEFTIMEOUT" Comment="UPAP_DEFTIMEOUT" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Set the Timeout (seconds) for retransmitting request with User/Password Authentication Protocol." 
        	  	             NoteCH="设置通过用户密码认证协议重新传输请求的超时时间（秒）。"/>
    </RefParameter>
    
    <RefParameter Name="UPAP_DEFTRANSMITS" Comment="UPAP_DEFTRANSMITS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum number of times to send challenge." 
        	  	             NoteCH="此参数用于设置发送挑战的最大次数。"/>
    </RefParameter>
    
    <RefParameter Name="UPAP_DEFREQTIME" Comment="UPAP_DEFREQTIME" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="30" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Time to wait for auth-req from peer with User/Password Authentication Protocol." 
        	  	             NoteCH="使用用户密码认证协议时等待对端发送认证请求的时间。"/>
    </RefParameter>
    
    <RefParameter Name="CHAP_DEFTIMEOUT" Comment="CHAP_DEFTIMEOUT" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="CHAP (Challenge Handshake Authentication Protocol) Timeout time in seconds." 
        	  	             NoteCH="挑战握手认证协议 （CHAP）超时时间（秒）。"/>
    </RefParameter>
    
    <RefParameter Name="CHAP_DEFTRANSMITS" Comment="CHAP_DEFTRANSMITS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Max times to send challenge with Challenge Handshake Authentication Protocol." 
        	  	             NoteCH="使用挑战握手认证协议发送挑战的最大次数。"/>
    </RefParameter>
    
    <RefParameter Name="CHAP_DEFRECHALLENGETIME" Comment="CHAP_DEFRECHALLENGETIME" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="CHAP_DEFRECHALLENGETIME requires PPP_SERVER to be enabled." 
        	              DiagnosticCH="使用CHAP_DEFRECHALLENGETIME 需要启用PPP_SERVER。" 
        	              Expression="PPP_SERVER=1"/>
        <Annotation Note="If this option is &gt; 0, rechallenge the peer every n seconds." 
        	  	             NoteCH="如果此选项设置为&gt; 0，则每n秒向对端重新发起挑战。"/>
    </RefParameter>
    <RefParameter Name="CHAP_DEFRECHALLENGETIME" Comment="CHAP_DEFRECHALLENGETIME" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="If this option is set to 0, there is no rechallenge.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: CHAP_DEFRECHALLENGETIME requires PPP_SERVER to be enabled." 
        	  	             NoteCH="如果此选项设置为0，则不重新发起挑战。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用CHAP_DEFRECHALLENGETIME 需要启用PPP_SERVER。"/>
    </RefParameter>
    
    <RefParameter Name="EAP_DEFREQTIME" Comment="EAP_DEFREQTIME" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter allows to set the time to wait for peer request." 
        	  	             NoteCH="此参数用于设置等待对端请求的时间。"/>
    </RefParameter>
    
    <RefParameter Name="EAP_DEFALLOWREQ" Comment="EAP_DEFALLOWREQ" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter allows to set the times to accept requests." 
        	  	             NoteCH="此参数用于设置接收请求的次数。"/>
    </RefParameter>
    
    <RefParameter Name="EAP_DEFTIMEOUT" Comment="EAP_DEFTIMEOUT" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="6" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="EAP_DEFTIMEOUT requires PPP_SERVER to be enabled." 
        	              DiagnosticCH="使用EAP_DEFTIMEOUT需要启用PPP_SERVER。" 
        	              Expression="PPP_SERVER=1"/>
        <Annotation Note="This parameter allows to set a timeout (seconds) for rexmit." 
        	  	             NoteCH="此参数用于设置重传的超时时间（秒）。"/>
    </RefParameter>
    <RefParameter Name="EAP_DEFTIMEOUT" Comment="EAP_DEFTIMEOUT" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This parameter allows to set a timeout (seconds) for rexmit.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: EAP_DEFTIMEOUT requires PPP_SERVER to be enabled." 
        	  	             NoteCH="此参数用于设置重传的超时时间（秒）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用EAP_DEFTIMEOUT 需要启用PPP_SERVER。"/>
    </RefParameter>
    
    <RefParameter Name="EAP_DEFTRANSMITS" Comment="EAP_DEFTRANSMITS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="EAP_DEFTRANSMITS requires PPP_SERVER to be enabled." 
        	              DiagnosticCH="使用EAP_DEFTRANSMITS需要启用PPP_SERVER。" 
        	              Expression="PPP_SERVER=1"/>
        <Annotation Note="This parameter allows to set maximum number of times to transmit." 
        	  	             NoteCH="此参数用于设置传输的最大次数。"/>
    </RefParameter>
    <RefParameter Name="EAP_DEFTRANSMITS" Comment="EAP_DEFTRANSMITS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This parameter allows to set maximum number of times to transmit.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: EAP_DEFTRANSMITS requires PPP_SERVER to be enabled." 
        	  	             NoteCH="此参数用于设置传输的最大次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用EAP_DEFTRANSMITS 需要启用PPP_SERVER。"/>
    </RefParameter>
    
    <RefParameter Name="LCP_DEFLOOPBACKFAIL" Comment="LCP_DEFLOOPBACKFAIL" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="10" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Default number of times we receive our magic number from the peer before deciding the link is looped-back." 
        	  	             NoteCH="在判定链路为环回之前，从对端接收到魔数字（magic number）的默认次数"/>
    </RefParameter>
    
    <RefParameter Name="LCP_ECHOINTERVAL" Comment="LCP_ECHOINTERVAL" Type="Integer" Unit="Second(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Interval in seconds between keepalive echo requests, 0 to disable in Link Control Protocol." 
        	  	             NoteCH="链路控制协议中，回声请求保持活跃的时间间隔（秒）；设置为0则禁用此项。"/>
    </RefParameter>
    
    <RefParameter Name="LCP_MAXECHOFAILS" Comment="LCP_MAXECHOFAILS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="3" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Number of unanswered echo requests before failure in Link Control Protocol." 
        	  	             NoteCH="链路控制协议中，失败前未应答的回声请求数量。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_MAXIDLEFLAG" Comment="PPP_MAXIDLEFLAG" Type="Integer" Unit="Millisecond(ms)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="100" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Max Xmit idle time (in ms) before resend flag char." 
        	  	             NoteCH="重发标志字符前的最大发送空闲时间（毫秒）。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_MRU" Comment="PPP_MRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1500" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Default MRU = max length of info field." 
        	  	             NoteCH="默认MRU = 信息字段最大长度"/>
    </RefParameter>
    
    <RefParameter Name="PPP_DEFMRU" Comment="PPP_DEFMRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1500" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum negotiated Maximum Receive Unit (MRU) mandated by PPP protocol.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: Try for this!" 
        	  	             NoteCH="PPP 协议规定的最大协商MRU（最大接受单元）。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 可尝试配置。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_MAXMRU" Comment="PPP_MAXMRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1500" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Largest MRU allowed." 
        	  	             NoteCH="允许的最大MRU。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_MINMRU" Comment="PPP_MINMRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="128" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Minimum negotiated Maximum Receive Unit (MRU) mandated by PPP protocol.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: No MRUs below this." 
        	  	             NoteCH="PPP 协议规定的最小协商MRU（最大接受单元）。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; MRU不得低于这个值。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_NUM_TIMEOUTS" Comment="PPP_NUM_TIMEOUTS" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="=PPP_SUPPORT * PPP_NUM_TIMEOUTS_PER_PCB * MEMP_NUM_PPP_PCB" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" >
        <Annotation Note="The number of sys_timeouts required for the PPP module." 
        	  	             NoteCH="PPP模块要求的sys_timeouts超时次数。"/>
    </RefParameter>
    
    <RefParameter Name="PPPOL2TP_DEFMRU" Comment="PPPOL2TP_DEFMRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="1450" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="PPPOL2TP_SUPPORT requires PPPOL2TP_DEFMRU to be defined." 
        	              DiagnosticCH="使用 PPPOL2TP_SUPPORT需要定义PPPOL2TP_DEFMRU。" 
        	              Expression="PPPOL2TP_SUPPORT=1"/>
        <Annotation Note="This parameter sets MTU and MRU for L2TP.&lt;br&gt;The default value (1450) equals: 1500 - PPPoE(6) - PPP Protocol(2) - IPv4 header(20) - UDP Header(8) - L2TP Header(6) - HDLC Header(2) - PPP Protocol(2) - MPPE Header(2) - PPP Protocol(2)." 
        	  	             NoteCH="此参数用于设置L2TP的MTU和MRU。&lt;br&gt; 默认值 (1450) 等于：500 - PPPoE(6) - PPP 协议(2) - IPv4 头部 (20) - UDP 头部 (8) - L2TP 头部 (6) - HDLC 头部 (2) - PPP 协议 (2) - MPPE 头部 (2) - PPP 协议 (2)。"/>
    </RefParameter>
    <RefParameter Name="PPPOL2TP_DEFMRU" Comment="PPPOL2TP_DEFMRU" Type="Integer" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="0" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This parameter sets MTU and MRU for L2TP.&lt;br&gt;The default value (1450) equals: 1500 - PPPoE(6) - PPP Protocol(2) - IPv4 header(20) - UDP Header(8) - L2TP Header(6) - HDLC Header(2) - PPP Protocol(2) - MPPE Header(2) - PPP Protocol(2)." 
        	  	             NoteCH="此参数用于设置L2TP的MTU和MRU。&lt;br&gt;默认值 (1450) 等于：1500 - PPPoE(6) - PPP 协议 (2) - IPv4 头部 (20) - UDP 头部 (8) - L2TP 头部 (6) - HDLC 头部 (2) - PPP 协议 (2) - MPPE 头部 (2) - PPP 协议 (2)。"/>
    </RefParameter>
    
    <RefParameter Name="MAXNAMELEN" Comment="MAXNAMELEN" Type="Integer" Unit="Byte(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="256" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum length of hostname or name for auth." 
        	  	             NoteCH="用于认证的主机名或名称的最大长度。"/>
    </RefParameter>
    
    <RefParameter Name="MAXSECRETLEN" Comment="MAXSECRETLEN" Type="Integer" Unit="Byte(s)" Group="PPP Options" GroupCH="PPP 选项" DefaultValue="256" TabName="PPP" TabNameCH="PPP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="Maximum length of password or secret." 
        	  	             NoteCH="密码或密钥的最大长度。"/>
    </RefParameter>
    
    <!-- *************************** IPv6 Options ******************************-->
    <RefParameter Name="LWIP_IPV6" Comment="LWIP_IPV6" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables IPv6 protocol.&lt;br&gt;&lt;b&gt;Warnings&lt;/b&gt;:&lt;br&gt;1) When using IPv6 you may encounter some compilation issues in lowpan6_common.c that can be avoided waiting for the fixes:&lt;br&gt;- MDK-ARM: &lt;font color=&quot;red&quot;&gt;error 167&lt;/font&gt; can be avoided by replacing in system\arch\cc.h definition of &quot;PACK_STRUCT_BEGIN __packed&quot; by &quot;PACK_STRUCT_BEGIN&quot;&lt;br&gt;- EWARM: warning Pa039 can be avoided by removing in system\arch\cc.h the definition of &quot;PACK_STRUCT_USE_INCLUDES&quot;&lt;br&gt;2) When using IGMP or IPv6, LWIP_RAND() needs to be defined to a random-function returning an u32_t random value (in arch/cc.h).&lt;br&gt;Therefore, LWIP_RAND() has been added in cc.h (in \system\arch).&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other IPv6 options are visible as &quot;Advanced Parameters&quot;." 
        	  	             NoteCH="此参数用于启用IPv6 协议。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;:&lt;br&gt;1) 使用IPv6协议时，可能会在lowpan6_common.c中遇到一些编译问题，可以通过以下方式解决：&lt;br&gt;- MDK-ARM：&lt;font color=&quot;red&quot;&gt;错误代码 167&lt;/font&gt; 要解决这个问题，需要将system\arch\cc.h中的&quot;PACK_STRUCT_BEGIN __packed&quot; 替换为&quot;PACK_STRUCT_BEGIN&quot;&lt;br&gt;- EWARM：对于Pa039警告，则是删除system\arch\cc.h中的&quot;PACK_STRUCT_USE_INCLUDES&quot;&lt;br&gt;2) 使用IGMP 或 IPv6协议时，需要将LWIP_RAND()定义为一个随机函数，返回u32_t随机值（arch/cc.h）。&lt;br&gt;因此，需要将LWIP_RAND()添加到 cc.h（in \system\arch）。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有IPv6相关选项都显示为&quot;高级参数&quot;。"/>
    </RefParameter>
    
    <RefParameter Name="IPV6_REASS_MAXAGE" Comment="IPV6_REASS_MAXAGE" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="60" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of maximum time (in multiples of IP6_REASS_TMR_INTERVAL - so seconds, normally) a fragmented IP packet waits for all fragments to arrive. If not all fragments arrived in this time, the whole packet is discarded." 
        	  	             NoteCH="此参数用于设置分段IP数据包等待所有片段到达的最长时间（以IP6_REASS_TMR_INTERVAL的倍数表示，通常以秒计算）。如果有任何片段没有在此时间范围内到达，则丢弃整个数据包。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_SCOPES" Comment="LWIP_IPV6_SCOPES" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <Condition Expression="LWIP_IPV6=1 &amp; LWIP_SINGLE_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enable support for IPv6 address scopes, ensuring that e.g. link-local addresses are really treated as link-local. Disable this setting only for single-interface configurations.&lt;br&gt;All addresses that have a scope according to the default policy (link-local unicast addresses, interface-local and link-local multicast addresses) should now have a zone set on them before being passed to the core API, although lwIP will currently attempt to select a zone on the caller's behalf when necessary. Applications that directly assign IPv6 addresses to interfaces (which is NOT recommended) must now ensure that link-local addresses carry the netif's zone. See the new ip6_zone.h header file for more information and relevant macros. For now it is still possible to turn off scopes support through the new LWIP_IPV6_SCOPES option. When upgrading an implementation that uses the core API directly, it is highly recommended to enable LWIP_IPV6_SCOPES_DEBUG at least for a while, to ensure e.g. proper address initialization." 
        	  	             NoteCH="此参数用于支持IPv6地址范围，确保例如链路本地地址确实被当作链路本地地址来处理。只有单接口配置下才禁用此设置。&lt;br&gt; 根据默认策略，所有具有作用域的地址（链路本地单播地址、接口本地和链路本地组播地址），在传递给核心API之前，都应该设置一个区域；不过目前 lwIP 会在必要时代表调用方选择一个区域。直接将IPv6地址分配给接口的应用程序（不建议）必须确保链路本地地址携带netif区域。有关更多信息和相关宏，请参见新的 ip6_zone.h 头文件。当前仍然可以通过设置新的LWIP_IPV6_SCOPES选项关闭作用域支持。当对直接使用核心 API 的实现进行升级时，强烈建议至少在一段时间内启用 LWIP_IPV6_SCOPES_DEBUG，以确保例如地址正确初始化等操作。"/>
    </RefParameter>
    <RefParameter Name="LWIP_IPV6_SCOPES" Comment="LWIP_IPV6_SCOPES" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enable support for IPv6 address scopes, ensuring that e.g. link-local addresses are really treated as link-local. Disable this setting only for single-interface configurations.&lt;br&gt;All addresses that have a scope according to the default policy (link-local unicast addresses, interface-local and link-local multicast addresses) should now have a zone set on them before being passed to the core API, although lwIP will currently attempt to select a zone on the caller's behalf when necessary. Applications that directly assign IPv6 addresses to interfaces (which is NOT recommended) must now ensure that link-local addresses carry the netif's zone. See the new ip6_zone.h header file for more information and relevant macros. For now it is still possible to turn off scopes support through the new LWIP_IPV6_SCOPES option. When upgrading an implementation that uses the core API directly, it is highly recommended to enable LWIP_IPV6_SCOPES_DEBUG at least for a while, to ensure e.g. proper address initialization." 
        	  	             NoteCH="此参数用于支持IPv6地址范围，确保例如链路本地地址确实被当作链路本地地址来处理。只有单接口配置下才禁用此设置。&lt;br&gt;根据默认策略，所有具有作用域的地址（链路本地单播地址、接口本地和链路本地组播地址），在传递给核心API之前，都应该设置一个区域；不过目前 lwIP 会在必要时代表调用方选择一个区域。直接将IPv6地址分配给接口的应用程序（不建议）必须确保链路本地地址携带netif区域。有关更多信息和相关宏，请参见新的 ip6_zone.h 头文件。当前仍然可以通过设置新的LWIP_IPV6_SCOPES选项关闭作用域支持。当对直接使用核心 API 的实现进行升级时，强烈建议至少在一段时间内启用 LWIP_IPV6_SCOPES_DEBUG，以确保例如地址正确初始化等操作。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_SCOPES_DEBUG" Comment="LWIP_IPV6_SCOPES_DEBUG" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter performs run-time checks to verify that addresses are properly zoned (see ip6_zone.h on what that means) where it matters.&lt;br&gt;Enabling this setting is highly recommended when upgrading from an existing installation that is not yet scope-aware; otherwise it may be too expensive." 
        	  	             NoteCH="此参数用于执行运行时检查，验证是否正确划分地址（参见ip6_zone.h文件描述）。&lt;br&gt;针对在不具备作用域的现有设备中进行升级时，强烈建议使用此参数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_NUM_ADDRESSES" Comment="LWIP_IPV6_NUM_ADDRESSES" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="3" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of IPv6 addresses per netif." 
        	  	             NoteCH="此参数用于设置每个netif中的IPv6地址数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_FORWARD" Comment="LWIP_IPV6_FORWARD" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables the forward IPv6 packets across netifs." 
        	  	             NoteCH="此参数用于开启跨netif转发IPv6数据包。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_FRAG" Comment="LWIP_IPV6_FRAG" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to fragment outgoing IPv6 packets that are too big." 
        	  	             NoteCH="此参数允许对太大的IPv6传出数据包进行分段。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_REASS" Comment="LWIP_IPV6_REASS" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="=LWIP_IPV6" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to reassemble incoming IPv6 packets that fragmented." 
        	  	             NoteCH="此参数允许重组分段传入的IPv6数据包。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_SEND_ROUTER_SOLICIT" Comment="LWIP_IPV6_SEND_ROUTER_SOLICIT" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to Send router solicitation messages during network startup." 
        	  	             NoteCH="此参数允许在网络启动期间发送路由器请求消息。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_AUTOCONFIG" Comment="LWIP_IPV6_AUTOCONFIG" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="=LWIP_IPV6" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables stateless address autoconfiguration as per RFC 4862." 
        	  	             NoteCH="此参数依据 RFC 4862 标准启用无状态地址自动配置功能。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_ADDRESS_LIFETIMES" Comment="LWIP_IPV6_ADDRESS_LIFETIMES" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="=LWIP_IPV6_AUTOCONFIG" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_IPV6_ADDRESS_LIFETIMES requires LWIP_IPV6_AUTOCONFIG." 
        	              DiagnosticCH="使用LWIP_IPV6_ADDRESS_LIFETIMES需要启用LWIP_IPV6_AUTOCONFIG。" 
        	              Expression="LWIP_IPV6_AUTOCONFIG=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter keeps valid and preferred lifetimes for each IPv6 address. Required for LWIP_IPV6_AUTOCONFIG. May still be enabled otherwise, in which case the application may assign address lifetimes with the appropriate macros. Addresses with no lifetime are assumed to be static. If this option is disabled, all addresses are assumed to be static." 
        	  	             NoteCH="此参数会为每个 IPv6 地址保留有效生存期和首选生存期。启用LWIP_IPV6_AUTOCONFIG必须设置此参数。其他情况也可以启用此参数。若启用，应用程序可能会通过合适的宏定义来分配地址生存期。未设置生存期的地址默认为静态地址。若禁用此选项，则所有地址都视为静态地址。"/>
    </RefParameter>    
    <RefParameter Name="LWIP_IPV6_ADDRESS_LIFETIMES" Comment="LWIP_IPV6_ADDRESS_LIFETIMES" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter keeps valid and preferred lifetimes for each IPv6 address. Required for LWIP_IPV6_AUTOCONFIG. May still be enabled otherwise, in which case the application may assign address lifetimes with the appropriate macros. Addresses with no lifetime are assumed to be static. If this option is disabled, all addresses are assumed to be static.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_IPV6_ADDRESS_LIFETIMES requires LWIP_IPV6_AUTOCONFIG." 
        	  	             NoteCH="此参数会为每个 IPv6 地址保留有效生存期和首选生存期。启用LWIP_IPV6_AUTOCONFIG必须设置此参数。其他情况也可以启用此参数。若启用，应用程序可能会通过合适的宏定义来分配地址生存期。未设置生存期的地址默认为静态地址。若禁用此选项，则所有地址都视为静态地址。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_DUP_DETECT_ATTEMPTS" Comment="LWIP_IPV6_DUP_DETECT_ATTEMPTS" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter sets the number of duplicate address detection attempts." 
        	  	             NoteCH="此参数用于设置重复地址检测的尝试次数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_DHCP6" Comment="LWIP_IPV6_DHCP6" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables DHCPv6 stateful/stateless address autoconfiguration." 
        	  	             NoteCH="此参数用于启用DHCPv6 有状态/无状态地址自动配置。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_DHCP6_STATEFUL" Comment="LWIP_IPV6_DHCP6_STATEFUL" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables DHCPv6 stateful address autoconfiguration." 
        	  	             NoteCH="此参数用于启用DHCPv6有状态地址自动配置。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_DHCP6_STATELESS" Comment="LWIP_IPV6_DHCP6_STATELESS" Type="list" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables DHCPv6 stateless address autoconfiguration." 
        	  	             NoteCH="此参数用于启用DHCPv6无状态地址自动配置。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP6_GET_NTP_SRV" Comment="LWIP_DHCP6_GET_NTP_SRV" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="LWIP_DHCP6_GETS_NTP=1: Request NTP servers via DHCPv6. For each response packet, a callback is called, which has to be provided by the port: void dhcp6_set_ntp_servers(u8_t num_ntp_servers, ip_addr_t* ntp_server_addrs)" 
        	  	             NoteCH="LWIP_DHCP6_GETS_NTP=1：通过DHCPv6请求NTP服务器。对于每个响应数据包，都要调用一个回调函数，该回调函数由 void dhcp6_set_ntp_servers(u8_t num_ntp_servers, ip_addr_t* ntp_server_addrs) 端口提供。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP6_MAX_NTP_SERVERS" Comment="LWIP_DHCP6_MAX_NTP_SERVERS" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum of NTP servers requested." 
        	  	             NoteCH="此参数用于设置所请求的NTP服务器的最大数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DHCP6_MAX_DNS_SERVERS" Comment="LWIP_DHCP6_MAX_DNS_SERVERS" Type="Integer" Group="IPv6 Options" GroupCH="IPv6 选项" DefaultValue="=DNS_MAX_SERVERS" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum equest DNS servers via DHCPv6. DNS servers received in the response are passed to DNS via @ref dns_setserver() (up to the maximum limit defined here)." 
        	  	             NoteCH="此参数用于设置通过DHCPv6请求的DNS服务器的最大数量。响应过程中接收到的DNS服务器会通过@ref dns_setserver() 传递给DNS系统（不得超过此选项设定的最大值）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ICMP6" Comment="LWIP_ICMP6" Type="list" Group="IPv6 - ICMP6 Options" GroupCH="IPv6 - ICMP6 选项" DefaultValue="=LWIP_IPV6" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables ICMPv6 protocol (mandatory per RFC)." 
        	  	             NoteCH="此参数用于启用ICMPv6协议（根据相关 RFC 要求，此为必需操作）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ICMP6_DATASIZE" Comment="LWIP_ICMP6_DATASIZE" Type="Integer" Unit="Byte(s)" Group="IPv6 - ICMP6 Options" GroupCH="IPv6 - ICMP6 选项" DefaultValue="8" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of bytes from original packet to send back in ICMPv6 error messages." 
        	  	             NoteCH="此参数用于设置ICMPv6错误消息中返回的原始数据包的字节数。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ICMP6_HL" Comment="LWIP_ICMP6_HL" Type="Integer" Group="IPv6 - ICMP6 Options" GroupCH="IPv6 - ICMP6 选项" DefaultValue="255" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the default hop limit for ICMPv6 messages." 
        	  	             NoteCH="此参数用于设置ICMPv6消息的默认跳数限制。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_IPV6_MLD" Comment="LWIP_IPV6_MLD" Type="list" Group="IPv6 - Multicast Listener Discovery Options" GroupCH="IPv6 - 组播侦听发现协议(MLD)选项" DefaultValue="=LWIP_IPV6" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables multicast listener discovery protocol. If LWIP_IPV6 is enabled but this setting is disabled, the MAC layer must indiscriminately pass all inbound IPv6 multicast traffic to lwIP.&lt;br&gt;&lt;b&gt;Warning: &lt;/b&gt; Enable LWIP_IPV6 when using LWIP_IPV6_MLD, to avoid having compilation warnings on ip6_addr_ismulticast/ip6_current_dest_addr functions." 
        	  	             NoteCH="此参数用于启用组播侦听发现协议（MLD）。当启用LWIP_IPV6但禁用此选项时，MAC 层必须不加区分地将所有传入的 IPv6 组播流量传递给 lwIP。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_MLD6_GROUP" Comment="MEMP_NUM_MLD6_GROUP" Type="Integer" Group="IPv6 - Multicast Listener Discovery Options" GroupCH="IPv6 - 组播侦听发现协议(MLD)选项" DefaultValue="4" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum number of IPv6 multicast groups that can be joined.&lt;br&gt;There must be enough groups so that each netif can join the solicited-node multicast group for each of its local addresses, plus one for MDNS if applicable, plus any number of groups to be joined on UDP sockets." 
        	  	             NoteCH="此参数用于设置可加入的IPv6组播组的最大数量。&lt;br&gt;必须设置足够数量的组播组，以便每个netif 为其本地地址加入被请求节点组播组。若适用，还需要为MDNS加入一个组播组，以及在UDP socket上加入任意数量的组播组。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_QUEUEING" Comment="LWIP_ND6_QUEUEING" Type="list" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="=LWIP_IPV6" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to queue outgoing IPv6 packets while MAC address." 
        	  	             NoteCH="此参数允许在进行 MAC 地址解析时，将待发送的 IPv6 数据包进行排队。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_NUM_ND6_QUEUE" Comment="MEMP_NUM_ND6_QUEUE" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="20" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the maximum number of IPv6 packets to queue during MAC resolution." 
        	  	             NoteCH="此参数用于设置在 MAC 地址解析期间可排队的 IPv6 数据包的最大数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_NUM_NEIGHBORS" Comment="LWIP_ND6_NUM_NEIGHBORS" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="10" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of entries in IPv6 neighbor cache." 
        	  	             NoteCH="此参数用于设置IPv6 邻居缓存中的条目数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_NUM_DESTINATIONS" Comment="LWIP_ND6_NUM_DESTINATIONS" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="10" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of entries in IPv6 destination cache." 
        	  	             NoteCH="此参数用于设置IPv6 目的缓存中的条目数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_NUM_PREFIXES" Comment="LWIP_ND6_NUM_PREFIXES" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="5" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of entries in IPv6 on-link prefixes cache." 
        	  	             NoteCH="此参数用于设置IPv6 链路上前缀缓存中的条目数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_NUM_ROUTERS" Comment="LWIP_ND6_NUM_ROUTERS" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="3" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the number of entries in IPv6 default router cache." 
        	  	             NoteCH="此参数用于设置IPv6 默认路由器缓存中的条目数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_MAX_MULTICAST_SOLICIT" Comment="LWIP_ND6_MAX_MULTICAST_SOLICIT" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="3" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the max number of multicast solicit messages to send (neighbor solicit and router solicit)." 
        	  	             NoteCH="此参数用于设置要发送的组播请求消息的最大数量（邻居请求和路由器请求）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_MAX_UNICAST_SOLICIT" Comment="LWIP_ND6_MAX_UNICAST_SOLICIT" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="3" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter set the max number of unicast neighbor solicitation messages to send during neighbor reachability detection." 
        	  	             NoteCH="此参数用于设置邻居可达检测期间需要发送的单播邻居请求消息的最大数量。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_MAX_ANYCAST_DELAY_TIME" Comment="LWIP_ND6_MAX_ANYCAST_DELAY_TIME" Type="Integer" Unit="Millisecond(ms)" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="1000" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter is unused: See ND RFC (time in milliseconds)." 
        	  	             NoteCH="此参数不可用：参见 ND RFC（时间以毫秒计）。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT" Comment="LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT" Type="Integer" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="3" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter is unused: See ND RFC." 
        	  	             NoteCH="此参数不可用：参见ND RFC。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_REACHABLE_TIME" Comment="LWIP_ND6_REACHABLE_TIME" Type="Integer" Unit="Millisecond(ms)" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="30000" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter sets the default neighbor reachable time (in milliseconds). May be updated by Router Advertisement message." 
        	  	             NoteCH="此参数用于设置默认邻居可达时间（以毫秒计）。此参数可能会通过路由器通告消息更新。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_RETRANS_TIMER" Comment="LWIP_ND6_RETRANS_TIMER" Type="Integer" Unit="Millisecond(ms)" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="1000" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter sets the default retransmission timer for solicitation messages." 
        	  	             NoteCH="此参数用于设置请求消息的默认重传定时器。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_DELAY_FIRST_PROBE_TIME" Comment="LWIP_ND6_DELAY_FIRST_PROBE_TIME" Type="Integer" Unit="Millisecond(ms)" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="5000" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Annotation Note="This parameter sets the Delay before first unicast neighbor solicitation message is sent, during neighbor reachability detection." 
        	  	             NoteCH="此参数用于在邻居可达检测期间首次发送单播邻居请求消息之前的延迟时间。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_ALLOW_RA_UPDATES" Comment="LWIP_ND6_ALLOW_RA_UPDATES" Type="list" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows to allow Router Advertisement messages to update reachable time and retransmission timers, and netif MTU." 
        	  	             NoteCH="此参数允许路由器通告消息更新可达时间、重传定时器和netif MTU。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_TCP_REACHABILITY_HINTS" Comment="LWIP_ND6_TCP_REACHABILITY_HINTS" Type="list" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="1" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter allows TCP to provide Neighbor Discovery with reachability hints for connected destinations.&lt;br&gt;This helps avoid sending unicast neighbor solicitation messages." 
        	  	             NoteCH="此参数允许TCP为邻居发现提供连接目的地相关的可达性提示。&lt;br&gt;有助于避免发送单播邻居请求消息。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_ND6_RDNSS_MAX_DNS_SERVERS" Comment="LWIP_ND6_RDNSS_MAX_DNS_SERVERS" Type="list" Group="IPv6 - Neighboor Discovery Options" GroupCH="IPv6 - 邻居发现协议(NDP)选项" DefaultValue="0" TabName="IPv6" TabNameCH="IPv6" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_ND6_RDNSS_MAX_DNS_SERVERS &gt; 0: Use IPv6 Router Advertisement Recursive&lt;br&gt;DNS Server Option (as per RFC 6106) to copy a defined maximum number of DNS&lt;br&gt;servers to the DNS module." 
        	  	             NoteCH="LWIP_ND6_RDNSS_MAX_DNS_SERVERS &gt; 0：使用IPv6 路由器通告递归&lt;br&gt;DNS服务器选项（根据 RFC 6106）用于将定义的最大数量的DNS&lt;br&gt;服务器复制到DNS模块中。"/>
    </RefParameter>
    
    <!-- *************************** HTTPD Options ******************************-->
    <RefParameter Name="LWIP_HTTPD" Comment="LWIP_HTTPD" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable HTTPD requires user specific code not yet generated by AT32 Work Bench. This is reserved for advanced users.&lt;br&gt;&lt;b&gt;Warnings&lt;/b&gt;:&lt;br&gt;&lt;font color=&quot;red&quot;&gt;Since HTTPD is only partially supported, some manual actions are required from user: one of user mandatory action is to create the &quot;fsdata_custom.c&quot; file (see HTTPD_USE_CUSTOM_FSDATA advanced parameter description).&lt;/font&gt;&lt;br&gt;&lt;b&gt;Note&lt;/b&gt;:&lt;br&gt;- This parameter introduced by AT32 Work Bench is not part of LwIP stack.&lt;br&gt; - All other HTTPD options are visible as &quot;Advanced Parameters&quot; and only when LWIP_HTTPD is enabled.&lt;br&gt;&lt;br&gt;This httpd supports for a rudimentary server-side-include facility which will replace tags of the form &lt;!--#tag--&gt; in any file whose extension is .shtml, .shtm or .ssi with strings provided by an include handler whose pointer is provided to the module via function http_set_ssi_handler().&lt;br&gt;Additionally, a simple common gateway interface (CGI) handling mechanism has been added to allow clients to hook functions to particular request URIs.&lt;br&gt;&lt;br&gt;To enable SSI support, define label LWIP_HTTPD_SSI in lwipopts.h.&lt;br&gt;To enable CGI support, define label LWIP_HTTPD_CGI in lwipopts.h.&lt;br&gt;&lt;br&gt;By default, the server assumes that HTTP headers are already present in each file stored in the file system. By defining LWIP_HTTPD_DYNAMIC_HEADERS in lwipopts.h, this behavior can be changed such that the server inserts the headers automatically based on the extension of the file being served. If this mode is used, be careful to ensure that the file system image used does not already contain the header information.&lt;br&gt;&lt;br&gt;File system images without headers can be created using the makefsfile tool with the -h command line option.&lt;br&gt;&lt;br&gt;Notes about valid SSI tags:&lt;br&gt;The following assumptions are made about tags used in SSI markers:&lt;br&gt;1. No tag may contain '-' or whitespace characters within the tag name.&lt;br&gt;2. Whitespace is allowed between the tag leadin and the start of the tag name and between the tag name and the leadout string.&lt;br&gt;3. The maximum tag name length is LWIP_HTTPD_MAX_TAG_NAME_LEN, currently 8 characters.&lt;br&gt;&lt;br&gt;Notes on CGI usage:&lt;br&gt;The simple CGI support offered here works with GET method requests only and can handle up to 16 parameters encoded into the URI. The handler function may not write directly to the HTTP output but must return a filename that the HTTP server will send to the browser as a response to the incoming CGI request.&lt;br&gt;&lt;br&gt;The list of supported file types is quite short, so if makefsdata complains about an unknown extension, make sure to add it (and its doctype) to the 'g_psHTTPHeaders' list." 
        	  	             NoteCH="启用HTTPD需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;:&lt;br&gt;&lt;font color=&quot;red&quot;&gt;由于只有一定程度的HTTPD支持，用户需要进行一些手动操作，包括必须创建一个&quot;fsdata_custom.c&quot; 文件（参见HTTPD_USE_CUSTOM_FSDATA的高级参数描述）。&lt;/font&gt;&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;:&lt;br&gt;- 此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。&lt;br&gt; - 所有其他HTTPD选项都显示为&quot;高级参数&quot;，且只有在LWIP_HTTPD启用的情况下可见。&lt;br&gt;&lt;br&gt;HTTPD支持基础的SSI（server-side-include）功能，对于任何扩展名为.shtml、.shtm 或 .ssi的文件，会使用include handler程序（其指针通过function http_set_ssi_handler()函数传递给该模块）提供的字符串来替换这类文件中 &lt;!--#tag--&gt; 格式的标签。&lt;br&gt;此外，还添加了一种简单的公共网关接口（CGI）处理机制，允许客户端将函数与特定的请求URI关联起来。&lt;br&gt;&lt;br&gt;启用SSI功能需要定义lwipopts.h文件中的LWIP_HTTPD_SSI标签。 &lt;br&gt;&lt;br&gt;启用CGI功能需要定义lwipopts.h文件中的LWIP_HTTPD_CGI标签。&lt;br&gt;&lt;br&gt;默认情况下，服务器假定文件系统储存的各个文件已经包含了HTTP头部信息。可以通过定义lwipopts.h文件中的LWIP_HTTPD_DYNAMIC_HEADERS来改变此默认条件，让服务器能够根据所提供文件的扩展名自动插入HTTP头部信息。采用这种方式时，确保所使用的文件系统映像不包含HTTP头部信息。&lt;br&gt;&lt;br&gt;可以使用makefsfile工具和-h命令行来创建不包含头部信息的文件系统映像。&lt;br&gt;&lt;br&gt;SSI标签相关说明：&lt;br&gt;关于SSI标记中使用的标签，有以下假设：&lt;br&gt;1. 任何标签的名称中都不允许包含“-”或空白字符。&lt;br&gt;2. 标签引入、标签名称开头之间、标签名称和引出字符串之间允许空格。&lt;br&gt;3. 标签名称最大长度为 LWIP_HTTPD_MAX_TAG_NAME_LEN（目前是8个字符）。&lt;br&gt;&lt;br&gt;CGI使用注意事项：&lt;br&gt;该简易CGI功能仅支持GET 方法请求，并且最多能够处理编码在URI中的16个参数。处理函数不能直接对HTTP输出进行写入操作，但是必须返回一个文件名，HTTP服务器会向浏览器发送该文件名作为对传入CGI请求的响应。&lt;br&gt;&lt;br&gt;支持的文件类型非常有限，如果makefsdata对未知文件扩展名进行报错，需要确保将该扩展名（及其对应的文档类型）添加到“g_psHTTPHeaders”列表中。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_CGI" Comment="LWIP_HTTPD_CGI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_CGI requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_CGI需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support CGI (old style)." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持CGI功能（旧式）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_CGI" Comment="LWIP_HTTPD_CGI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support CGI (old style).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_CGI requires LWIP_HTTPD enabled." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持CGI功能（旧式）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_CGI 需要启用 LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_CGI_SSI" Comment="LWIP_HTTPD_CGI_SSI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_CGI_SSI requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support CGI (new style)." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持CGI功能（新式）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_CGI_SSI" Comment="LWIP_HTTPD_CGI_SSI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support CGI (new style).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_CGI_SSI requires LWIP_HTTPD enabled." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持CGI功能（新式）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_CGI_SSI 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SSI" Comment="LWIP_HTTPD_SSI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SSI requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SSI 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support SSI (Server-Side-Includes)." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持SSI（服务器端内嵌）功能。"/>
    </RefParameter>    
    <RefParameter Name="LWIP_HTTPD_SSI" Comment="LWIP_HTTPD_SSI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support SSI (Server-Side-Includes).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SSI requires LWIP_HTTPD enabled." 
        	  	             NoteCH="设置为&quot;开启&quot;以支持SSI（服务器端内嵌）功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SSI 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SSI_RAW" Comment="LWIP_HTTPD_SSI_RAW" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SSI_RAW requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SSI_RAW需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to implement an SSI tag handler callback that gets a const char* to the tag (instead of an index into a pre-registered array of known tags).&lt;br&gt;If this is &quot;Disabled&quot;, the SSI handler callback function is only called pre-registered tags." 
        	  	             NoteCH="设置为&quot;开启&quot;以实现SSI标签处理回调函数，此函数会接收一个指向该标签的const char*指针（而非指向预先注册的已知标签数组的索引）。&lt;br&gt;当此参数设置为&quot;关闭&quot;时，SSI处理回调函数只对预先注册过的标签有用。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SSI_RAW" Comment="LWIP_HTTPD_SSI_RAW" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to implement an SSI tag handler callback that gets a const char* to the tag (instead of an index into a pre-registered array of known tags).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SSI_RAW requires LWIP_HTTPD enabled." 
        	  	             NoteCH="设置为&quot;开启&quot;以实现SSI标签处理回调函数，此函数会接收一个指向该标签的const char*指针（而非指向预先注册的已知标签数组的索引）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;使用LWIP_HTTPD_SSI_RAW 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SSI_BY_FILE_EXTENSION" Comment="LWIP_HTTPD_SSI_BY_FILE_EXTENSION" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SSI_BY_FILE_EXTENSION requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SSI_BY_FILE_EXTENSION需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Disabled&quot; to prevent parsing the file extension at runtime to decide if a file should be scanned for SSI tags or not." 
        	  	             NoteCH="将此参数设置为&quot;关闭&quot;可避免在运行时解析文件扩展名，从而决定是否对文件进行SSI 标签扫描。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SSI_BY_FILE_EXTENSION" Comment="LWIP_HTTPD_SSI_BY_FILE_EXTENSION" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Disabled&quot; to prevent parsing the file extension at runtime to decide if a file should be scanned for SSI tags or not.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SSI_BY_FILE_EXTENSION requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;关闭&quot;可避免在运行时解析文件扩展名，从而决定是否对文件进行SSI 标签扫描。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SSI_BY_FILE_EXTENSION 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SUPPORT_POST" Comment="LWIP_HTTPD_SUPPORT_POST" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SUPPORT_POST requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SUPPORT_POST 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support HTTP POST." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;支持HTTP POST方法。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SUPPORT_POST" Comment="LWIP_HTTPD_SUPPORT_POST" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support HTTP POST.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SUPPORT_POST requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;支持HTTP POST方法。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SUPPORT_POST 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_MAX_CGI_PARAMETERS" Comment="LWIP_HTTPD_MAX_CGI_PARAMETERS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="16" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_MAX_CGI_PARAMETERS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_MAX_CGI_PARAMETERS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The maximum number of parameters that the CGI handler can be sent." 
        	  	             NoteCH="CGI处理程序可以接收的最大参数数量。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_MAX_CGI_PARAMETERS" Comment="LWIP_HTTPD_MAX_CGI_PARAMETERS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum number of parameters that the CGI handler can be sent.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_MAX_CGI_PARAMETERS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="CGI处理程序可以接收的最大参数数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_MAX_CGI_PARAMETERS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SSI_MULTIPART" Comment="LWIP_HTTPD_SSI_MULTIPART" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SSI_MULTIPART requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SSI_MULTIPART 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_HTTPD_SSI_MULTIPART==Enabled: SSI handler function is called with 2 more arguments indicating a counter for insert string that are too long to be inserted at once: the SSI handler function must then set 'next_tag_part' which will be passed back to it in the next call." 
        	  	             NoteCH="LWIP_HTTPD_SSI_MULTIPART==开启: SSI处理函数被调用时带有2个额外参数，用作计时器帮助处理因过长无法一次性完成插入操作的字符串：SSI处理函数必须设置“next_tag_part”变量，此变量将在下一次此函数时被传回。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SSI_MULTIPART" Comment="LWIP_HTTPD_SSI_MULTIPART" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="LWIP_HTTPD_SSI_MULTIPART==Enabled: SSI handler function is called with 2 more arguments indicating a counter for insert string that are too long to be inserted at once: the SSI handler function must then set 'next_tag_part' which will be passed back to it in the next call.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SSI_MULTIPART requires LWIP_HTTPD enabled." 
        	  	             NoteCH="LWIP_HTTPD_SSI_MULTIPART==开启：SSI处理函数被调用时带有2个额外参数，用作计时器帮助处理因过长无法一次性完成插入操作的字符串：SSI处理函数必须设置“next_tag_part”变量，此变量将在下一次此函数时被传回。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SSI_MULTIPART 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_MAX_TAG_NAME_LEN" Comment="LWIP_HTTPD_MAX_TAG_NAME_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="8" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_MAX_TAG_NAME_LEN requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_MAX_TAG_NAME_LEN 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The maximum length of the string comprising the tag name.&lt;br&gt;ATTENTION: tags longer than this are ignored, not truncated!" 
        	  	             NoteCH="组成标签名称的字符串的最大长度。&lt;br&gt;注意：超过最大长度的标签将被忽略，不会被截断。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_MAX_TAG_NAME_LEN" Comment="LWIP_HTTPD_MAX_TAG_NAME_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum length of the string comprising the tag name.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_MAX_TAG_NAME_LEN requires LWIP_HTTPD enabled." 
        	  	             NoteCH="组成标签名称的字符串的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_MAX_TAG_NAME_LEN 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_MAX_TAG_INSERT_LEN" Comment="LWIP_HTTPD_MAX_TAG_INSERT_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="192" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_MAX_TAG_INSERT_LEN requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_MAX_TAG_INSERT_LEN 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The maximum length of string that can be returned to replace any given tag.&lt;br&gt;If this buffer is not long enough, use LWIP_HTTPD_SSI_MULTIPART." 
        	  	             NoteCH="返回用于替换任意给定标签的字符串的最大长度。&lt;br&gt;如果这个缓冲区不够长，请使用LWIP_HTTPD_SSI_MULTIPART。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_MAX_TAG_INSERT_LEN" Comment="LWIP_HTTPD_MAX_TAG_INSERT_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum length of string that can be returned to replace any given tag.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_MAX_TAG_INSERT_LEN requires LWIP_HTTPD enabled." 
        	  	             NoteCH="返回用于替换任意给定标签的字符串的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_MAX_TAG_INSERT_LEN 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_POST_MANUAL_WND" Comment="LWIP_HTTPD_POST_MANUAL_WND" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_POST_MANUAL_WND requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_POST_MANUAL_WND 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="HTTP POST Manual WND." 
        	  	             NoteCH="HTTP POST 手动设置窗口。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_POST_MANUAL_WND" Comment="LWIP_HTTPD_POST_MANUAL_WND" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="HTTP POST Manual WND.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_POST_MANUAL_WND requires LWIP_HTTPD enabled." 
        	  	             NoteCH="HTTP POST 手动设置窗口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_POST_MANUAL_WND 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_SERVER_AGENT" Comment="HTTPD_SERVER_AGENT" Type="string edit" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="&quot;lwIP/2.0.0 (http://savannah.nongnu.org/projects/lwip)&quot;" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_SERVER_AGENT requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_SERVER_AGENT 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="This string is passed in the HTTP header as Server (Example for LwIP 2.0.0)." 
        	  	             NoteCH="此字符串作为“Server”字段在 HTTP 报头中传递（以 LwIP 2.0.0为例）。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_SERVER_AGENT" Comment="HTTPD_SERVER_AGENT" Type="string edit" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="This string is passed in the HTTP header as Server (Example for LwIP 2.0.0).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_SERVER_AGENT requires LWIP_HTTPD enabled." 
        	  	             NoteCH="此字符串作为“Server”字段在 HTTP 报头中传递（以 LwIP 2.0.0为例）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_SERVER_AGENT 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_DYNAMIC_HEADERS" Comment="LWIP_HTTPD_DYNAMIC_HEADERS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_DYNAMIC_HEADERS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_DYNAMIC_HEADERS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; if you want to include code that creates HTTP headers at runtime. Default is off: HTTP headers are then created statically by the makefsdata tool. Static headers mean smaller code size, but the (readonly) fsdata will grow a bit as every file includes the HTTP header." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，以包含在运行时创建HTTP头部的代码。此参数默认为关闭：此时HTTP头部由makefsdata 工具静态创建。静态头部意味着代码更小，但由于每个文件都包含HTTP头部，（只读）fsdta会略有增加。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_DYNAMIC_HEADERS" Comment="LWIP_HTTPD_DYNAMIC_HEADERS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; if you want to include code that creates HTTP headers at runtime. Default is off: HTTP headers are then created statically by the makefsdata tool. Static headers mean smaller code size, but the (readonly) fsdata will grow a bit as every file includes the HTTP header.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_DYNAMIC_HEADERS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，以包含在运行时创建HTTP头部的代码。此参数默认为关闭：此时HTTP头部由makefsdata 工具静态创建。静态头部意味着代码更小，但由于每个文件都包含HTTP头部，（只读）fsdta会略有增加。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_DYNAMIC_HEADERS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_USE_MEM_POOL" Comment="HTTPD_USE_MEM_POOL" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_USE_MEM_POOL requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_USE_MEM_POOL 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to use a memp pool for allocating struct http_state instead of the heap.&lt;br&gt;If enabled, you'll need to define MEMP_NUM_PARALLEL_HTTPD_CONNS (and MEMP_NUM_PARALLEL_HTTPD_SSI_CONNS for SSI) to set the size of the pool(s)." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，可使用内存池（memp pool）来分配结构体http_state，而非使用堆内存。&lt;br&gt;启用此参数时，需要定义MEMP_NUM_PARALLEL_HTTPD_CONNS（对于SSI还需要定义MEMP_NUM_PARALLEL_HTTPD_SSI_CONNS）来设置内存池的大小。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_USE_MEM_POOL" Comment="HTTPD_USE_MEM_POOL" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to use a memp pool for allocating struct http_state instead of the heap.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_USE_MEM_POOL requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，可使用内存池（memp pool）来分配结构体http_state，而非使用堆内存。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_USE_MEM_POOL 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_SERVER_PORT" Comment="HTTPD_SERVER_PORT" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="80" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_SERVER_PORT requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_SERVER_PORT需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The server port for HTTPD to use. Default value is LWIP_IANA_PORT_HTTP set to 80 in iana.h file." 
        	  	             NoteCH="HTTPD使用的服务器端口。默认值LWIP_IANA_PORT_HTTP，在 iana.h文件中设置为80。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_SERVER_PORT" Comment="HTTPD_SERVER_PORT" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The server port for HTTPD to use.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_SERVER_PORT requires LWIP_HTTPD enabled." 
        	  	             NoteCH="HTTPD使用的服务器端口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_SERVER_PORT 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_SERVER_PORT_HTTPS" Comment="HTTPD_SERVER_PORT_HTTPS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="443" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_SERVER_PORT_HTTPS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_SERVER_PORT_HTTPS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The HTTPS server port for HTTPD to use. Default value is LWIP_IANA_PORT_HTTPS set to 80 in iana.h file." 
        	  	             NoteCH="HTTPD使用的HTTPS服务器端口。默认值LWIP_IANA_PORT_HTTPS，在iana.h文件中设置为80。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_SERVER_PORT_HTTPS" Comment="HTTPD_SERVER_PORT_HTTPS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The HTTPS server port for HTTPD to use.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_SERVER_PORT_HTTPS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="HTTPD使用的HTTPS服务器端口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_SERVER_PORT_HTTPS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_ENABLE_HTTPS" Comment="HTTPD_ENABLE_HTTPS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_ENABLE_HTTPS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_ENABLE_HTTPS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="Enable HTTPS support." 
        	  	             NoteCH="启用HTTPS支持。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_ENABLE_HTTPS" Comment="HTTPD_ENABLE_HTTPS" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Enable HTTPS support.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_ENABLE_HTTPS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="启用HTTPS支持。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_ENABLE_HTTPS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_MAX_RETRIES" Comment="HTTPD_MAX_RETRIES" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="4" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="HTTPD_MAX_RETRIES requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_MAX_RETRIES 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="Maximum retries before the connection is aborted/closed.&lt;br&gt;- number of times pcb-&gt;poll is called -&gt; default is 4*500ms = 2s;&lt;br&gt;- reset when pcb-&gt;sent is called." 
        	  	             NoteCH="连接中止 / 关闭前的最大重试次数。&lt;br&gt;- 调用pcb-&gt;poll的次数 -&gt; 默认值为 4*500ms = 2s；&lt;br&gt;- 调用pcb-&gt;sent时重置。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_MAX_RETRIES" Comment="HTTPD_MAX_RETRIES" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum retries before the connection is aborted/closed.&lt;br&gt;- number of times pcb-&gt;poll is called -&gt; default is 4*500ms = 2s;&lt;br&gt;- reset when pcb-&gt;sent is called.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_MAX_RETRIES requires LWIP_HTTPD enabled." 
        	  	             NoteCH="连接中止 / 关闭前的最大重试次数。&lt;br&gt;- 调用pcb-&gt;poll的次数 -&gt; 默认值为 4*500ms = 2s；&lt;br&gt;- 调用pcb-&gt;sent时重置。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_MAX_RETRIES 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_POLL_INTERVAL" Comment="HTTPD_POLL_INTERVAL" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="4" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="HTTPD_POLL_INTERVAL requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_POLL_INTERVAL 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="The poll delay is X*500ms." 
        	  	             NoteCH="轮询延迟时间为 X*500ms。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_POLL_INTERVAL" Comment="HTTPD_POLL_INTERVAL" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The poll delay is X*500ms.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_POLL_INTERVAL requires LWIP_HTTPD enabled." 
        	  	             NoteCH="轮询延迟时间为 X*500ms.&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_POLL_INTERVAL 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_TCP_PRIO" Comment="HTTPD_TCP_PRIO" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="1" Max="255" Reload="false" >
        <Condition Diagnostic="HTTPD_TCP_PRIO requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_TCP_PRIO 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="Priority for tcp pcbs created by HTTPD (very low by default). Minimum value is 1 (TCP_PRIO_MIN). Lower priorities get killed first when running out of memory." 
        	  	             NoteCH="HTTPD 创建的TCP PCB的优先级（默认优先级非常低）。最小值为1（TCP_PRIO_MIN）。当内存不足时，优先级较低的TCP PCB首先被丢弃。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_TCP_PRIO" Comment="HTTPD_TCP_PRIO" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Priority for tcp pcbs created by HTTPD (very low by default). Lower priorities get killed first when running out of memory.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_TCP_PRIO requires LWIP_HTTPD enabled." 
        	  	             NoteCH="HTTPD 创建的TCP PCB的优先级（默认优先级非常低）。当内存不足时，优先级较低的TCP PCB首先被丢弃。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_TCP_PRIO 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_TIMING" Comment="LWIP_HTTPD_TIMING" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_TIMING requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_TIMING 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable timing each file sent." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，开启每个文件发送计时。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_TIMING" Comment="LWIP_HTTPD_TIMING" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to enable timing each file sent.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_TIMING requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，开启每个文件发送计时。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_TIMING 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SUPPORT_EXTSTATUS" Comment="LWIP_HTTPD_SUPPORT_EXTSTATUS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SUPPORT_EXTSTATUS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SUPPORT_EXTSTATUS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to one to show error pages when parsing a request fails instead of simply closing the connection." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在解析请求失败时显示错误界面，而不是简单地关闭连接。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SUPPORT_EXTSTATUS" Comment="LWIP_HTTPD_SUPPORT_EXTSTATUS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to one to show error pages when parsing a request fails instead of simply closing the connection.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SUPPORT_EXTSTATUS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在解析请求失败时显示错误界面，而不是简单地关闭连接。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SUPPORT_EXTSTATUS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SUPPORT_V09" Comment="LWIP_HTTPD_SUPPORT_V09" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SUPPORT_V09 requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SUPPORT_V09 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Disabled&quot; to drop support for HTTP/0.9 clients (to save some bytes)." 
        	  	             NoteCH="将此参数设置为&quot;关闭&quot;，放弃支持HTTP/0.9客户端（以节省一些字节）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SUPPORT_V09" Comment="LWIP_HTTPD_SUPPORT_V09" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Disabled&quot; to drop support for HTTP/0.9 clients (to save some bytes).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SUPPORT_V09 requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;关闭&quot;，放弃支持HTTP/0.9客户端（以节省一些字节）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SUPPORT_V09 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SUPPORT_11_KEEPALIVE" Comment="LWIP_HTTPD_SUPPORT_11_KEEPALIVE" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SUPPORT_11_KEEPALIVE requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SUPPORT_11_KEEPALIVE 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable HTTP/1.1 persistent connections.&lt;br&gt;ATTENTION: If the generated file system includes HTTP headers, these must include the &quot;Connection: keep-alive&quot; header (pass argument &quot;-11&quot; to makefsdata)." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，启用HTTP/1.1持久连接。&lt;br&gt;注意事项：如果生成的文件系统包含HTTP头部，则这些HTTP头部信息必须包含&quot;Connection: keep-alive&quot; 头部（向makefsdata工具传递参数&quot;-11&quot; 来实现）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SUPPORT_11_KEEPALIVE" Comment="LWIP_HTTPD_SUPPORT_11_KEEPALIVE" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to enable HTTP/1.1 persistent connections.&lt;br&gt;ATTENTION: If the generated file system includes HTTP headers, these must include the &quot;Connection: keep-alive&quot; header (pass argument &quot;-11&quot; to makefsdata).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SUPPORT_11_KEEPALIVE requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，启用HTTP/1.1持久连接。&lt;br&gt;注意事项：如果生成的文件系统包含HTTP头部，则这些HTTP头部信息必须包含&quot;Connection: keep-alive&quot; 头部（向makefsdata工具传递参数&quot;-11&quot; 来实现）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SUPPORT_11_KEEPALIVE 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SUPPORT_REQUESTLIST" Comment="LWIP_HTTPD_SUPPORT_REQUESTLIST" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" >
        <Condition Diagnostic="LWIP_HTTPD_SUPPORT_REQUESTLIST requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SUPPORT_REQUESTLIST 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support HTTP request coming in in multiple packets/pbufs." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持HTTP请求以多个数据包/pbuf形式传入。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SUPPORT_REQUESTLIST" Comment="LWIP_HTTPD_SUPPORT_REQUESTLIST" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support HTTP request coming in in multiple packets/pbufs.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SUPPORT_REQUESTLIST requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持HTTP请求以多个数据包/pbuf形式传入。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SUPPORT_REQUESTLIST 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_REQ_QUEUELEN" Comment="LWIP_HTTPD_REQ_QUEUELEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="5" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" >
        <Condition Diagnostic="LWIP_HTTPD_REQ_QUEUELEN requires LWIP_HTTPD and LWIP_HTTPD_SUPPORT_REQUESTLIST enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_REQ_QUEUELEN 需要启用LWIP_HTTPD 和 LWIP_HTTPD_SUPPORT_REQUESTLIST。" 
        	              Expression="LWIP_HTTPD=1 &amp; LWIP_HTTPD_SUPPORT_REQUESTLIST=1"/>
        <Annotation Note="Number of rx pbufs to enqueue to parse an incoming request (up to the first newline)." 
        	  	             NoteCH="用于解析传入请求（直至遇到首个换行符）需要列队的接收pbuf的数量。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_REQ_QUEUELEN" Comment="LWIP_HTTPD_REQ_QUEUELEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false">
        <Annotation Note="Number of rx pbufs to enqueue to parse an incoming request (up to the first newline).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_REQ_QUEUELEN requires LWIP_HTTPD enabled." 
        	  	             NoteCH="用于解析传入请求（直至遇到首个换行符）需要列队的接收pbuf的数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_REQ_QUEUELEN 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_REQ_BUFSIZE" Comment="LWIP_HTTPD_REQ_BUFSIZE" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1023" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_REQ_BUFSIZE requires LWIP_HTTPD and LWIP_HTTPD_SUPPORT_REQUESTLIST enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_REQ_BUFSIZE 需要启用LWIP_HTTPD 和 LWIP_HTTPD_SUPPORT_REQUESTLIST。" 
        	              Expression="LWIP_HTTPD=1 &amp; LWIP_HTTPD_SUPPORT_REQUESTLIST=1"/>
        <Annotation Note="Number of (TCP payload-) bytes (in pbufs) to enqueue to parse and incoming request (up to the first double-newline)." 
        	  	             NoteCH="用于解析传入请求（直至遇到首个双换行符）需要排队的（TCP有效负载）字节数（以pbuf计算）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_REQ_BUFSIZE" Comment="LWIP_HTTPD_REQ_BUFSIZE" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Number of (TCP payload-) bytes (in pbufs) to enqueue to parse and incoming request (up to the first double-newline).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_REQ_BUFSIZE requires LWIP_HTTPD enabled." 
        	  	             NoteCH="用于解析传入请求（直至遇到首个双换行符）需要排队的（TCP有效负载）字节数（以pbuf计算）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_REQ_BUFSIZE 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_MAX_REQ_LENGTH" Comment="LWIP_HTTPD_MAX_REQ_LENGTH" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="=MIN(1023, LWIP_HTTPD_REQ_QUEUELEN * PBUF_POOL_BUFSIZE)" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_MAX_REQ_LENGTH requires LWIP_HTTPD and LWIP_HTTPD_SUPPORT_REQUESTLIST enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_MAX_REQ_LENGTH 需要启用LWIP_HTTPD and LWIP_HTTPD_SUPPORT_REQUESTLIST。" 
        	              Expression="LWIP_HTTPD=1 &amp; LWIP_HTTPD_SUPPORT_REQUESTLIST=1"/>
        <Annotation Note="Defines the maximum length of a HTTP request line (up to the first CRLF, copied from pbuf into this a global buffer when pbuf- or packet-queues are received - otherwise the input pbuf is used directly)." 
        	  	             NoteCH="定义HTTP请求行的最大长度（直至遇到首个CRLF；当接收到pbuf或数据包队列时，从pbuf复制到此全局缓冲区中，否则直接使用输入pbuf）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_MAX_REQ_LENGTH" Comment="LWIP_HTTPD_MAX_REQ_LENGTH" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Defines the maximum length of a HTTP request line (up to the first CRLF, copied from pbuf into this a global buffer when pbuf- or packet-queues are received - otherwise the input pbuf is used directly).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_MAX_REQ_LENGTH requires LWIP_HTTPD enabled." 
        	  	             NoteCH="定义HTTP请求行的最大长度（直至遇到首个CRLF；当接收到pbuf或数据包队列时，从pbuf复制到此全局缓冲区中，否则直接使用输入pbuf）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_MAX_REQ_LENGTH 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_MAX_REQUEST_URI_LEN" Comment="LWIP_HTTPD_MAX_REQUEST_URI_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="63" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_MAX_REQUEST_URI_LEN requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_MAX_REQUEST_URI_LEN 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="This is the size of a static buffer used when URIs end with '/'.&lt;br&gt;In this buffer, the directory requested is concatenated with all the configured default file names.&lt;br&gt;Set to 0 to disable checking default filenames on non-root directories." 
        	  	             NoteCH="URI以 '/'结尾时所使用的静态缓冲区的大小。&lt;br&gt;在此缓冲区中，请求的目录与所有已配置的默认文件名拼接在一起。lt;br&gt;当此参数设置为0时，禁用检查非根目录的默认文件名。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_MAX_REQUEST_URI_LEN" Comment="LWIP_HTTPD_MAX_REQUEST_URI_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="This is the size of a static buffer used when URIs end with '/'.&lt;br&gt;In this buffer, the directory requested is concatenated with all the configured default file names.&lt;br&gt;Set to 0 to disable checking default filenames on non-root directories.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_MAX_REQUEST_URI_LEN requires LWIP_HTTPD enabled." 
        	  	             NoteCH="URI以 '/'结尾时所使用的静态缓冲区的大小。&lt;br&gt;在此缓冲区中，请求的目录与所有已配置的默认文件名拼接在一起。&lt;br&gt;当此参数设置为0时，禁用检查非根目录的默认文件名。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_MAX_REQUEST_URI_LEN 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN" Comment="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="63" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <Annotation Note="Maximum length of the filename to send as response to a POST request, filled in by the application when a POST is finished." 
        	  	             NoteCH="作为POST请求响应发送的文件名的最大长度，POST请求完成后由应用程序填充。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN" Comment="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN" Type="Integer" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum length of the filename to send as response to a POST request, filled in by the application when a POST is finished.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN requires LWIP_HTTPD enabled." 
        	  	             NoteCH="作为POST请求响应发送的文件名的最大长度，POST请求完成后由应用程序填充。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_SSI_INCLUDE_TAG" Comment="LWIP_HTTPD_SSI_INCLUDE_TAG" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_SSI_INCLUDE_TAG requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_SSI_INCLUDE_TAG 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Disabled&quot; to not send the SSI tag (default is on, so the tag will be sent in the HTML page." 
        	  	             NoteCH="此参数设置为&quot;关闭&quot;时，不发送SSI标签（默认开启，在HTML页面中发送SSI标签）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_SSI_INCLUDE_TAG" Comment="LWIP_HTTPD_SSI_INCLUDE_TAG" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Disabled&quot; to not send the SSI tag (default is on, so the tag will be sent in the HTML page.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_SSI_INCLUDE_TAG requires LWIP_HTTPD enabled." 
        	  	             NoteCH="此参数设置为&quot;关闭&quot;时，不发送SSI标签（默认开启，在HTML页面中发送SSI标签）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_SSI_INCLUDE_TAG 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR" Comment="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to call tcp_abort when tcp_close fails with memory error.&lt;br&gt;This can be used to prevent consuming all memory in situations where the HTTP server has low priority compared to other communication." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在tcp_close因内存错误失败时调用tcp_abort。&lt;br&gt;在HTTP服务器优先级低于其他通信的情况下，这样设置可以避免消耗所有内存。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR" Comment="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to call tcp_abort when tcp_close fails with memory error.&lt;br&gt;This can be used to prevent consuming all memory in situations where the HTTP server has low priority compared to other communication.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在tcp_close因内存错误失败时调用tcp_abort。&lt;br&gt;在HTTP服务器优先级低于其他通信的情况下，这样设置可以避免消耗所有内存。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED" Comment="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to kill the oldest connection when running out of memory for 'struct http_state' or 'struct http_ssi_state'.&lt;br&gt;ATTENTION: This puts all connections on a linked list, so may be kind of slow." 
        	  	             NoteCH="当struct http_state 或 struct http_ssi_state出现内存不足的情况是时，将此参数设置为&quot;开启&quot;以终止最早的连接。&lt;br&gt;注意事项：此设置将所有连接置于一个链表中，所以处理速度会有点慢。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED" Comment="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to kill the oldest connection when running out of memory for 'struct http_state' or 'struct http_ssi_state'.&lt;br&gt;ATTENTION: This puts all connections on a linked list, so may be kind of slow.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED requires LWIP_HTTPD enabled." 
        	  	             NoteCH="当struct http_state 或 struct http_ssi_state出现内存不足的情况是时，将此参数设置为&quot;开启&quot;以终止最早的连接。&lt;br&gt;注意事项：此设置将所有连接置于一个链表中，所以处理速度会有点慢。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI" Comment="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to send URIs without extension without headers." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，发送不带扩展名且不带头部信息的URI。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI" Comment="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to send URIs without extension without headers.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，发送不带扩展名且不带头部信息的URI。&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_LIMIT_SENDING_TO_2MSS" Comment="HTTPD_LIMIT_SENDING_TO_2MSS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="HTTPD_LIMIT_SENDING_TO_2MSS requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_LIMIT_SENDING_TO_2MSS 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="By default, the httpd is limited to send 2*pcb-&gt;mss to keep resource usage low when http is not an important protocol in the device." 
        	  	             NoteCH="默认情况下，当http不是设备中的重要协议时，httpd 仅能发送2*pcb-&gt;mss以保持较低的资源使用率。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_LIMIT_SENDING_TO_2MSS" Comment="HTTPD_LIMIT_SENDING_TO_2MSS" Type="list" Group="HTTPD Options" GroupCH="HTTPD 选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="By default, the httpd is limited to send 2*pcb-&gt;mss to keep resource usage low when http is not an important protocol in the device.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_LIMIT_SENDING_TO_2MSS requires LWIP_HTTPD enabled." 
        	  	             NoteCH="默认情况下，当http不是设备中的重要协议时，httpd 仅能发送2*pcb-&gt;mss以保持较低的资源使用率。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_LIMIT_SENDING_TO_2MSS 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_CUSTOM_FILES" Comment="LWIP_HTTPD_CUSTOM_FILES" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_CUSTOM_FILES requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_CUSTOM_FILES 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; and provide the functions:&lt;br&gt;- &quot;int fs_open_custom(struct fs_file *file, const char *name)&quot; Called first for every opened file to allow opening files that are not included in fsdata(_custom).c&lt;br&gt;- &quot;void fs_close_custom(struct fs_file *file)&quot; Called to free resources allocated by fs_open_custom()." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持以下功能：&lt;br&gt;- &quot;int fs_open_custom(struct fs_file *file, const char *name)&quot; 对于每个打开的文件，首先调用此函数，打开未包含在 fsdata(_custom).c 中的文件。&lt;br&gt;- &quot;void fs_close_custom(struct fs_file *file)&quot; 调用此函数，释放 fs_open_custom() 分配的资源。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_CUSTOM_FILES" Comment="LWIP_HTTPD_CUSTOM_FILES" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; and provide the functions:&lt;br&gt;- &quot;int fs_open_custom(struct fs_file *file, const char *name)&quot; Called first for every opened file to allow opening files that are not included in fsdata(_custom).c&lt;br&gt;- &quot;void fs_close_custom(struct fs_file *file)&quot; Called to free resources allocated by fs_open_custom().&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_CUSTOM_FILES requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持以下功能：&lt;br&gt;- &quot;int fs_open_custom(struct fs_file *file, const char *name)&quot;对于每个打开的文件，首先调用此函数，打开未包含在 fsdata(_custom).c 中的文件。&lt;br&gt;- &quot;void fs_close_custom(struct fs_file *file)&quot; 调用此函数，释放 fs_open_custom() 分配的资源。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_CUSTOM_FILES 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_DYNAMIC_FILE_READ" Comment="LWIP_HTTPD_DYNAMIC_FILE_READ" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_DYNAMIC_FILE_READ requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_DYNAMIC_FILE_READ 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to support fs_read() to dynamically read file data. Without this (default=off), only one-block files are supported, and the contents must be ready after fs_open()." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持fs_read()动态读取文件数据。如果不使用此选项（默认关闭），仅支持单块大小的文件，并且文件内容必须在fs_open()函数执行后准备就绪。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_DYNAMIC_FILE_READ" Comment="LWIP_HTTPD_DYNAMIC_FILE_READ" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to support fs_read() to dynamically read file data. Without this (default=off), only one-block files are supported, and the contents must be ready after fs_open().&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_DYNAMIC_FILE_READ requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持fs_read()动态读取文件数据。如果不使用此选项（默认关闭），仅支持单块大小的文件，并且文件内容必须在fs_open()函数执行后准备就绪。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_DYNAMIC_FILE_READ 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_FILE_STATE" Comment="LWIP_HTTPD_FILE_STATE" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_FILE_STATE requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_FILE_STATE 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to include an application state argument per file that is opened. This allows to keep a state per connection/file." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在打开的每个文件中包含一个应用程序状态参数。这样就能为每个连接/文件保留一个状态。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_FILE_STATE" Comment="LWIP_HTTPD_FILE_STATE" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to include an application state argument per file that is opened. This allows to keep a state per connection/file.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_FILE_STATE requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在打开的每个文件中包含一个应用程序状态参数。这样就能为每个连接/文件保留一个状态。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_FILE_STATE 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_PRECALCULATED_CHECKSUM" Comment="HTTPD_PRECALCULATED_CHECKSUM" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_PRECALCULATED_CHECKSUM requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_PRECALCULATED_CHECKSUM 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="HTTPD_PRECALCULATED_CHECKSUM==Enabled: include precompiled checksums for predefined (MSS-sized) chunks of the files to prevent having to calculate the checksums at runtime." 
        	  	             NoteCH="HTTPD_PRECALCULATED_CHECKSUM==开启：文件的预定义块（MSS大小）包含预编译校验和，避免在运行时计算校验和。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_PRECALCULATED_CHECKSUM" Comment="HTTPD_PRECALCULATED_CHECKSUM" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="HTTPD_PRECALCULATED_CHECKSUM==Enabled: include precompiled checksums for predefined (MSS-sized) chunks of the files to prevent having to calculate the checksums at runtime.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_PRECALCULATED_CHECKSUM requires LWIP_HTTPD enabled." 
        	  	             NoteCH="HTTPD_PRECALCULATED_CHECKSUM==开启：文件的预定义块（MSS大小）包含预编译校验和，避免在运行时计算校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_PRECALCULATED_CHECKSUM 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_HTTPD_FS_ASYNC_READ" Comment="LWIP_HTTPD_FS_ASYNC_READ" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="0" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_HTTPD_FS_ASYNC_READ requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用LWIP_HTTPD_FS_ASYNC_READ 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_HTTPD_FS_ASYNC_READ==Enabled: support asynchronous read operations(fs_read_async returns FS_READ_DELAYED and calls a callback when finished)." 
        	  	             NoteCH="LWIP_HTTPD_FS_ASYNC_READ==开启：支持异步读取操作（fs_read_async返回FS_READ_DELAYED并在完成时调用一个回调函数）。"/>
    </RefParameter>
    <RefParameter Name="LWIP_HTTPD_FS_ASYNC_READ" Comment="LWIP_HTTPD_FS_ASYNC_READ" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="LWIP_HTTPD_FS_ASYNC_READ==Enabled: support asynchronous read operations(fs_read_async returns FS_READ_DELAYED and calls a callback when finished).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_HTTPD_FS_ASYNC_READ requires LWIP_HTTPD enabled." 
        	  	             NoteCH="LWIP_HTTPD_FS_ASYNC_READ==开启：支持异步读取操作（fs_read_async返回FS_READ_DELAYED并在完成时调用一个回调函数）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_HTTPD_FS_ASYNC_READ 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_USE_CUSTOM_FSDATA" Comment="HTTPD_USE_CUSTOM_FSDATA" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="1" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="HTTPD_USE_CUSTOM_FSDATA requires LWIP_HTTPD enabled." 
        	              DiagnosticCH="启用HTTPD_USE_CUSTOM_FSDATA 需要启用LWIP_HTTPD。" 
        	              Expression="LWIP_HTTPD=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="&lt;b&gt;Warnings:&lt;/b&gt;&lt;br&gt;- HTTPD_USE_CUSTOM_FSDATA enabled requires once code has been generated to have in your project folder within Middlewares\Third_Party\LwIP\src\apps\http folder &quot;fsdata_custom.c&quot; instead of &quot;fsdata.c&quot;.&lt;br&gt;- Adding &quot;fsdata_custom.c&quot; can be done by renaming existing &quot;fsdata.c&quot; file in &quot;fsdata_custom.c&quot;.&lt;br&gt;- If &quot;fsdata.c&quot; has not been copied in your project, it can be taken from the Firmware Repository (Menu Help &gt; Updater Settings...) Software Package folder within Middlewares\Third_Party\LwIP\src\apps\http folder.&lt;br&gt;- Depending on project settings and IDE used, &quot;fsdata_custom.c&quot; or &quot;fsdata.c&quot; can be removed after each code generation. Please take care of this!&lt;br&gt;&lt;b&gt;Limitations&lt;/b&gt;:&lt;br&gt; It is not supported by AT32 Work Bench to disable HTTPD_USE_CUSTOM_FSDATA." 
        	  	             NoteCH="&lt;b&gt;注意事项：&lt;/b&gt;&lt;br&gt;- 启用HTTPD_USE_CUSTOM_FSDATA需要在生成代码后将其保存在项目文件夹中（Middlewares\Third_Party\LwIP\src\apps\http folder &quot;fsdata_custom.c&quot;，而不是&quot;fsdata.c&quot;）。&lt;br&gt;- 可以通过重命名现有&quot;fsdata.c&quot; 文件（&quot;fsdata_custom.c&quot;）添加&quot;fsdata_custom.c&quot;。&lt;br&gt;- 如果&quot;fsdata.c&quot; 尚未复制到项目中，可以从固件库（菜单帮助 &gt; 更新设置...）软件包文件夹（Middlewares\Third_Party\LwIP\src\apps\http folder）中获取。&lt;br&gt;- 根据项目设置和使用的IDE，可以在每次代码生成后删除&quot;fsdata_custom.c&quot; 或 &quot;fsdata.c&quot;。注意！&lt;br&gt;&lt;b&gt;限制条件：&lt;/b&gt;&lt;br&gt; AT32 Work Bench不支持禁用HTTPD_USE_CUSTOM_FSDATA。"/>
    </RefParameter>
    <RefParameter Name="HTTPD_USE_CUSTOM_FSDATA" Comment="HTTPD_USE_CUSTOM_FSDATA" Type="list" Group="HTTPD - File System Options" GroupCH="HTTPD - 文件系统选项" DefaultValue="null" TabName="HTTPD" TabNameCH="HTTPD" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to include &quot;fsdata_custom.c&quot; instead of &quot;fsdata.c&quot; for the file system (to prevent changing the file included in CVS).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: HTTPD_USE_CUSTOM_FSDATA requires LWIP_HTTPD enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在文件系统中包含一个&quot;fsdata_custom.c&quot;而非&quot;fsdata.c&quot;，以避免改动CVS中包含的文件。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用HTTPD_USE_CUSTOM_FSDATA 需要启用LWIP_HTTPD。"/>
    </RefParameter>
    
    <!-- *************************** SNMP Options ******************************-->
    <RefParameter Name="LWIP_SNMP" Comment="LWIP_SNMP" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Basic" >
        <Condition Diagnostic="SNMP stack needs a receive API {raw, netconn} and UDP.&lt;br&gt;" 
        	              DiagnosticCH="SNMP协议栈需要一个接收API  {raw, netconn} 和 UDP。&lt;br&gt;"
        	              Expression="LWIP_UDP=1 &amp; SNMP_USE_NETCONN=1 | SNMP_USE_RAW=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="&lt;b&gt;Warning: up to user to take care!&lt;/b&gt;: Enable SNMP requires user specific code not yet generated by AT32 Work Bench. This is reserved for advanced users.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All Most SNMP options are visible as &quot;Advanced Parameters&quot; and only when LWIP_SNMP is enabled.&lt;br&gt;This parameter enables the lwIP SNMP agent. UDP must be available for SNMP transport.&lt;br&gt;If you want to use your own SNMP agent, leave this disabled.&lt;br&gt;To integrate MIB2 of an external agent, you need to enable LWIP_MIB2_CALLBACKS and MIB2_STATS. This will give you the callbacks and statistics counters you need to get MIB2 working.&lt;br&gt;&lt;br&gt;Features:&lt;br&gt;- SNMPv2c support.&lt;br&gt;- Low RAM usage - no memory pools, stack only.&lt;br&gt;- MIB2 implementation is separated from SNMP stack.&lt;br&gt;- Support for multiple MIBs (snmp_set_mibs() call) - e.g. for private MIB.&lt;br&gt;- Simple and generic API for MIB implementation.&lt;br&gt;- Comfortable node types and helper functions for scalar arrays and tables.&lt;br&gt;- Counter64, bit and truthvalue datatype support.&lt;br&gt;- Callbacks for SNMP writes e.g. to implement persistency.&lt;br&gt;- Runs on two APIs: RAW and netconn.&lt;br&gt;- Async API is gone - the stack now supports netconn API instead, so blocking operations can be done in MIB calls. SNMP runs in a worker thread when netconn API is used.&lt;br&gt;- Simplified thread sync support for MIBs - useful when MIBs need to access variables shared with other threads where no locking is possible. Used in MIB2 to access lwIP stats from lwIP thread.&lt;br&gt;&lt;br&gt;MIB compiler (code generator):&lt;br&gt;- Written in C#. MIB viewer used Windows Forms.&lt;br&gt;- Developed on Windows with Visual Studio 2010.&lt;br&gt;- Can be compiled and used under Linux with http://www.monodevelop.com/.&lt;br&gt;- Based on a heavily modified version of of SharpSnmpLib (a4bd05c6afb4) (https://sharpsnmplib.codeplex.com/SourceControl/network/forks/Nemo157/MIBParserUpdate).&lt;br&gt;- MIB parser, C file generation framework and LWIP code generation are cleanly separated, which means the code may be useful as a base for code generation of other SNMP agents.&lt;br&gt;&lt;br&gt;Notes:&lt;br&gt;- Stack and MIB compiler were used to implement a Profinet device. Compiled/implemented MIBs: LLDP-MIB, LLDP-EXT-DOT3-MIB, LLDP-EXT-PNO-MIB." 
        	  	             NoteCH="&lt;b&gt;注意！用户需要注意以下事项：&lt;/b&gt;启用SNMP需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;几乎所有SNMP选项都显示为&quot;高级参数&quot;，且只有在启用了 LWIP_SNMP 时才会显示。&lt;br&gt;此参数启用了lwIP SNMP代理。SNMP传输必须使用UDP协议。&lt;br&gt;如果要使用自定义SNMP代理，则禁用此项。&lt;br&gt;若要集成外部代理MIB2，需要启用LWIP_MIB2_CALLBACKS 和 MIB2_STATS，提供MIB2工作所需的对调和统计计数器。&lt;br&gt;&lt;br&gt;功能：&lt;br&gt;- 支持SNMPv2c。&lt;br&gt;- RAM使用率低 - 没有内存池，只有堆栈。&lt;br&gt;- MIB2的实现与SNMP协议栈是相互独立的。&lt;br&gt;- 支持多个MIB（snmp_set_mibs() call） - 例如私有MIB。&lt;br&gt;- 用于实现MIB的简单通用的API。&lt;br&gt;- 对于标量数组和表格，有方便使用的节点类型和辅助函数。&lt;br&gt;- 支持Counter64、位（bit）和真值（truthvalue）数据类型。&lt;br&gt;- SNMP写入操作的回调函数，例如实现数据持久性。&lt;br&gt;- 在两个API上运行：RAW 和 netconn。&lt;br&gt;- 不再使用异步API - 协议栈目前支持 netconn API，因此可以在MIB调用中执行阻塞操作。当使用netconn API时，SNMP在工作线程中运行。 &lt;br&gt;- 为MIB提供简化的线程同步支持 - 当MIB需要访问与其他线程共享的变量且无法进行阻塞操作时，可以使用此功能。在MIB2用于访问lwIP线程中的性能统计数据。&lt;br&gt;&lt;br&gt;MIB编译器（代码生成器）：&lt;br&gt;- 用 C# 编写。MIB浏览器使用Windows Forms。&lt;br&gt;- 使用Visual Studio 2010在 Windows 上开发。&lt;br&gt;- 可以在Linux 环境下编译和使用（http://www.monodevelop.com/）。&lt;br&gt;- 基于大幅修改的SharpSnmpLib (a4bd05c6afb4) (https://sharpsnmplib.codeplex.com/SourceControl/network/forks/Nemo157/MIBParserUpdate)。&lt;br&gt;- MIB解析器、C文件生成框架和 LWIP代码生成各自独立，意味着代码可以作为其他SNMP代理执行代码生成的基础。&lt;br&gt;&lt;br&gt;注意事项：&lt;br&gt;- 堆栈和MIB编译器用于实现Profinet设备。编译/实现的MIB：LLDP-MIB、LLDP-EXT-DOT3-MIB、LLDP-EXT-PNO-MIB。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SNMP" Comment="LWIP_SNMP" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="&lt;b&gt;Dependency&lt;/b&gt;: SNMP stack needs a receive API and UDP {raw, netconn}.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;Most other SNMP options are visible as &quot;Advanced Parameters&quot; and only when LWIP_SNMP is enabled.&lt;br&gt;&lt;br&gt;This parameter enables the lwIP SNMP agent. UDP must be available for SNMP transport.&lt;br&gt;If you want to use your own SNMP agent, leave this disabled.&lt;br&gt;To integrate MIB2 of an external agent, you need to enable LWIP_MIB2_CALLBACKS and MIB2_STATS. This will give you the callbacks and statistics counters you need to get MIB2 working.&lt;br&gt;&lt;br&gt;Features:&lt;br&gt;- SNMPv2c support.&lt;br&gt;- Low RAM usage - no memory pools, stack only.&lt;br&gt;- MIB2 implementation is separated from SNMP stack.&lt;br&gt;- Support for multiple MIBs (snmp_set_mibs() call) - e.g. for private MIB.&lt;br&gt;- Simple and generic API for MIB implementation.&lt;br&gt;- Comfortable node types and helper functions for scalar arrays and tables.&lt;br&gt;- Counter64, bit and truthvalue datatype support.&lt;br&gt;- Callbacks for SNMP writes e.g. to implement persistency.&lt;br&gt;- Runs on two APIs: RAW and netconn.&lt;br&gt;- Async API is gone - the stack now supports netconn API instead, so blocking operations can be done in MIB calls. SNMP runs in a worker thread when netconn API is used.&lt;br&gt;- Simplified thread sync support for MIBs - useful when MIBs need to access variables shared with other threads where no locking is possible. Used in MIB2 to access lwIP stats from lwIP thread.&lt;br&gt;&lt;br&gt;MIB compiler (code generator):&lt;br&gt;- Written in C#. MIB viewer used Windows Forms.&lt;br&gt;- Developed on Windows with Visual Studio 2010.&lt;br&gt;- Can be compiled and used under Linux with http://www.monodevelop.com/.&lt;br&gt;- Based on a heavily modified version of of SharpSnmpLib (a4bd05c6afb4) (https://sharpsnmplib.codeplex.com/SourceControl/network/forks/Nemo157/MIBParserUpdate).&lt;br&gt;- MIB parser, C file generation framework and LWIP code generation are cleanly separated, which means the code may be useful as a base for code generation of other SNMP agents.&lt;br&gt;&lt;br&gt;Notes:&lt;br&gt;- Stack and MIB compiler were used to implement a Profinet device. Compiled/implemented MIBs: LLDP-MIB, LLDP-EXT-DOT3-MIB, LLDP-EXT-PNO-MIB." 
        	  	             NoteCH="&lt;b&gt;依赖条件：&lt;/b&gt;SNMP协议栈需要一个接收API和UDP {raw, netconn}。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;多数其他SNMP选项都显示为&quot;高级参数&quot;，且只有在启用了LWIP_SNMP时才会显示。&lt;br&gt;&lt;br&gt;此参数启用了lwIP SNMP代理。SNMP传输必须使用UDP协议。&lt;br&gt;如果要使用自定义SNMP代理，则禁用此项。&lt;br&gt;若要集成外部代理MIB2，需要启用LWIP_MIB2_CALLBACKS 和 MIB2_STATS，提供MIB2工作所需的对调和统计计数器。&lt;br&gt;&lt;br&gt;功能：&lt;br&gt;- 支持SNMPv2c。&lt;br&gt;- RAM使用率低 - 没有内存池，只有堆栈。&lt;br&gt;- MIB2的实现与SNMP协议栈是相互独立的。&lt;br&gt;- 支持多个MIB（snmp_set_mibs() call） - 例如私有MIB。&lt;br&gt;- 用于实现MIB的简单通用的API。&lt;br&gt;- 对于标量数组和表格，有方便使用的节点类型和辅助函数。&lt;br&gt;- 支持Counter64、位（bit）和真值（truthvalue）数据类型。&lt;br&gt;- SNMP写入操作的回调函数，例如实现数据持久性。&lt;br&gt;- 在两个API上运行：RAW 和 netconn。&lt;br&gt;- 不再使用异步API - 协议栈目前支持 netconn API，因此可以在MIB调用中执行阻塞操作。当使用netconn API时，SNMP在工作线程中运行。&lt;br&gt;- 为MIB提供简化的线程同步支持 - 当MIB需要访问与其他线程共享的变量且无法进行阻塞操作时，可以使用此功能。在MIB2用于访问lwIP线程中的性能统计数据。&lt;br&gt;&lt;br&gt;MIB编译器（代码生成器）：&lt;br&gt;- 用 C# 编写。MIB浏览器使用Windows Forms。&lt;br&gt;- 使用Visual Studio 2010在 Windows 上开发。&lt;br&gt;- 可以在Linux环境下编译和使用（http://www.monodevelop.com/）。&lt;br&gt;- 基于大幅修改的SharpSnmpLib (a4bd05c6afb4) (https://sharpsnmplib.codeplex.com/SourceControl/network/forks/Nemo157/MIBParserUpdate)。&lt;br&gt;- MIB解析器、C文件生成框架和 LWIP代码生成各自独立，意味着代码可以作为其他SNMP代理执行代码生成的基础。&lt;br&gt;&lt;br&gt;注意事项：&lt;br&gt;- 堆栈和MIB编译器用于实现Profinet设备。编译/实现的LLDP-MIB、LLDP-EXT-DOT3-MIB、LLDP-EXT-PNO-MIB。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_USE_NETCONN" Comment="SNMP_USE_NETCONN" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" >
        <Condition Diagnostic="SNMP stack can use only one of the APIs {raw, netconn}. SNMP_USE_NETCONN requires LWIP_SNMP enabled." 
        	              DiagnosticCH="SNMP协议栈只能使用两个API {raw, netconn}中的任意一个。启用SNMP_USE_NETCONN 需要启用LWIP_SNMP。" 
        	              Expression="!S_SNMP_USE_NETCONN"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Use netconn API instead of raw API.&lt;br&gt;Makes SNMP agent run in a worker thread, so blocking operations can be done in MIB calls." 
        	  	             NoteCH="使用netconn API而非 raw API。&lt;br&gt;让SNMP在工作线程中运行，因此可以在MIB调用中执行阻塞操作。"/>
    </RefParameter>
    <RefParameter Name="SNMP_USE_NETCONN" Comment="SNMP_USE_NETCONN" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Use netconn API instead of raw API.&lt;br&gt;Makes SNMP agent run in a worker thread, so blocking operations can be done in MIB calls.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP stack can use only one of the APIs {raw, netconn}." 
        	  	             NoteCH="使用netconn API而非 raw API。&lt;br&gt;让SNMP在工作线程中运行，因此可以在MIB调用中执行阻塞操作。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; SNMP协议栈只能使用两个API {raw, netconn}中的任意一个。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_USE_RAW" Comment="SNMP_USE_RAW" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="1" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Semaphore="S_SNMP_USE_NETCONN"/>
        <Annotation Note="Use raw API.&lt;br&gt;SNMP agent does not run in a worker thread, so blocking operations should not be done in MIB calls." 
        	  	             NoteCH="使用raw API。&lt;br&gt;SNMP代理不在工作线程中运行，因此不能在MIB调用中执行阻塞操作。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_STACK_SIZE" Comment="SNMP_STACK_SIZE" Type="Integer" Unit="Word(s)" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="=DEFAULT_THREAD_STACKSIZE" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="=FREERTOS$context:configMINIMAL_STACK_SIZE" Max="=FREERTOS$context:TOTAL_HEAP_SIZE/4" >
        <Condition Diagnostic="SNMP_STACK_SIZE requires LWIP_SNMP and SNMP_USE_NETCONN enabled." 
        	              DiagnosticCH="启用SNMP_STACK_SIZE 需要启用LWIP_SNMP 和 SNMP_USE_NETCONN。" 
        	              Expression="NO_SYS=0 &amp; LWIP_SNMP=1 &amp; SNMP_USE_NETCONN=1"/>
        <Annotation Note="Stack size of SNMP netconn worker thread." 
        	  	             NoteCH="SNMP netconn 工作线程的堆栈大小。"/>
    </RefParameter>
    <RefParameter Name="SNMP_STACK_SIZE" Comment="SNMP_STACK_SIZE" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Stack size of SNMP netconn worker thread.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_STACK_SIZE requires LWIP_SNMP and SNMP_USE_NETCONN enabled." 
        	  	             NoteCH="SNMP netconn 工作线程的堆栈大小。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_STACK_SIZE 需要启用LWIP_SNMP 和 SNMP_USE_NETCONN。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_THREAD_PRIO" Comment="SNMP_THREAD_PRIO" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="=DEFAULT_THREAD_PRIO" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="=FREERTOS$context:configMAX_PRIORITIES-1" >
        <Condition Diagnostic="SNMP_THREAD_PRIO requires LWIP_SNMP and SNMP_USE_NETCONN enabled." 
        	              DiagnosticCH="启用SNMP_THREAD_PRIO 需要启用LWIP_SNMP 和 SNMP_USE_NETCONN。" 
        	              Expression="NO_SYS=0 &amp; LWIP_SNMP=1 &amp; SNMP_USE_NETCONN=1"/>
        <Annotation Note="SNMP netconn worker thread priority." 
        	  	             NoteCH="SNMP netconn工作线程优先级。"/>
    </RefParameter>
    <RefParameter Name="SNMP_THREAD_PRIO" Comment="SNMP_THREAD_PRIO" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="SNMP netconn worker thread priority.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_THREAD_PRIO requires LWIP_SNMP and SNMP_USE_NETCONN enabled." 
        	  	             NoteCH="SNMP netconn工作线程优先级。&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_THREAD_PRIO 需要启用LWIP_SNMP 和 SNMP_USE_NETCONN。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_TRAP_DESTINATIONS" Comment="SNMP_TRAP_DESTINATIONS" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="1" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="1" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SNMP_TRAP_DESTINATIONS requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_TRAP_DESTINATIONS 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Number of trap destinations. At least one trap destination is required." 
        	  	             NoteCH="陷阱目标的数量。至少需要一个陷阱目标。"/>
    </RefParameter>
    <RefParameter Name="SNMP_TRAP_DESTINATIONS" Comment="SNMP_TRAP_DESTINATIONS" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Number of trap destinations. At least one trap destination is required.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_TRAP_DESTINATIONS requires LWIP_SNMP enabled." 
        	  	             NoteCH="陷阱目标的数量。至少需要一个陷阱目标。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_TRAP_DESTINATIONS 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_SAFE_REQUESTS" Comment="SNMP_SAFE_REQUESTS" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="1" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNMP_SAFE_REQUESTS requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_SAFE_REQUESTS 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Only allow SNMP write actions that are 'safe' (e.g. disabling netifs is not a safe action and disabled when SNMP_SAFE_REQUESTS = 1). Unsafe requests are disabled by default!." 
        	  	             NoteCH="仅允许“安全”的SNMP写操作（例如：禁用netif不是安全的操作，SNMP_SAFE_REQUESTS = 1时禁用）。默认禁用不安全的请求。"/>
    </RefParameter>
    <RefParameter Name="SNMP_SAFE_REQUESTS" Comment="SNMP_SAFE_REQUESTS" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Only allow SNMP write actions that are 'safe' (e.g. disabling netifs is not a safe action and disabled when SNMP_SAFE_REQUESTS = 1). Unsafe requests are disabled by default!.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_SAFE_REQUESTS requires LWIP_SNMP enabled." 
        	  	             NoteCH="仅允许“安全”的SNMP写操作（例如：禁用netif不是安全的操作，SNMP_SAFE_REQUESTS = 1时禁用）。默认禁用不安全的请求。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_SAFE_REQUESTS 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MAX_OCTET_STRING_LEN" Comment="SNMP_MAX_OCTET_STRING_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="127" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNMP_MAX_OCTET_STRING_LEN requires LWIP_SNMP enabled."  
        	              DiagnosticCH="启用SNMP_MAX_OCTET_STRING_LEN 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The maximum length of strings used." 
        	  	             NoteCH="所用字符串的最大长度。"/>
    </RefParameter>
    <RefParameter Name="SNMP_MAX_OCTET_STRING_LEN" Comment="SNMP_MAX_OCTET_STRING_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum length of strings used.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_MAX_OCTET_STRING_LEN requires LWIP_SNMP enabled." 
        	  	             NoteCH="所用字符串的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_MAX_OCTET_STRING_LEN 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MAX_OBJ_ID_LEN" Comment="SNMP_MAX_OBJ_ID_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="50" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNMP_MAX_OBJ_ID_LEN requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_MAX_OBJ_ID_LEN 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The maximum number of Sub ID's inside an object identifier. Indirectly this also limits the maximum depth of SNMP tree." 
        	  	             NoteCH="对象标识符中Sub ID的最大数量。此项间接限制SNMP tree的最大深度。"/>
    </RefParameter>
    <RefParameter Name="SNMP_MAX_OBJ_ID_LEN" Comment="SNMP_MAX_OBJ_ID_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum number of Sub ID's inside an object identifier. Indirectly this also limits the maximum depth of SNMP tree.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_MAX_OBJ_ID_LEN requires LWIP_SNMP enabled." 
        	  	             NoteCH="对象标识符中Sub ID的最大数量。此项间接限制SNMP tree的最大深度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_MAX_OBJ_ID_LEN 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MIN_VALUE_SIZE" Comment="SNMP_MIN_VALUE_SIZE" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="8" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNMP_MIN_VALUE_SIZE requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_MIN_VALUE_SIZE 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Size required to store the basic types (8 bytes for counter64).&lt;br&gt;Default value is: 2 * sizeof(u32_t*)." 
        	  	             NoteCH="存储基本数据类型所需的大小（counter64需要8字节）。&lt;br&gt;默认值：2 * sizeof(u32_t*)。"/>
    </RefParameter>
    <RefParameter Name="SNMP_MIN_VALUE_SIZE" Comment="SNMP_MIN_VALUE_SIZE" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Size required to store the basic types (8 bytes for counter64).&lt;br&gt;Default value is: 2 * sizeof(u32_t*).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_MIN_VALUE_SIZE requires LWIP_SNMP enabled." 
        	  	             NoteCH="存储基本数据类型所需的大小（counter64需要8字节）。&lt;br&gt;默认值：2 * sizeof(u32_t*)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_MIN_VALUE_SIZE 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MAX_VALUE_SIZE" Comment="SNMP_MAX_VALUE_SIZE" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="200" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNMP_MAX_VALUE_SIZE requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_MAX_VALUE_SIZE 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The default value for SNMP_MAX_VALUE_SIZE is: LWIP_MAX(LWIP_MAX((SNMP_MAX_OCTET_STRING_LEN), sizeof(u32_t)*(SNMP_MAX_OBJ_ID_LEN)), SNMP_MIN_VALUE_SIZE)." 
        	  	             NoteCH="SNMP_MAX_VALUE_SIZE的默认值为：LWIP_MAX(LWIP_MAX((SNMP_MAX_OCTET_STRING_LEN), sizeof(u32_t)*(SNMP_MAX_OBJ_ID_LEN)), SNMP_MIN_VALUE_SIZE)。"/>
    </RefParameter>
    <RefParameter Name="SNMP_MAX_VALUE_SIZE" Comment="SNMP_MAX_VALUE_SIZE" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The default value for SNMP_MAX_VALUE_SIZE is: LWIP_MAX(LWIP_MAX((SNMP_MAX_OCTET_STRING_LEN), sizeof(u32_t)*(SNMP_MAX_OBJ_ID_LEN)), SNMP_MIN_VALUE_SIZE).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_MAX_VALUE_SIZE requires LWIP_SNMP enabled." 
        	  	             NoteCH="SNMP_MAX_VALUE_SIZE的默认值为：LWIP_MAX(LWIP_MAX((SNMP_MAX_OCTET_STRING_LEN), sizeof(u32_t)*(SNMP_MAX_OBJ_ID_LEN)), SNMP_MIN_VALUE_SIZE)。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_MAX_VALUE_SIZE 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_COMMUNITY" Comment="SNMP_COMMUNITY" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;public&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SNMP_COMMUNITY requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_COMMUNITY 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The snmp read-access community. Used for write-access and traps, too unless SNMP_COMMUNITY_WRITE or SNMP_COMMUNITY_TRAP are enabled, respectively." 
        	  	             NoteCH="SNMP读访问团体。也用于写访问和陷阱，除非分别启用了SNMP_COMMUNITY_WRITE或SNMP_COMMUNITY_TRAP。"/>
    </RefParameter>
    <RefParameter Name="SNMP_COMMUNITY" Comment="SNMP_COMMUNITY" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The snmp read-access community. Used for write-access and traps, too unless SNMP_COMMUNITY_WRITE or SNMP_COMMUNITY_TRAP are enabled, respectively.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_COMMUNITY requires LWIP_SNMP enabled." 
        	  	             NoteCH="SNMP读访问团体。也用于写访问和陷阱，除非分别启用了SNMP_COMMUNITY_WRITE或SNMP_COMMUNITY_TRAP。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_COMMUNITY 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_COMMUNITY_WRITE" Comment="SNMP_COMMUNITY_WRITE" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;private&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNMP_COMMUNITY_WRITE requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_COMMUNITY_WRITE 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The snmp write-access community. Set this community to &quot;&quot; in order to disallow any write access." 
        	  	             NoteCH="SNMP写访问团体。将此团体设置为&quot;&quot;，以便禁止任何写访问操作。"/>
    </RefParameter>
    <RefParameter Name="SNMP_COMMUNITY_WRITE" Comment="SNMP_COMMUNITY_WRITE" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The snmp write-access community. Set this community to &quot;&quot; in order to disallow any write access.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_COMMUNITY_WRITE requires LWIP_SNMP enabled." 
        	  	             NoteCH="SNMP写访问团体。将此团体设置为&quot;&quot;，以便禁止任何写访问操作。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_COMMUNITY_WRITE 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_COMMUNITY_TRAP" Comment="SNMP_COMMUNITY_TRAP" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;public&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false">
        <Condition Diagnostic="SNMP_COMMUNITY_TRAP requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_COMMUNITY_TRAP 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The snmp community used for sending traps." 
        	  	             NoteCH="用于发送陷阱的SNMP团体。"/>
    </RefParameter>
    <RefParameter Name="SNMP_COMMUNITY_TRAP" Comment="SNMP_COMMUNITY_TRAP" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The snmp community used for sending traps.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_COMMUNITY_TRAP requires LWIP_SNMP enabled." 
        	  	             NoteCH="用于发送陷阱的SNMP团体。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_COMMUNITY_TRAP 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MAX_COMMUNITY_STR_LEN" Comment="SNMP_MAX_COMMUNITY_STR_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="7" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNMP_MAX_COMMUNITY_STR_LEN requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_MAX_COMMUNITY_STR_LEN 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="The maximum length of community string.&lt;br&gt;If community names shall be adjusted at runtime via snmp_set_community() calls, enter here the possible maximum length (+1 for terminating null character).Default value of SNMP_MAX_COMMUNITY_STR_LEN is: LWIP_MAX(LWIP_MAX(sizeof(SNMP_COMMUNITY), sizeof(SNMP_COMMUNITY_WRITE)), sizeof(SNMP_COMMUNITY_TRAP))." 
        	  	             NoteCH="SNMP团体字符串的最大长度。&lt;br&gt;如果需要在运行时通过调用snmp_set_community()调整团体名，请在此处输入可能的最大长度（+1 代表 null 终止字符）。SNMP_MAX_COMMUNITY_STR_LEN的默认值为：LWIP_MAX(LWIP_MAX(sizeof(SNMP_COMMUNITY), sizeof(SNMP_COMMUNITY_WRITE)), sizeof(SNMP_COMMUNITY_TRAP))。"/>
    </RefParameter>
    <RefParameter Name="SNMP_MAX_COMMUNITY_STR_LEN" Comment="SNMP_MAX_COMMUNITY_STR_LEN" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum length of community string.&lt;br&gt;If community names shall be adjusted at runtime via snmp_set_community() calls, enter here the possible maximum length (+1 for terminating null character).Default value of SNMP_MAX_COMMUNITY_STR_LEN is: LWIP_MAX(LWIP_MAX(sizeof(SNMP_COMMUNITY), sizeof(SNMP_COMMUNITY_WRITE)), sizeof(SNMP_COMMUNITY_TRAP)).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_MAX_COMMUNITY_STR_LEN requires LWIP_SNMP enabled." 
        	  	             NoteCH="SNMP团体字符串的最大长度。&lt;br&gt;如果需要在运行时通过调用snmp_set_community()调整团体名，请在此处输入可能的最大长度（+1 代表 null 终止字符）。 SNMP_MAX_COMMUNITY_STR_LEN的默认值为：LWIP_MAX(LWIP_MAX(sizeof(SNMP_COMMUNITY), sizeof(SNMP_COMMUNITY_WRITE)), sizeof(SNMP_COMMUNITY_TRAP))。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_MAX_COMMUNITY_STR_LEN 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_MIB2" Comment="SNMP_LWIP_MIB2" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="=LWIP_SNMP" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" >
        <Condition Diagnostic="SNMP_LWIP_MIB2 requires LWIP_SNMP, LWIP_STATS and MIB2_STATS enabled." 
        	              DiagnosticCH="启用SNMP_LWIP_MIB2 需要启用LWIP_SNMP、LWIP_STATS 和 MIB2_STATS。" 
        	              Expression="LWIP_SNMP=1 &amp; LWIP_STATS=1 &amp; MIB2_STATS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Indicates if the MIB2 implementation of LWIP SNMP stack is used." 
        	  	             NoteCH="此项用于表示是否使用LWIP SNMP协议栈的MIB2实现。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_MIB2" Comment="SNMP_LWIP_MIB2" Type="list" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="true">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable MIB2 implementation of LWIP SNMP stack.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_MIB2 requires LWIP_SNMP, LWIP_STATS and MIB2_STATS enabled." 
        	  	             NoteCH="禁用LWIP SNMP协议栈的MIB2实现。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_MIB2 需要启用LWIP_SNMP、LWIP_STATS 和 MIB2_STATS。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_MIB2_SYSDESC" Comment="SNMP_LWIP_MIB2_SYSDESC" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;lwIP&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SNMP_LWIP_MIB2_SYSDESC requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_LWIP_MIB2_SYSDESC 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Value return for sysDesc field of MIB2." 
        	  	             NoteCH="MIB2的sysDesc字段返回值。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_MIB2_SYSDESC" Comment="SNMP_LWIP_MIB2_SYSDESC" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Value return for sysDesc field of MIB2.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_MIB2_SYSDESC requires LWIP_SNMP enabled." 
        	  	             NoteCH="MIB2的sysDesc字段返回值。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_MIB2_SYSDESC 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_MIB2_SYSNAME" Comment="SNMP_LWIP_MIB2_SYSNAME" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;FQDN-unk&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SNMP_LWIP_MIB2_SYSNAME requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_LWIP_MIB2_SYSNAME 需要启用LWIP_SNMP 。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Value return for sysName field of MIB2.&lt;br&gt;To make sysName field settable, call snmp_mib2_set_sysname() to provide the necessary buffers." 
        	  	             NoteCH="MIB2的sysName字段返回值。&lt;br&gt;要让sysName字段可设置，需要调用snmp_mib2_set_sysname()提供必要的缓冲区。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_MIB2_SYSNAME" Comment="SNMP_LWIP_MIB2_SYSNAME" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Value return for sysName field of MIB2.&lt;br&gt;To make sysName field settable, call snmp_mib2_set_sysname() to provide the necessary buffers.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_MIB2_SYSNAME requires LWIP_SNMP enabled." 
        	  	             NoteCH="MIB2的sysName字段返回值。&lt;br&gt;要让sysName字段可设置，需要调用snmp_mib2_set_sysname()提供必要的缓冲区。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_MIB2_SYSNAME 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_MIB2_SYSCONTACT" Comment="SNMP_LWIP_MIB2_SYSCONTACT" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNMP_LWIP_MIB2_SYSCONTACT requires LWIP_SNMP enabled." 
        	              DiagnosticCH="启用SNMP_LWIP_MIB2_SYSCONTACT 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Value return for sysContact field of MIB2.&lt;br&gt;To make sysContact field settable, call snmp_mib2_set_syscontact() to provide the necessary buffers." 
        	  	             NoteCH="MIB2的sysContact字段返回值。&lt;br&gt;要让sysContact 字段可设置，需要调用snmp_mib2_set_syscontact() 提供必要的缓冲区。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_MIB2_SYSCONTACT" Comment="SNMP_LWIP_MIB2_SYSCONTACT" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Value return for sysContact field of MIB2.&lt;br&gt;To make sysContact field settable, call snmp_mib2_set_syscontact() to provide the necessary buffers.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_MIB2_SYSCONTACT requires LWIP_SNMP enabled." 
        	  	             NoteCH="MIB2的sysContact字段返回值。&lt;br&gt;要让sysContact 字段可设置，需要调用snmp_mib2_set_syscontact()提供必要的缓冲区。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_MIB2_SYSCONTACT 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_MIB2_SYSLOCATION" Comment="SNMP_LWIP_MIB2_SYSLOCATION" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="&quot;&quot;" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNMP_LWIP_MIB2_SYSLOCATION requires LWIP_SNMP enabled."
        	    	      DiagnosticCH="启用SNMP_LWIP_MIB2_SYSLOCATION 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="Value return for sysLocation field of MIB2.&lt;br&gt;To make sysLocation field settable, call snmp_mib2_set_syslocation() to provide the necessary buffers." 
        	  	             NoteCH="MIB2的sysLocation字段返回值。&lt;br&gt;要让sysLocation字段可设置，需要调用snmp_mib2_set_syslocation()提供必要的缓冲区。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_MIB2_SYSLOCATION" Comment="SNMP_LWIP_MIB2_SYSLOCATION" Type="string edit" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Value return for sysLocation field of MIB2.&lt;br&gt;To make sysLocation field settable, call snmp_mib2_set_syslocation() to provide the necessary buffers.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_MIB2_SYSLOCATION requires LWIP_SNMP enabled." 
        	  	             NoteCH="MIB2的sysLocation字段返回值。要让sysLocation字段可设置，需要调用snmp_mib2_set_syslocation()提供必要的缓冲区。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_MIB2_SYSLOCATION 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_LWIP_GETBULK_MAX_REPETITIONS" Comment="SNMP_LWIP_GETBULK_MAX_REPETITIONS" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SNMP_LWIP_GETBULK_MAX_REPETITIONS requires LWIP_SNMP enabled."
          	              DiagnosticCH="启用SNMP_LWIP_GETBULK_MAX_REPETITIONS 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <Annotation Note="This value is used to limit the repetitions processed in GetBulk requests (value == 0 means no limitation).&lt;br&gt;This may be useful to limit the load for a single request.&lt;br&gt;According to SNMP RFC 1905 it is allowed to not return all requested variables from a GetBulk request if system load would be too high. so the effect is that the client will do more requests to gather all data.&lt;br&gt;For the stack this could be useful in case that SNMP processing is done in TCP/IP thread. In this situation a request with many repetitions could block the thread for a longer time. Setting limit here will keep the stack more responsive." 
        	  	             NoteCH="该值用于限制GetBulk请求中处理的重复次数（0：没有限制）。&lt;br&gt;可以用来限制单个请求的负载。&lt;br&gt;根据SNMP RFC 1905，如果系统负载太高，则允许不返回GetBulk请求中的所有请求变量，其结果是客户端将发起更多请求来收集所有数据。&lt;br&gt;对于协议栈而言，如果SNMP处理是在TCP/IP线程中完成的，则此项设置很有用。在这种情况下，多次重复的请求可能会造成线程长时间阻塞。此项限制设置将让协议栈具有更好的响应性。"/>
    </RefParameter>
    <RefParameter Name="SNMP_LWIP_GETBULK_MAX_REPETITIONS" Comment="SNMP_LWIP_GETBULK_MAX_REPETITIONS" Type="Integer" Group="SNMP Options" GroupCH="SNMP 选项" DefaultValue="null" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="This value is used to limit the repetitions processed in GetBulk requests (value == 0 means no limitation).&lt;br&gt;This may be useful to limit the load for a single request.&lt;br&gt;According to SNMP RFC 1905 it is allowed to not return all requested variables from a GetBulk request if system load would be too high. so the effect is that the client will do more requests to gather all data.&lt;br&gt;For the stack this could be useful in case that SNMP processing is done in TCP/IP thread. In this situation a request with many repetitions could block the thread for a longer time. Setting limit here will keep the stack more responsive.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNMP_LWIP_GETBULK_MAX_REPETITIONS requires LWIP_SNMP enabled." 
        	  	             NoteCH="该值用于限制GetBulk请求中处理的重复次数（0：没有限制）。&lt;br&gt;可以用来限制单个请求的负载。&lt;br&gt;根据SNMP RFC 1905，如果系统负载太高，则允许不返回GetBulk请求中的所有请求变量，其结果是客户端将发起更多请求来收集所有数据。&lt;br&gt;对于协议栈而言，如果SNMP处理是在TCP/IP线程中完成的，则此项设置很有用。在这种情况下，多次重复的请求可能会造成线程长时间阻塞。此项限制设置将让协议栈具有更好的响应性。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNMP_LWIP_GETBULK_MAX_REPETITIONS 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <!-- *************************** SNMP - Version3 Options ******************************-->
    <RefParameter Name="LWIP_SNMP_V3" Comment="LWIP_SNMP_V3" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false">
        <Condition Diagnostic="LWIP_SNMP_V3 requires LWIP_SNMP enabled."
          	              DiagnosticCH="启用LWIP_SNMP_V3 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_SNMP_V3 enables EXPERIMENTAL SNMPv3 support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS." 
        	  	             NoteCH="LWIP_SNMP_V3用于启用EXPERIMENTAL SNMPv3支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SNMP_V3" Comment="LWIP_SNMP_V3" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="LWIP_SNMP_V3 enables EXPERIMENTAL SNMPv3 support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_SNMP_V3 requires LWIP_SNMP enabled." 
        	  	             NoteCH="LWIP_SNMP_V3用于启用EXPERIMENTAL SNMPv3支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SNMP_V3 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SNMP_V3_MBEDTLS" Comment="LWIP_SNMP_V3_MBEDTLS" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="=LWIP_SNMP_V3" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false">
        <Condition Diagnostic="LWIP_SNMP_V3_MBEDTLS requires LWIP_SNMP and LWIP_SNMP_V3 enabled." 
        	              DiagnosticCH="启用LWIP_SNMP_V3_MBEDTLS 需要启用LWIP_SNMP 和 LWIP_SNMP_V3。" 
        	              Expression="LWIP_SNMP=1 &amp; LWIP_SNMP_V3=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_SNMP_V3_MBEDTLS enables EXPERIMENTAL SNMPv3 mbedtls support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS." 
        	  	             NoteCH="LWIP_SNMP_V3_MBEDTLS用于启用EXPERIMENTAL SNMPv3 mbedtls支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SNMP_V3_MBEDTLS" Comment="LWIP_SNMP_V3_MBEDTLS" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="LWIP_SNMP_V3_MBEDTLS enables EXPERIMENTAL SNMPv3 mbedtls support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_SNMP_V3_MBEDTLS requires LWIP_SNMP and LWIP_SNMP_V3 enabled." 
        	  	             NoteCH="LWIP_SNMP_V3_MBEDTLS用于启用EXPERIMENTAL SNMPv3 mbedtls支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。&lt;br&gt;&lt;b&gt;依赖条件：y&lt;/b&gt; 使用LWIP_SNMP_V3_MBEDTLS 需要启用LWIP_SNMP 和 LWIP_SNMP_V3。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SNMP_V3_CRYPTO" Comment="LWIP_SNMP_V3_CRYPTO" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="=LWIP_SNMP_V3_MBEDTLS" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced" Reload="false"  Visible="false">
        <Condition Diagnostic="LWIP_SNMP_V3_CRYPTO requires LWIP_SNMP and LWIP_SNMP_V3 enabled." 
        	              DiagnosticCH="启用LWIP_SNMP_V3_CRYPTO 需要启用LWIP_SNMP 和 LWIP_SNMP_V3。" 
        	              Expression="LWIP_SNMP=1 &amp; LWIP_SNMP_V3=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_SNMP_V3_CRYPTO enables EXPERIMENTAL SNMPv3 crypto support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS." 
        	  	             NoteCH="WIP_SNMP_V3_CRYPTO用于启用EXPERIMENTAL SNMPv3 crypto支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SNMP_V3_CRYPTO" Comment="LWIP_SNMP_V3_CRYPTO" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="LWIP_SNMP_V3 enables EXPERIMENTAL SNMPv3 crypto support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_SNMP_V3_CRYPTO requires LWIP_SNMP and LWIP_SNMP_V3 enabled." 
        	  	             NoteCH="LWIP_SNMP_V3 用于启用EXPERIMENTAL SNMPv3 crypto 支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SNMP_V3_CRYPTO 需要启用LWIP_SNMP 和 LWIP_SNMP_V3。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_SNMP_CONFIGURE_VERSIONS" Comment="LWIP_SNMP_CONFIGURE_VERSIONS" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Reload="false" Visible="false">
        <Condition Diagnostic="LWIP_SNMP_CONFIGURE_VERSIONS requires LWIP_SNMP enabled."
           	              DiagnosticCH="启用LWIP_SNMP_CONFIGURE_VERSIONS 需要启用LWIP_SNMP。" 
        	              Expression="LWIP_SNMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="LWIP_SNMP_CONFIGURE_VERSIONS support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS." 
        	  	             NoteCH="LWIP_SNMP_CONFIGURE_VERSIONS支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。"/>
    </RefParameter>
    <RefParameter Name="LWIP_SNMP_CONFIGURE_VERSIONS" Comment="LWIP_SNMP_CONFIGURE_VERSIONS" Type="list" Group="SNMP - Version3 Options" GroupCH="SNMP - Version3 选项" DefaultValue="0" TabName="SNMP" TabNameCH="SNMP" Mode="Advanced"  Visible="false" Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="LWIP_SNMP_CONFIGURE_VERSIONS support.&lt;br&gt;THIS IS UNDER DEVELOPMENT AND SHOULD NOT BE ENABLED IN PRODUCTS.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_SNMP_CONFIGURE_VERSIONS requires LWIP_SNMP enabled." 
        	  	             NoteCH="LWIP_SNMP_CONFIGURE_VERSIONS 支持。&lt;br&gt;此功能还在开发中，不得在产品中启用。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_SNMP_CONFIGURE_VERSIONS 需要启用LWIP_SNMP。"/>
    </RefParameter>
    
    <!-- *************************** SNTP Options ******************************-->
    <RefParameter Name="LWIP_SNTP" Comment="LWIP_SNTP" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="0" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter provide access to an implementation of a simple &quot;SNTP&quot; client for the lwIP raw API.&lt;br&gt;It is a minimal implementation of SNTPv4 as specified in RFC 4330.&lt;br&gt;For a list of some public NTP servers, see this link : http://support.ntp.org/bin/view/Servers/NTPPoolServers&lt;br&gt;&lt;b&gt;Warnings (up to user to take care!)&lt;/b&gt;:&lt;br&gt;- Enable SNTP requires user specific code not yet generated by AT32 Work Bench. This is reserved for advanced users&lt;br&gt;- This parameter introduced by AT32 Work Bench is not part of LwIP stack&lt;br&gt;- Enable LWIP_TIMERS when using SNTP, to avoid having compilation warnings on sys_timeout/sys_untimeout functions.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other SNTP options are visible as &quot;Advanced Parameters&quot; and only when LWIP_SNTP is enabled." 
        	  	             NoteCH="此参数提供对lwIP raw API的简单&quot;SNTP&quot;客户端实现的访问权限。&lt;br&gt;这是RFC 4330规定的SNTPv4的最小限度实现。&lt;br&gt;关于公共NTP服务器列表，请点击链接http://support.ntp.org/bin/view/Servers/NTPPoolServers。&lt;br&gt;&lt;b&gt;注意！用户需要注意以下事项：&lt;/b&gt;&lt;br&gt;- 启用SNTP需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt;- 此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。&lt;br&gt;- 使用SNTP时需要启用LWIP_TIMERS，避免sys_timeout/sys_untimeout功能出现编译问题。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有SNTP选项都显示为&quot;高级参数&quot;，且只有在启用了LWIP_SNTP时才显示。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_MAX_SERVERS" Comment="SNTP_MAX_SERVERS" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="=LWIP_DHCP_MAX_NTP_SERVERS" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNTP_MAX_SERVERS requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_MAX_SERVERS 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/>
        <Annotation Note="The maximum number of SNTP servers that can be set." 
        	  	             NoteCH="可设置的SNTP服务器的最大数量。"/>
    </RefParameter>
    <RefParameter Name="SNTP_MAX_SERVERS" Comment="SNTP_MAX_SERVERS" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="The maximum number of SNTP servers that can be set.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_MAX_SERVERS requires LWIP_SNTP enabled." 
        	  	             NoteCH="可设置的SNTP服务器的最大数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_MAX_SERVERS 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_GET_SERVERS_FROM_DHCP" Comment="SNTP_GET_SERVERS_FROM_DHCP" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="=LWIP_DHCP_GET_NTP_SRV" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNTP_GET_SERVERS_FROM_DHCP requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_GET_SERVERS_FROM_DHCP 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="Set this to &quot;Enabled&quot; to implement the callback function called by dhcp when NTP servers are received." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在接收到NTP服务器时实现dhcp调用的回调函数。"/>
    </RefParameter>
    <RefParameter Name="SNTP_GET_SERVERS_FROM_DHCP" Comment="SNTP_GET_SERVERS_FROM_DHCP" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to implement the callback function called by dhcp when NTP servers are received.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_GET_SERVERS_FROM_DHCP requires LWIP_SNTP enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，在接收到NTP服务器时实现dhcp调用的回调函数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_GET_SERVERS_FROM_DHCP 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_PORT" Comment="SNTP_PORT" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="123" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SNTP_PORT requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_PORT 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="SNTP server port. The default value is LWIP_IANA_PORT_SNTP set to 123 in iana.h file." 
        	  	             NoteCH="SNTP服务器端口。默认值为LWIP_IANA_PORT_SNTP（iana.h文件中设置为123）。"/>
    </RefParameter>
    <RefParameter Name="SNTP_PORT" Comment="SNTP_PORT" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="SNTP server port.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_PORT requires LWIP_SNTP enabled." 
        	  	             NoteCH="SNTP服务器端口。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_PORT 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_CHECK_RESPONSE" Comment="SNTP_CHECK_RESPONSE" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="0" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2"  Reload="false">
        <Condition Diagnostic="SNTP_CHECK_RESPONSE requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_CHECK_RESPONSE 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="Sanity check:&lt;br&gt;Define this to&lt;br&gt;- 0 to turn off sanity checks (default; smaller code) - &gt;= 1 to check address and port of the response packet to ensure the response comes from the server we sent the request to. - &gt;= 2 to check returned Originate Timestamp against Transmit Timestamp sent to the server (to ensure response to older request). - &gt;= 3 @todo: discard reply if any of the VN, Stratum, or Transmit Timestamp fields is 0 or the Mode field is not 4 (unicast) or 5 (broadcast). - &gt;= 4 @todo: to check that the Root Delay and Root Dispersion fields are each greater than or equal to 0 and less than infinity, where infinity is currently a cozy number like one second. This check avoids using a server whose synchronization source has expired for a very long time." 
        	  	             NoteCH="合理性检查：&lt;br&gt;此参数可设置为&lt;br&gt;- 0：关闭合理性检查（默认设置；针对较小的代码）- &gt;= 1：检查响应数据包的地址和端口，确保响应来自发送请求的服务器。- &gt;= 2：根据发送到服务器的发送时间戳检查返回的发起时间戳（以确保响应更早的请求）。 - &gt;= 3 @todo：如果VN、Stratum或Transmit Timestamp 字段中的任意一个为0，或者Mode 字段不是4（单播）或5（组播），则放弃回复。- &gt;= 4 @todo：检查根延迟（Root Delay）和根分散值（Root Dispersion）字段是否大于等于0且小于无穷大（此处无穷大是一个合理的值，如一秒）。此检查避免使用同步源已失效很长时间的服务器。"/>
    </RefParameter>
    <RefParameter Name="SNTP_CHECK_RESPONSE" Comment="SNTP_CHECK_RESPONSE" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Sanity check:&lt;br&gt;Define this to&lt;br&gt;- 0 to turn off sanity checks (default; smaller code) - &gt;= 1 to check address and port of the response packet to ensure the response comes from the server we sent the request to. - &gt;= 2 to check returned Originate Timestamp against Transmit Timestamp sent to the server (to ensure response to older request). - &gt;= 3 @todo: discard reply if any of the LI, Stratum, or Transmit Timestamp fields is 0 or the Mode field is not 4 (unicast) or 5 (broadcast). - &gt;= 4 @todo: to check that the Root Delay and Root Dispersion fields are each greater than or equal to 0 and less than infinity, where infinity is currently a cozy number like one second. This check avoids using a server whose synchronization source has expired for a very long time.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_CHECK_RESPONSE requires LWIP_SNTP enabled." 
        	  	             NoteCH="合理性检查：&lt;br&gt; 此参数可设置为&lt;br&gt;- 0：关闭合理性检查（默认设置；针对较小的代码）- &gt;= 1：检查响应数据包的地址和端口，确保响应来自发送请求的服务器。- &gt;= 2：根据发送到服务器的发送时间戳检查返回的发起时间戳（以确保响应更早的请求）。- &gt;= 3 @todo：如果LI、Stratum或Transmit Timestamp字段中的任意一个为0，或者Mode 字段不是4（单播）或5（组播），则放弃回复。 - &gt;= 4 @todo：检查根延迟（Root Delay）和根分散值（Root Dispersion）字段是否大于等于0且小于无穷大（此处无穷大是一个合理的值，如一秒）。此检查避免使用同步源已失效很长时间的服务器。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_CHECK_RESPONSE 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_COMP_ROUNDTRIP" Comment="SNTP_COMP_ROUNDTRIP" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="0" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNTP_COMP_ROUNDTRIP requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_COMP_ROUNDTRIP 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable round-trip delay compensation.&lt;br&gt;Compensate for the round-trip delay by calculating the clock offset from the originate, receive, transmit and destination timestamps, as per RFC." 
        	  	             NoteCH="启用往返延迟补偿。&lt;br&gt;根据RFC文档，通过计算发起时间戳、接收时间戳、发送时间戳和目的时间戳所得的时钟偏差来补偿往返延迟。"/>
    </RefParameter>
    <RefParameter Name="SNTP_COMP_ROUNDTRIP" Comment="SNTP_COMP_ROUNDTRIP" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Enable round-trip delay compensation.&lt;br&gt;Compensate for the round-trip delay by calculating the clock offset from the originate, receive, transmit and destination timestamps, as per RFC.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_COMP_ROUNDTRIP requires LWIP_SNTP enabled." 
        	  	             NoteCH="启用往返延迟补偿。&lt;br&gt;根据RFC文档，通过计算发起时间戳、接收时间戳、发送时间戳和目的时间戳所得的时钟偏差来补偿往返延迟。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_COMP_ROUNDTRIP 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_RECV_TIMEOUT" Comment="SNTP_RECV_TIMEOUT" Type="Integer" Unit="Millisecond(ms)" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="15000" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647" >
        <Condition Diagnostic="SNTP_RECV_TIMEOUT requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_RECV_TIMEOUT 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="SNTP receive timeout - in milliseconds&lt;br&gt;Also used as retry timeout - this shouldn't be too low.&lt;br&gt;Default is 15 seconds. Must not be beolw 15 seconds by specification (i.e. 15000)." 
        	  	             NoteCH="SNTP接收超时（单位：毫秒）。&lt;br&gt;也用作重试超时（超时时间不能过低）。&lt;br&gt;默认超时时间为15秒；不得低于15秒（即此参数值不得小于15000）。"/>
    </RefParameter>
    <RefParameter Name="SNTP_RECV_TIMEOUT" Comment="SNTP_RECV_TIMEOUT" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false">
        <Annotation Note="SNTP receive timeout - in milliseconds&lt;br&gt;Also used as retry timeout - this shouldn't be too low.&lt;br&gt;Default is 15 seconds. Must not be beolw 15 seconds by specification (i.e. 15000).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_RECV_TIMEOUT requires LWIP_SNTP enabled." 
        	  	             NoteCH="SNTP接收超时（单位：毫秒）。&lt;br&gt;也用作重试超时（超时时间不能过低）。&lt;br&gt;默认超时时间为15秒；不得低于15秒（即此参数值不得小于15000）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_RECV_TIMEOUT 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_UPDATE_DELAY" Comment="SNTP_UPDATE_DELAY" Type="Integer" Unit="Millisecond(ms)" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="3600000" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="=15*1000" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SNTP_UPDATE_DELAY requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_UPDATE_DELAY 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="SNTP update delay - in milliseconds&lt;br&gt;Default is 1 hour. Must not be beolw 60 seconds by specification (i.e. 15000)." 
        	  	             NoteCH="SNTP更新延迟（单位：毫秒）。&lt;br&gt;默认延迟时间为1小时；不得低于60秒（即此参数值不得小于15000）。"/>
    </RefParameter>
    <RefParameter Name="SNTP_UPDATE_DELAY" Comment="SNTP_UPDATE_DELAY" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="SNTP update delay - in milliseconds&lt;br&gt;Default is 1 hour. Must not be beolw 60 seconds by specification (i.e. 15000).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_UPDATE_DELAY requires LWIP_SNTP enabled." 
        	  	             NoteCH="SNTP更新延迟（单位：毫秒）。&lt;br&gt;默认延迟时间为1小时；不得低于60秒（即此参数值不得小于15000）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_UPDATE_DELAY 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_RETRY_TIMEOUT" Comment="SNTP_RETRY_TIMEOUT" Type="Integer" Unit="Millisecond(ms)" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="=SNTP_RECV_TIMEOUT" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SNTP_RETRY_TIMEOUT requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_RETRY_TIMEOUT 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="Default retry timeout (in milliseconds) if the response received is invalid.&lt;br&gt;This is doubled with each retry until SNTP_RETRY_TIMEOUT_MAX is reached." 
        	  	             NoteCH="接收响应无效时的默认重试超时（单位：毫秒）。&lt;br&gt;每次重试都会增加一倍，直到达到SNTP_RETRY_TIMEOUT_MAX设定值。"/>
    </RefParameter>
    <RefParameter Name="SNTP_RETRY_TIMEOUT" Comment="SNTP_RETRY_TIMEOUT" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Default retry timeout (in milliseconds) if the response received is invalid.&lt;br&gt;This is doubled with each retry until SNTP_RETRY_TIMEOUT_MAX is reached.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_RETRY_TIMEOUT requires LWIP_SNTP enabled." 
        	  	             NoteCH="接收响应无效时的默认重试超时（单位：毫秒）。&lt;br&gt;每次重试都会增加一倍，直到达到SNTP_RETRY_TIMEOUT_MAX设定值。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_RETRY_TIMEOUT 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_RETRY_TIMEOUT_MAX" Comment="SNTP_RETRY_TIMEOUT_MAX" Type="Integer" Unit="Millisecond(ms)" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="=SNTP_RETRY_TIMEOUT*10" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SNTP_RETRY_TIMEOUT_MAX requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_RETRY_TIMEOUT_MAX 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <Annotation Note="Maximum retry timeout (in milliseconds)." 
        	  	             NoteCH="最大重试超时（单位：毫秒）。"/>
    </RefParameter>
    <RefParameter Name="SNTP_RETRY_TIMEOUT_MAX" Comment="SNTP_RETRY_TIMEOUT_MAX" Type="Integer" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum retry timeout (in milliseconds).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_RETRY_TIMEOUT_MAX requires LWIP_SNTP enabled." 
        	  	             NoteCH="最大重试超时（单位：毫秒）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_RETRY_TIMEOUT_MAX 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_RETRY_TIMEOUT_EXP" Comment="SNTP_RETRY_TIMEOUT_EXP" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNTP_RETRY_TIMEOUT_EXP requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_RETRY_TIMEOUT_EXP 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Increase retry timeout with every retry sent&lt;br&gt;Default is on to conform to RFC." 
        	  	             NoteCH="每次发送重试请求时增加重试超时时间。&lt;br&gt;默认情况下开启此选项，以符合RFC相关规范。"/>
    </RefParameter>
    <RefParameter Name="SNTP_RETRY_TIMEOUT_EXP" Comment="SNTP_RETRY_TIMEOUT_EXP" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Increase retry timeout with every retry sent&lt;br&gt;Default is on to conform to RFC.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_RETRY_TIMEOUT_EXP requires LWIP_SNTP enabled." 
        	  	             NoteCH="每次发送重试请求时增加重试超时时间。&lt;br&gt;默认情况下开启此选项，以符合RFC相关规范。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_RETRY_TIMEOUT_EXP 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_MONITOR_SERVER_REACHABILITY" Comment="SNTP_MONITOR_SERVER_REACHABILITY" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SNTP_MONITOR_SERVER_REACHABILITY requires LWIP_SNTP enabled." 
        	              DiagnosticCH="启用SNTP_MONITOR_SERVER_REACHABILITY 需要启用LWIP_SNTP。" 
        	              Expression="LWIP_SNTP=1"/> 
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Keep a reachability shift register per server.&lt;br&gt;Default is on to conform to RFC." 
        	  	             NoteCH="为每台服务器保留一个可达性移位寄存器。&lt;br&gt;默认情况下开启此选项，以符合RFC相关规范。"/>
    </RefParameter>
    <RefParameter Name="SNTP_MONITOR_SERVER_REACHABILITY" Comment="SNTP_MONITOR_SERVER_REACHABILITY" Type="list" Group="SNTP Options" GroupCH="SNTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Keep a reachability shift register per server.&lt;br&gt;Default is on to conform to RFC.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SNTP_MONITOR_SERVER_REACHABILITY requires LWIP_SNTP enabled." 
        	  	             NoteCH="为每台服务器保留一个可达性移位寄存器。&lt;br&gt;默认情况下开启此选项，以符合RFC相关规范。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SNTP_MONITOR_SERVER_REACHABILITY 需要启用LWIP_SNTP。"/>
    </RefParameter>
    
    <!-- *************************** SMTP Options ******************************-->
    <RefParameter Name="LWIP_SMTP" Comment="LWIP_SMTP" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="0" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter provide access to an implementation of a simple &quot;SMTP&quot; client.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other SMTP options are visible as &quot;Advanced Parameters&quot; and only when LWIP_SMTP is enabled." 
        	  	             NoteCH="此参数提供对简单&quot;SMTP&quot;客户端实现的访问权限。&lt;br&gt;&lt;b&gt;注意： &lt;/b&gt;其他所有SMTP选项都显示为&quot;高级参数&quot;，且只有在启用了LWIP_SMTP时才显示。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_BODYDH" Comment="SMTP_BODYDH" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="0" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SMTP_BODYDH requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_BODYDH 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable data handler callback on BODY." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，启用BODY上的数据处理程序回调。"/>
    </RefParameter>
    <RefParameter Name="SMTP_BODYDH" Comment="SMTP_BODYDH" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to enable data handler callback on BODY.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_BODYDH requires LWIP_SMTP enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，启用BODY上的数据处理程序回调。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_BODYDH 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_MAX_SERVERNAME_LEN" Comment="SMTP_MAX_SERVERNAME_LEN" Type="Integer" Unit="Bytes" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="256" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="SMTP_MAX_SERVERNAME_LEN requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_MAX_SERVERNAME_LEN 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <Annotation Note="Maximum length reserved for server name including terminating 0 byte." 
        	  	             NoteCH="服务器名称预留的最大长度（包括终止符 0 字节）。"/>
    </RefParameter>
    <RefParameter Name="SMTP_MAX_SERVERNAME_LEN" Comment="SMTP_MAX_SERVERNAME_LEN" Type="Integer" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum length reserved for server name including terminating 0 byte.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_MAX_SERVERNAME_LEN requires LWIP_SMTP enabled." 
        	  	             NoteCH="服务器名称预留的最大长度（包括终止符 0 字节）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_MAX_SERVERNAME_LEN 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_MAX_USERNAME_LEN" Comment="SMTP_MAX_USERNAME_LEN" Type="Integer" Unit="Bytes" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="32" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SMTP_MAX_USERNAME_LEN requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_MAX_USERNAME_LEN 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <Annotation Note="Maximum length reserved for username." 
        	  	             NoteCH="用户名预留的最大长度。"/>
    </RefParameter>
    <RefParameter Name="SMTP_MAX_USERNAME_LEN" Comment="SMTP_MAX_USERNAME_LEN" Type="Integer" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum length reserved for username.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_MAX_USERNAME_LEN requires LWIP_SMTP enabled." 
        	  	             NoteCH="用户名预留的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_MAX_USERNAME_LEN 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_MAX_PASS_LEN" Comment="SMTP_MAX_PASS_LEN" Type="Integer" Unit="Bytes" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="32" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="SMTP_MAX_PASS_LEN requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_MAX_PASS_LEN 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <Annotation Note="Maximum length reserved for password." 
        	  	             NoteCH="密码保留的最大长度。"/>
    </RefParameter>
    <RefParameter Name="SMTP_MAX_PASS_LEN" Comment="SMTP_MAX_PASS_LEN" Type="Integer" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Maximum length reserved for password.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_MAX_PASS_LEN requires LWIP_SMTP enabled." 
        	  	             NoteCH="密码保留的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt;使用SMTP_MAX_PASS_LEN 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_COPY_AUTHDATA" Comment="SMTP_COPY_AUTHDATA" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SMTP_COPY_AUTHDATA requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_COPY_AUTHDATA 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Disabled&quot; if you know the authentication data will not change during the smtp session, which saves some heap space." 
        	  	             NoteCH="在明确SMTP期间认证数据不会改变的情况下，将此参数设置为&quot;关闭&quot;，以节省堆空间。"/>
    </RefParameter>
    <RefParameter Name="SMTP_COPY_AUTHDATA" Comment="SMTP_COPY_AUTHDATA" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Disabled&quot; if you know the authentication data will not change during the smtp session, which saves some heap space.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_COPY_AUTHDATA requires LWIP_SMTP enabled." 
        	  	             NoteCH="在明确SMTP期间认证数据不会改变的情况下，将此参数设置为&quot;关闭&quot;，以节省堆空间。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_COPY_AUTHDATA 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_CHECK_DATA" Comment="SMTP_CHECK_DATA" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="SMTP_CHECK_DATA requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_CHECK_DATA 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Disabled&quot; to save some code space if you know for sure that all data passed to this module conforms to the requirements in the SMTP RFC.&lt;br&gt;WARNING: use this with care!" 
        	  	             NoteCH="在明确传递给此模块的所有数据都符合SMTP RFC要求的情况下，将此参数设置为&quot;关闭&quot;以节省代码空间。&lt;br&gt;注意事项：请谨慎设置此选项！"/>
    </RefParameter>
    <RefParameter Name="SMTP_CHECK_DATA" Comment="SMTP_CHECK_DATA" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Disabled&quot; to save some code space if you know for sure that all data passed to this module conforms to the requirements in the SMTP RFC.&lt;br&gt;WARNING: use this with care!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_CHECK_DATA requires LWIP_SMTP enabled." 
        	  	             NoteCH="在明确传递给此模块的所有数据都符合SMTP RFC要求的情况下，将此参数设置为&quot;关闭&quot;以节省代码空间。&lt;br&gt;注意事项：请谨慎设置此选项！&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_CHECK_DATA 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_SUPPORT_AUTH_PLAIN" Comment="SMTP_SUPPORT_AUTH_PLAIN" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SMTP_SUPPORT_AUTH_PLAIN requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_SUPPORT_AUTH_PLAIN 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable AUTH PLAIN support." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持AUTH PLAIN功能。"/>
    </RefParameter>
    <RefParameter Name="SMTP_SUPPORT_AUTH_PLAIN" Comment="SMTP_SUPPORT_AUTH_PLAIN" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to enable AUTH PLAIN support.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_SUPPORT_AUTH_PLAIN requires LWIP_SMTP enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持AUTH PLAIN功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_SUPPORT_AUTH_PLAIN 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_SUPPORT_AUTH_LOGIN" Comment="SMTP_SUPPORT_AUTH_LOGIN" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="1" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SMTP_SUPPORT_AUTH_LOGIN requires LWIP_SMTP enabled." 
        	              DiagnosticCH="启用SMTP_SUPPORT_AUTH_LOGIN 需要启用LWIP_SMTP。" 
        	              Expression="LWIP_SMTP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to enable AUTH LOGIN support." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持AUTH LOGIN功能。"/>
    </RefParameter>
    <RefParameter Name="SMTP_SUPPORT_AUTH_LOGIN" Comment="SMTP_SUPPORT_AUTH_LOGIN" Type="list" Group="SMTP Options" GroupCH="SMTP 选项" DefaultValue="null" TabName="SNTP/SMTP" TabNameCH="SNTP/SMTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to enable AUTH LOGIN support.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_SUPPORT_AUTH_LOGIN requires LWIP_SMTP enabled.Set this to &quot;Enabled&quot; to enable AUTH LOGIN support.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SMTP_SUPPORT_AUTH_LOGIN requires LWIP_SMTP enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，支持AUTH LOGIN功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_SUPPORT_AUTH_LOGIN 需要启用LWIP_SMTP。将此参数设置为&quot;开启&quot;，支持AUTH LOGIN功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SMTP_SUPPORT_AUTH_LOGIN 需要启用LWIP_SMTP。"/>
    </RefParameter>
    
    <!-- *************************** MDNS Options ******************************-->
    <RefParameter Name="LWIP_MDNS" Comment="LWIP_MDNS" Type="list" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="0" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Basic" >
        <Condition Diagnostic="LWIP_MDNS requires LWIP_UDP, LWIP_IPV4 and LWIP_IGMP enabled." 
        	              DiagnosticCH="启用LWIP_MDNS 需要启用LWIP_UDP、LWIP_IPV4 和 LWIP_IGMP。" 
        	              Expression="LWIP_UDP=1 &amp; LWIP_IPV4=1 &amp; LWIP_IGMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter provides access to an implementation of a MDNS responder.&lt;br&gt;The following RFC have been followed:&lt;br&gt;- RFC 6762 (Multicast DNS)&lt;br&gt;- RFC 6763 (DNS-Based Service Discovery).&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All Other MDNS options are visible as &quot;Advanced Parameters&quot; and only when LWIP_MDNS is enabled.&lt;br&gt;&lt;b&gt;Warnings&lt;/b&gt;:&lt;br&gt;- This parameter introduced by AT32 Work Bench is not part of LwIP stack&lt;br&gt;- Enable MDNS requires user specific code not yet generated by AT32 Work Bench, this is reserved for advanced users.&lt;br&gt;Things left to implement:&lt;br&gt;- Probing/conflict resolution&lt;br&gt;- Sending goodbye messages (zero ttl) - shutdown, DHCP lease about to expire, DHCP turned off...&lt;br&gt;- Checking that source address of unicast requests are on the same network&lt;br&gt;- Limiting multicast responses to 1 per second per resource record&lt;br&gt;- Fragmenting replies if required&lt;br&gt;- Subscribe to netif address/link change events and act on them (currently needs to be done manually)&lt;br&gt;- Handling multi-packet known answers&lt;br&gt;- Individual known answer detection for all local IPv6 addresses&lt;br&gt;- Dynamic size of outgoing packet&lt;br&gt;" 
        	  	             NoteCH="此参数提供对MDNS响应器实现的访问权限。&lt;br&gt;遵循以下RFC相关规定：&lt;br&gt;- RFC 6762（Multicast DNS）&lt;br&gt;- RFC 6763（DNS-Based Service Discovery）。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有MDNS选项都显示为 &quot;高级参数&quot;，且只有在启用了LWIP_MDNS 时才显示。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;&lt;br&gt;-此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。&lt;br&gt;- 启用MDNS需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt;待处理事项： &lt;br&gt;- 探测/冲突解决&lt;br&gt;-发送生存时间（TTL）为零的 goodbye 消息- 关机、DHCP 租约即将到期、DHCP关闭。&lt;br&gt;-检查单播请求的源地址是否在同一网络上。&lt;br&gt;-将每个资源记录的多播响应限制为每秒一次。&lt;br&gt;- 如有需要，将回复进行分段。&lt;br&gt;- 订阅netif 地址/链接更改事件并进行相应操作（目前需要手动完成）。&lt;br&gt;- 处理多包已知答案。&lt;br&gt;-针对所有本地IPv6地址的单独已知答案检测。&lt;br&gt;- 传出数据包的动态大小。&lt;br&gt;"/>
    </RefParameter>
    <RefParameter Name="LWIP_MDNS" Comment="LWIP_MDNS" Type="list" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="0" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="This parameter provides access to an implementation of a MDNS responder.&lt;br&gt;The following RFC have been followed:&lt;br&gt;- RFC 6762 (Multicast DNS)&lt;br&gt;- RFC 6763 (DNS-Based Service Discovery).&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_MDNS requires LWIP_UDP, LWIP_IPV4 and LWIP_IGMP enabled.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All Other MDNS options are visible as &quot;Advanced Parameters&quot; and only when LWIP_MDNS is enabled.&lt;br&gt;&lt;b&gt;Warnings&lt;/b&gt;:&lt;br&gt;- This parameter introduced by AT32 Work Bench is not part of LwIP stack&lt;br&gt;- Enable MDNS requires user specific code not yet generated by AT32 Work Bench, this is reserved for advanced users.&lt;br&gt;Things left to implement:&lt;br&gt;- Probing/conflict resolution&lt;br&gt;- Sending goodbye messages (zero ttl) - shutdown, DHCP lease about to expire, DHCP turned off...&lt;br&gt;- Checking that source address of unicast requests are on the same network&lt;br&gt;- Limiting multicast responses to 1 per second per resource record&lt;br&gt;- Fragmenting replies if required&lt;br&gt;- Subscribe to netif address/link change events and act on them (currently needs to be done manually)&lt;br&gt;- Handling multi-packet known answers&lt;br&gt;- Individual known answer detection for all local IPv6 addresses&lt;br&gt;- Dynamic size of outgoing packet&lt;br&gt;" 
        	  	             NoteCH="此参数提供对MDNS响应器实现的访问权限。&lt;br&gt; 遵循以下RFC相关规定：&lt;br&gt;- RFC 6762（Multicast DNS）&lt;br&gt;- RFC 6763（DNS-Based Service Discovery）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_MDNS 需要启用LWIP_UDP、LWIP_IPV4 和LWIP_IGMP。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt; 其他所有 MDNS选项都显示为&quot;高级参数&quot; ，且只有在启用了LWIP_MDNS时才显示。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;&lt;br&gt;- 此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。&lt;br&gt;- 启用MDNS需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt; 待处理事项：&lt;br&gt;- 探测/冲突解决&lt;br&gt;- 发送生存时间（TTL）为零的 goodbye 消息- 关机、DHCP 租约即将到期、DHCP关闭。&lt;br&gt;- 检查单播请求的源地址是否在同一网络上。&lt;br&gt;- 将每个资源记录的多播响应限制为每秒一次。&lt;br&gt;- 如有需要，将回复进行分段。&lt;br&gt;- 订阅netif 地址/链接更改事件并进行相应操作（目前需要手动完成）。&lt;br&gt;- 处理多包已知答案。&lt;br&gt;- 针对所有本地IPv6地址的单独已知答案检测。&lt;br&gt;- 传出数据包的动态大小。&lt;br&gt;"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_MDNS_RESPONDER" Comment="LWIP_MDNS_RESPONDER" Type="list" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="0" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Reload="false" >
        <Condition Diagnostic="LWIP_MDNS_RESPONDER requires LWIP_MDNS enabled." 
        	              DiagnosticCH="启用LWIP_MDNS_RESPONDER 需要启用LWIP_MDNS。" 
        	              Expression="LWIP_MDNS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Set this to &quot;Enabled&quot; to turn on multicast DNS module. UDP must be available for MDNS transport. IGMP is needed for IPv4 multicast." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，开启多播DNS模块。UDP协议用于MDNS传播。IPv4多播需要使用IGMP协议。"/>
    </RefParameter>
    <RefParameter Name="LWIP_MDNS_RESPONDER" Comment="LWIP_MDNS_RESPONDER" Type="list" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Set this to &quot;Enabled&quot; to turn on multicast DNS module. UDP must be available for MDNS transport. IGMP is needed for IPv4 multicast.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_MDNS_RESPONDER requires LWIP_MDNS enabled." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，开启多播DNS模块。UDP协议用于MDNS传播。IPv4多播需要使用IGMP协议。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_MDNS_RESPONDER 需要启用LWIP_MDNS。"/>
    </RefParameter>
    
    <RefParameter Name="MDNS_MAX_SERVICES" Comment="MDNS_MAX_SERVICES" Type="Integer" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="0" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="MDNS_MAX_SERVICES requires LWIP_MDNS enabled."
        	              DiagnosticCH="启用MDNS_MAX_SERVICES 需要启用LWIP_MDNS。" 
        	              Expression="LWIP_MDNS=1"/>
        <Annotation Note="Use this parameter to set the maximum number of services per netif." 
        	  	             NoteCH="此参数用于设置每个netif的最大服务数量。"/>
    </RefParameter>
    <RefParameter Name="MDNS_MAX_SERVICES" Comment="MDNS_MAX_SERVICES" Type="Integer" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Use this parameter to set the maximum number of services per netif..&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MDNS_MAX_SERVICES requires LWIP_MDNS enabled." 
        	  	             NoteCH="此参数用于设置每个netif的最大服务数量。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MDNS_MAX_SERVICES 需要启用LWIP_MDNS。"/>
    </RefParameter>
    
    <RefParameter Name="MDNS_RESP_USENETIF_EXTCALLBACK" Comment="MDNS_RESP_USENETIF_EXTCALLBACK" Type="Integer" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="=LWIP_NETIF_EXT_STATUS_CALLBACK" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="MDNS_RESP_USENETIF_EXTCALLBACK requires LWIP_MDNS enabled."
        	              DiagnosticCH="启用MDNS_RESP_USENETIF_EXTCALLBACK 需要启用LWIP_MDNS。" 
        	              Expression="LWIP_MDNS=1"/>
        <Annotation Note="register an ext_callback on the netif to automatically restart probing/announcing on status or address change." 
        	  	             NoteCH="在netif上注册一个ext_callback，以便在状态或地址改变时自动重新启动探测/宣告。"/>
    </RefParameter>
    <RefParameter Name="MDNS_RESP_USENETIF_EXTCALLBACK" Comment="MDNS_RESP_USENETIF_EXTCALLBACK" Type="Integer" Group="MDNS Options" GroupCH="MDNS 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="register an ext_callback on the netif to automatically restart probing/announcing on status or address change.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MDNS_RESP_USENETIF_EXTCALLBACK requires LWIP_MDNS enabled." 
        	  	             NoteCH="在netif上注册一个ext_callback，以便在状态或地址改变时自动重新启动探测/宣告。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MDNS_RESP_USENETIF_EXTCALLBACK 需要启用LWIP_MDNS。"/>
    </RefParameter>
    
    <!-- *************************** TFTP Options ******************************-->
    <RefParameter Name="LWIP_TFTP" Comment="LWIP_TFTP" Type="list" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="0" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter provide access to an implementation of a simple TFTP server for the lwIP raw API.&lt;br&gt;&lt;b&gt;Warnings&lt;/b&gt;:&lt;br&gt;- This parameter introduced by AT32 Work Bench is not part of LwIP stack.&lt;br&gt;- Enable TFTP requires user specific code not yet generated by AT32 Work Bench. This is reserved for advanced users.&lt;br&gt;- Enable LWIP_TIMERS when using TFTP, to avoid having compilation warnings on sys_timeout/sys_untimeout functions.&lt;b&gt;Note: &lt;/b&gt;All Other TFTP options are visible as &quot;Advanced Parameters&quot; and only when LWIP_TFTP is enabled." 
        	  	             NoteCH="此参数提供对lwIP raw API的简单TFTP服务器实现的访问权限。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt;&lt;br&gt;- 此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。&lt;br&gt;- 启用TFTP需要用户定义代码，而非AT32 Work Bench生成的代码。此设定为高级用户预留。&lt;br&gt;- 使用TFTP协议时启用LWIP_TIMERS，避免sys_timeout/sys_untimeout功能出现编译问题。&lt;b&gt;注意：&lt;/b&gt;其他所有TFTP选项都显示为&quot;高级参数&quot;，且只有在启用了LWIP_TFTP时才显示。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_PORT" Comment="TFTP_PORT" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="69" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="TFTP_PORT requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_PORT 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set the server port number. The default value is LWIP_IANA_PORT_TFTP set to 69 in iana.h file." 
        	  	             NoteCH="此选项用于设置服务器端口号。默认值为LWIP_IANA_PORT_TFTP（iana.h文件中设置为69）。"/>
    </RefParameter>
    <RefParameter Name="TFTP_PORT" Comment="TFTP_PORT" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This option set the server port number.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_PORT requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置服务器端口号。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_PORT 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_TIMEOUT_MSECS" Comment="TFTP_TIMEOUT_MSECS" Type="Integer" Unit="Millisecond(ms)" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="10000" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" >
        <Condition Diagnostic="TFTP_TIMEOUT_MSECS requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_TIMEOUT_MSECS 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set TFTP timeout." 
        	  	             NoteCH="此选项用于设置TFTP超时。"/>
    </RefParameter>
    <RefParameter Name="TFTP_TIMEOUT_MSECS" Comment="TFTP_TIMEOUT_MSECS" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false">
        <Annotation Note="This option set TFTP timeout.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_TIMEOUT_MSECS requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置TFTP超时。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_TIMEOUT_MSECS 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_MAX_RETRIES" Comment="TFTP_MAX_RETRIES" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="5" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="TFTP_MAX_RETRIES requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_MAX_RETRIES 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set the maximum number of retries when a file is read from server." 
        	  	             NoteCH="此选项用于设置从服务器读取文件时重试的最大次数。"/>
    </RefParameter>
    <RefParameter Name="TFTP_MAX_RETRIES" Comment="TFTP_MAX_RETRIES" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This option set the maximum number of retries when a file is read from server.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_MAX_RETRIES requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置从服务器读取文件时重试的最大次数。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_MAX_RETRIES 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_TIMER_MSECS" Comment="TFTP_TIMER_MSECS" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="=TFTP_TIMEOUT_MSECS/10" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Reload="false" >
        <Condition Diagnostic="TFTP_TIMER_MSECS requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_TIMER_MSECS 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set the timer cyclic interval." 
        	  	             NoteCH="此选项用于设置定时器循环间隔。"/>
    </RefParameter>
    <RefParameter Name="TFTP_TIMER_MSECS" Comment="TFTP_TIMER_MSECS" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This option set the timer cyclic interval.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_TIMER_MSECS requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置定时器循环间隔。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_TIMER_MSECS 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_MAX_FILENAME_LEN" Comment="TFTP_MAX_FILENAME_LEN" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="20" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="TFTP_MAX_FILENAME_LEN requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_MAX_FILENAME_LEN 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set the maximum length of TFTP filename." 
        	  	             NoteCH="此选项用于设置TFTP文件名的最大长度。"/>
    </RefParameter>
    <RefParameter Name="TFTP_MAX_FILENAME_LEN" Comment="TFTP_MAX_FILENAME_LEN" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This option set the maximum length of TFTP filename.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_MAX_FILENAME_LEN requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置TFTP文件名的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_MAX_FILENAME_LEN 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_MAX_MODE_LEN" Comment="TFTP_MAX_MODE_LEN" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="7" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647"  Reload="false">
        <Condition Diagnostic="TFTP_MAX_MODE_LEN requires LWIP_TFTP enabled." 
        	              DiagnosticCH="启用TFTP_MAX_MODE_LEN 需要启用LWIP_TFTP。" 
        	              Expression="LWIP_TFTP=1"/>
        <Annotation Note="This option set the maximum length of TFTP mode." 
        	  	             NoteCH="此选项用于设置TFTP模式的最大长度。"/>
    </RefParameter>
    <RefParameter Name="TFTP_MAX_MODE_LEN" Comment="TFTP_MAX_MODE_LEN" Type="Integer" Group="TFTP Options" GroupCH="TFTP 选项" DefaultValue="null" TabName="MDNS/TFTP" TabNameCH="MDNS/TFTP" Mode="Advanced" Min="0" Max="2147483647" Visible="false" Reload="false">
        <Annotation Note="This option set the maximum length of TFTP mode.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TFTP_MAX_MODE_LEN requires LWIP_TFTP enabled." 
        	  	             NoteCH="此选项用于设置TFTP模式的最大长度。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TFTP_MAX_MODE_LEN 需要启用LWIP_TFTP。"/>
    </RefParameter>
    
    <!-- *************************** Sanity Checks Options ******************************-->
    <RefParameter Name="LWIP_DISABLE_TCP_SANITY_CHECKS" Comment="LWIP_DISABLE_TCP_SANITY_CHECKS" Type="list" Group="Sanity Checks" GroupCH="Sanity 检查" DefaultValue="0" TabName="Perf/Checks" TabNameCH="Perf/Checks" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Activate some checks on TCP parameters.&lt;br&gt;&lt;b&gt;TCP Checks&lt;/b&gt;: If LWIP_DISABLE_TCP_SANITY_CHECKS is disabled (=0), check is performed on MEMP_NUM_TCP_SEG, TCP_SND_BUF, TCP_SND_QUEUELEN, TCP_SNDLOWAT, TCP_SNDQUEUELOWAT, PBUF_POOL_BUFSIZE and TCP_WND parameters." 
        	  	             NoteCH="激活对TCP参数的检查。&lt;br&gt;&lt;b&gt;TCP 检查：&lt;/b&gt; 当关闭LWIP_DISABLE_TCP_SANITY_CHECKS 时（设置为0），对MEMP_NUM_TCP_SEG、TCP_SND_BUF,、TCP_SND_QUEUELEN、TCP_SNDLOWAT、TCP_SNDQUEUELOWAT、PBUF_POOL_BUFSIZE 和 TCP_WND 参数进行检查。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DISABLE_MEMP_SANITY_CHECKS" Comment="LWIP_DISABLE_MEMP_SANITY_CHECKS" Type="list" Group="Sanity Checks" GroupCH="Sanity 检查" DefaultValue="0" TabName="Perf/Checks" TabNameCH="Perf/Checks" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Activate some checks on MEMP_NUM_NETCONN parameter.&lt;br&gt;&lt;b&gt;MEMP Checks&lt;/b&gt;: If LWIP_DISABLE_MEMP_SANITY_CHECKS is disabled (=0), check is performed on MEMP_NUM_NETCONN." 
        	  	             NoteCH="激活对MEMP_NUM_NETCONN 参数的检查。&lt;br&gt;&lt;b&gt;MEMP检查：&lt;/b&gt; 当关闭LWIP_DISABLE_MEMP_SANITY_CHECKS 时（设置为0），对MEMP_NUM_NETCONN进行检查。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_PERF" Comment="LWIP_PERF" Type="list" Group="Performance Options" GroupCH="Performance 选项" DefaultValue="0" TabName="Perf/Checks" TabNameCH="Perf/Checks" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="This parameter enables performance testing for lwIP (if enabled, arch/perf.h is included)." 
        	  	             NoteCH="此参数用于开启lwIP的性能测试（如果启用，则包含arch/perf.h）。"/>
    </RefParameter>
    
    <!-- *************************** Debug - Statistics Options ******************************-->
    <RefParameter Name="LWIP_STATS" Comment="LWIP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Basic" >
        <Condition Expression="LWIP_SNMP=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable statistics collection in lwip_stats.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other statistics options are visible as &quot;Advanced Parameters&quot;.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: This global option is linked to all other Statistics options. LWIP_STATS must be enabled if SNMP_LWIP_MIB2 is enabled." 
        	  	             NoteCH="在lwip_stats中启用统计信息收集。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有统计信息选项都显示为&quot;高级参数&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 这个全局选项与其他所有统计信息选项相关联。当SNMP_LWIP_MIB2启用时，必须启用LWIP_STATS。"/>
    </RefParameter>
    <RefParameter Name="LWIP_STATS" Comment="LWIP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Basic" >
        <Condition Expression="LWIP_SNMP=1 &amp; SNMP_LWIP_MIB2=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable statistics collection in lwip_stats.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other statistics options are visible as &quot;Advanced Parameters&quot;.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: This global option is linked to all other Statistics options. LWIP_STATS must be enabled if SNMP_LWIP_MIB2 is enabled." 
        	  	             NoteCH="在lwip_stats中启用统计信息收集。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有统计信息选项都显示为&quot;高级参数&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 这个全局选项与其他所有统计信息选项相关联。在SNMP_LWIP_MIB2启用时，必须启用LWIP_STATS。"/>
    </RefParameter>
    <RefParameter Name="LWIP_STATS" Comment="LWIP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Basic" >
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable statistics collection in lwip_stats.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other statistics options are visible as &quot;Advanced Parameters&quot;.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: This global option is linked to all other Statistics options. LWIP_STATS must be enabled if SNMP_LWIP_MIB2 is enabled." 
        	  	             NoteCH="在lwip_stats中启用统计信息收集。&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有统计信息选项都显示为&quot;高级参数&quot;。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 这个全局选项与其他所有统计信息选项相关联。当SNMP_LWIP_MIB2启用时，必须启用LWIP_STATS。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_STATS_DISPLAY" Comment="LWIP_STATS_DISPLAY" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="LWIP_STATS_DISPLAY requires LWIP_STATS enabled." 
        	              DiagnosticCH="启用LWIP_STATS_DISPLAY 需要启用LWIP_STATS。" 
        	              Expression="LWIP_STATS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Compile in the statistics output functions." 
        	  	             NoteCH="统计信息输出函数编译。"/>
    </RefParameter>
    <RefParameter Name="LWIP_STATS_DISPLAY" Comment="LWIP_STATS_DISPLAY" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Compilation in the statistics output functions disabled.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LWIP_STATS_DISPLAY requires LWIP_STATS enabled." 
        	  	             NoteCH="禁用统计信息输出函数编译。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LWIP_STATS_DISPLAY 需要启用LWIP_STATS。"/>
    </RefParameter>
    
    <RefParameter Name="LINK_STATS" Comment="LINK_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="LINK_STATS requires LWIP_STATS enabled." 
        	              DiagnosticCH="启用LINK_STATS 需要启用LWIP_STATS。" 
        	              Expression="LWIP_STATS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable link stats." 
        	  	             NoteCH="启用链路统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="LINK_STATS" Comment="LINK_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable link stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: LINK_STATS requires LWIP_STATS enabled." 
        	  	             NoteCH="关闭链路统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用LINK_STATS 需要启用LWIP_STATS。"/>
    </RefParameter>
    
    <RefParameter Name="ETHARP_STATS" Comment="ETHARP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_ARP" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="ETHARP_STATS requires LWIP_STATS enabled and is set by default with LWIP_ARP." 
        	              DiagnosticCH="使用ETHARP_STATS 需要启用LWIP_STATS；默认通过LWIP_ARP进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_ARP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable etharp stats." 
        	  	             NoteCH="启用etharp统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="ETHARP_STATS" Comment="ETHARP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable etharp stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: ETHARP_STATS requires LWIP_STATS enabled and is set by default with LWIP_ARP." 
        	  	             NoteCH="关闭etharp统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用ETHARP_STATS 需要启用LWIP_STATS；默认通过LWIP_ARP进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="IP_STATS" Comment="IP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="IP_STATS requires LWIP_STATS enaabled." 
        	              DiagnosticCH="启用IP_STATS 需要启用LWIP_STATS。" 
        	              Expression="LWIP_STATS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable IP stats." 
        	  	             NoteCH="启用IP统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="IP_STATS" Comment="IP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable IP stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP_STATS requires LWIP_STATS enabled." 
        	  	             NoteCH="关闭IP统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IP_STATS 需要启用LWIP_STATS。"/>
    </RefParameter>
    
    <RefParameter Name="IPFRAG_STATS" Comment="IPFRAG_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=IP_REASSEMBLY|IP_FRAG" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="IPFRAG_STATS requires LWIP_STATS enabled and is set by default with (IP_REASSEMBLY || IP_FRAG)." 
        	              DiagnosticCH="启用IPFRAG_STATS 需要启用LWIP_STATS ，默认通过 (IP_REASSEMBLY || IP_FRAG)进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; IP_REASSEMBLY=1 | IP_FRAG=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable IP fragmentation stats. Default is on if using either fragmentation or reassembly." 
        	  	             NoteCH="开启IP分片统计信息功能。如果使用分片或重组，则默认开启此选项。"/>
    </RefParameter>
    <RefParameter Name="IPFRAG_STATS" Comment="IPFRAG_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable IP fragmentation stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IPFRAG_STATS requires LWIP_STATS enabled and is set by default with (IP_REASSEMBLY || IP_FRAG)." 
        	  	             NoteCH="关闭IP分片统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IPFRAG_STATS 需要启用LWIP_STATS，默认通过 (IP_REASSEMBLY || IP_FRAG) 进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="ICMP_STATS" Comment="ICMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_ICMP" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="ICMP_STATS requires LWIP_STATS and is set by default with LWIP_ICMP." 
        	              DiagnosticCH="启用ICMP_STATS 需要启用LWIP_STATS，默认通过LWIP_ICMP进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_ICMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable ICMP stats." 
        	  	             NoteCH="开启ICMP统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="ICMP_STATS" Comment="ICMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable ICMP stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: ICMP_STATS requires LWIP_STATS and is set by default with LWIP_ICMP." 
        	  	             NoteCH="关闭ICMP统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用ICMP_STATS 需要启用LWIP_STATS，默认通过LWIP_ICMP进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="IGMP_STATS" Comment="IGMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_IGMP" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="IGMP_STATS requires LWIP_STATS enabled and is set by default with LWIP_IGMP." 
        	              DiagnosticCH="启用IGMP_STATS 需要设置LWIP_STATS，默认通过LWIP_IGMP进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IGMP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable IGMP stats." 
        	  	             NoteCH="开启IGMP统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="IGMP_STATS" Comment="IGMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable IGMP stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IGMP_STATS requires LWIP_STATS enabled and is set by default with LWIP_IGMP." 
        	  	             NoteCH="关闭IGMP统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IGMP_STATS 需要启用LWIP_STATS，默认通过LWIP_IGMP进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="UDP_STATS" Comment="UDP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_UDP" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="UDP_STATS requires LWIP_STATS enabled and is set by default with LWIP_UDP." 
        	              DiagnosticCH="启用UDP_STATS 需要启用LWIP_STATS，默认通过LWIP_UDP进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_UDP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable UDP stats." 
        	  	             NoteCH="开启UDP统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="UDP_STATS" Comment="UDP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable UDP stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: UDP_STATS requires LWIP_STATS enabled and is set by default with LWIP_UDP." 
        	  	             NoteCH="关闭UDP统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用UDP_STATS 需要启用LWIP_STATS，默认通过LWIP_UDP进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_STATS" Comment="TCP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_TCP" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="TCP_STATS requires LWIP_STATS enabled and is set by default with LWIP_TCP." 
        	              DiagnosticCH="启用TCP_STATS 需要启用LWIP_STATS，默认通过LWIP_TCP进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_TCP=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable TCP stats. Default is on if TCP enabled, otherwise off." 
        	  	             NoteCH="启用TCP统计信息功能。当TCP启用时，此功能默认开启；否则关闭。"/>
    </RefParameter>
    <RefParameter Name="TCP_STATS" Comment="TCP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable TCP stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: TCP_STATS requires LWIP_STATS enabled and is set by default with LWIP_TCP." 
        	  	             NoteCH="关闭TCP统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用TCP_STATS 需要启用LWIP_STATS，默认通过LWIP_TCP进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_STATS" Comment="MEM_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="MEM_STATS requires LWIP_STATS enabled and is set by default with (!MEM_LIBC_MALLOC &amp; !MEM_USE_POOLS)." 
        	              DiagnosticCH="启用MEM_STATS 需要启用LWIP_STATS，默认通过(!MEM_LIBC_MALLOC &amp; !MEM_USE_POOLS)进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; MEM_LIBC_MALLOC=0 &amp; MEM_USE_POOLS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable mem.c stats." 
        	  	             NoteCH="启用mem.c统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="MEM_STATS" Comment="MEM_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable Memory stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEM_STATS requires LWIP_STATS enabled and is set by default with (!MEM_LIBC_MALLOC &amp; !MEM_USE_POOLS)." 
        	  	             NoteCH="关闭内存统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEM_STATS 需要启用LWIP_STATS，默认通过(!MEM_LIBC_MALLOC &amp; !MEM_USE_POOLS)进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_STATS" Comment="MEMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="MEMP_STATS requires LWIP_STATS enabled and is set by default with !MEMP_MEM_MALLOC." 
        	              DiagnosticCH="启用MEMP_STATS 需要启用LWIP_STATS，默认通过!MEMP_MEM_MALLOC进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; MEMP_MEM_MALLOC=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable memp.c pool stats." 
        	  	             NoteCH="启用memp.c pool统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="MEMP_STATS" Comment="MEMP_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable Memory Pool stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MEMP_STATS requires LWIP_STATS enabled and is set by default with !MEMP_MEM_MALLOC." 
        	  	             NoteCH="关闭内存池统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MEMP_STATS 需要启用LWIP_STATS，默认通过!MEMP_MEM_MALLOC进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="SYS_STATS" Comment="SYS_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="SYS_STATS requires LWIP_STATS enabled and is set by default with !NO_SYS." 
        	              DiagnosticCH="启用SYS_STATS 需要启用LWIP_STATS，默认通过!NO_SYS进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; NO_SYS=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable system stats (sem and mbox counts, etc)." 
        	  	             NoteCH="启用系统统计信息功能（信号量和邮箱计数等）。"/>
    </RefParameter>
    <RefParameter Name="SYS_STATS" Comment="SYS_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable System stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: SYS_STATS requires LWIP_STATS enabled and is set by default with !NO_SYS." 
        	  	             NoteCH="关闭系统统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用SYS_STATS 需要启用LWIP_STATS，默认通过!NO_SYS进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="IP6_STATS" Comment="IP6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_IPV6" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="IP6_STATS requires LWIP_STATS enabled and is set by default with LWIP_IPV6." 
        	              DiagnosticCH="启用IP6_STATS 需要启用LWIP_STATS，默认通过LWIP_IPV6进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IPV6=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable IPv6 stats." 
        	  	             NoteCH="启用IPv6统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="IP6_STATS" Comment="IP6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable IPv6 stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP6_STATS requires LWIP_STATS enabled and is set by default with LWIP_IPV6." 
        	  	             NoteCH="关闭IPv6统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IP6_STATS 需要启用LWIP_STATS，默认通过LWIP_IPV6进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="ICMP6_STATS" Comment="ICMP6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="ICMP6_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6 &amp; LWIP_ICMP6)." 
        	              DiagnosticCH="启用ICMP6_STATS 需要启用LWIP_STATS，默认通过(LWIP_IPV6 &amp; LWIP_ICMP6)进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IPV6=1 &amp; LWIP_ICMP6=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable ICMP for IPv6 stats." 
        	  	             NoteCH="启用IPv6统计信息功能的ICMP。"/>
    </RefParameter>
    <RefParameter Name="ICMP6_STATS" Comment="ICMP6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable ICMP for IPv6 stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: ICMP6_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6 &amp; LWIP_ICMP6)." 
        	  	             NoteCH="关闭IPv6统计信息功能的ICMP。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用ICMP6_STATS 需要启用LWIP_STATS，默认通过(LWIP_IPV6 &amp; LWIP_ICMP6)进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="IP6_FRAG_STATS" Comment="IP6_FRAG_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="IP6_FRAG_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6_FRAG || LWIP_IPV6_REASS)." 
        	              DiagnosticCH="启用IP6_FRAG_STATS 需要启用LWIP_STATS，默认通过(LWIP_IPV6_FRAG || LWIP_IPV6_REASS)进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IPV6=1 &amp; LWIP_IPV6_FRAG=1 | LWIP_IPV6_REASS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable IPv6 fragmentation stats." 
        	  	             NoteCH="启用IPv6分片统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="IP6_FRAG_STATS" Comment="IP6_FRAG_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable IPv6 fragmentation stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: IP6_FRAG_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6_FRAG || LWIP_IPV6_REASS)." 
        	  	             NoteCH="关闭IPv6分片统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用IP6_FRAG_STATS 需要启用LWIP_STATS，默认通过(LWIP_IPV6_FRAG || LWIP_IPV6_REASS)进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="MLD6_STATS" Comment="MLD6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="1" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="MLD6_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6 &amp; LWIP_IPV6_MLD)." 
        	              DiagnosticCH="启用MLD6_STATS requires LWIP_STATS，默认通过(LWIP_IPV6 &amp; LWIP_IPV6_MLD)进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IPV6=1 &amp; LWIP_IPV6_MLD=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable MLD for IPv6 stats." 
        	  	             NoteCH="启用IPv6统计信息功能的MLD。"/>
    </RefParameter>
    <RefParameter Name="MLD6_STATS" Comment="MLD6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable MLD for IPv6 stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MLD6_STATS requires LWIP_STATS enabled and is set by default with (LWIP_IPV6 &amp; LWIP_IPV6_MLD)." 
        	  	             NoteCH="关闭IPv6统计信息功能的MLD。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MLD6_STATS 需要启用LWIP_STATS，默认通过(LWIP_IPV6 &amp; LWIP_IPV6_MLD)进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="ND6_STATS" Comment="ND6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=LWIP_IPV6" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced"  Reload="false">
        <Condition Diagnostic="ND6_STATS requires LWIP_STATS enabled and is set by default with LWIP_IPV6." 
        	              DiagnosticCH="启用ND6_STATS 需要启用LWIP_STATS，默认通过LWIP_IPV6进行设置。" 
        	              Expression="LWIP_STATS=1 &amp; LWIP_IPV6=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable Neighbor discovery for IPv6 stats." 
        	  	             NoteCH="启用IPv6统计信息功能的邻居发现（Neighbor discovery）。"/>
    </RefParameter>
    <RefParameter Name="ND6_STATS" Comment="ND6_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced" Reload="false" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable Neighbor discovery for IPv6 stats.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: ND6_STATS requires LWIP_STATS enabled and is set by default with LWIP_IPV6." 
        	  	             NoteCH="关闭IPv6统计信息功能的邻居发现（Neighbor discovery）。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用ND6_STATS 需要启用LWIP_STATS，默认通过LWIP_IPV6进行设置。"/>
    </RefParameter>
    
    <RefParameter Name="MIB2_STATS" Comment="MIB2_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="=SNMP_LWIP_MIB2" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced" >
        <Condition Diagnostic="MIB2_STATS requires LWIP_STATS enabled. MIB2_STATS is set by default with SNMP_LWIP_MIB2." 
        	              DiagnosticCH="启用MIB2_STATS 需要启用LWIP_STATS，默认通过SNMP_LWIP_MIB2进行设置。" 
        	              Expression="LWIP_STATS=1"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Enable or Disable SNMP MIB2 statistics." 
        	  	             NoteCH="启用或关闭SNMP MIB2统计信息功能。"/>
    </RefParameter>
    <RefParameter Name="MIB2_STATS" Comment="MIB2_STATS" Type="list" Group="Debug - Statistics Options" GroupCH="Debug - Statistics 选项" DefaultValue="0" TabName="Statistics" TabNameCH="Statistics" Mode="Advanced" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Disable SNMP MIB2 statistics.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: MIB2_STATS requires LWIP_STATS enabled, otherwise MIB2_STATS is disabled." 
        	  	             NoteCH="关闭SNMP MIB2统计信息功能。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 使用MIB2_STATS 需要启用LWIP_STATS；否则 MIB2_STATS关闭。"/>
    </RefParameter>
    
    <!-- *************************** Infrastructure - Checksum Options ******************************-->
    <RefParameter Name="CHECKSUM_BY_HARDWARE" Comment="CHECKSUM_BY_HARDWARE" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭" Condition="!EMAC_Hardware_Checksum_Enable" Action="Disable" Diagnostic="When &quot;Hardware Checksum&quot; in the EMAC is selected as &quot;Enable&quot;, this option is invalid." DiagnosticCH="当EMAC中&quot;硬件校验&quot;选择&quot;开启&quot;时，此项无效"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启" Condition="EMAC_Hardware_Checksum_Enable" Action="Disable" Diagnostic="When &quot;Hardware Checksum&quot; in the EMAC is selected as &quot;Disable&quot;, this option is invalid." DiagnosticCH="当EMAC中&quot;硬件校验&quot;选择&quot;关闭&quot;时，此项无效"/>
        <Annotation Note="Enabling Hardware Checksum will disable software checksum parameters and&lt;br&gt;allow to compute and verify the IP, UDP, TCP and ICMP checksums by Hardware.&lt;br&gt;&lt;b&gt;Warning&lt;/b&gt;: This parameter introduced by AT32 Work Bench is not part of LwIP stack." 
        	  	             NoteCH="启用硬件校验和，将禁用软件校验和参数，&lt;br&gt;并且允许通过硬件来计算和验证IP、UDP、TCP和ICMP。&lt;br&gt;&lt;b&gt;注意事项：&lt;/b&gt; 此参数由AT32 Work Bench引入，并非LwIP协议栈的一部分。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_CHECKSUM_CTRL_PER_NETIF" Comment="LWIP_CHECKSUM_CTRL_PER_NETIF" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic" >
        <Condition Diagnostic="Set LWIP_CHECKSUM_CTRL_PER_NETIF requires CHECKSUM_BY_HARDWARE disabled." 
        	              DiagnosticCH="设置LWIP_CHECKSUM_CTRL_PER_NETIF 需要禁用CHECKSUM_BY_HARDWARE。" 
        	              Expression="CHECKSUM_BY_HARDWARE=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Checksum generation/check can be enabled/disabled per netif.&lt;br&gt;ATTENTION: if enabled, the CHECKSUM_GEN_* and CHECKSUM_CHECK_* defines must be enabled!" 
        	  	             NoteCH="可以对每个netif启用/禁用校验和生成/检查。&lt;br&gt;注意：如果启用此选项，则必须启用CHECKSUM_GEN_* 和 CHECKSUM_CHECK_* 定义！"/>
    </RefParameter>    
    <RefParameter Name="LWIP_CHECKSUM_CTRL_PER_NETIF" Comment="LWIP_CHECKSUM_CTRL_PER_NETIF" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic" >
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <Annotation Note="Checksum generation/check can be enabled/disabled per netif.&lt;br&gt;ATTENTION: if enabled, the CHECKSUM_GEN_* and CHECKSUM_CHECK_* defines must be enabled!&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set LWIP_CHECKSUM_CTRL_PER_NETIF requires CHECKSUM_BY_HARDWARE disabled." 
        	  	             NoteCH="可以对每个netif启用/禁用校验和生成/检查。&lt;br&gt;注意：如果启用此选项，则必须启用CHECKSUM_GEN_* 和 CHECKSUM_CHECK_* 定义！&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置LWIP_CHECKSUM_CTRL_PER_NETIF 需要禁用CHECKSUM_BY_HARDWARE。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_GEN_IP" Comment="CHECKSUM_GEN_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_GEN_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_GEN_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_IP。" 
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing IP packets." 
        	  	             NoteCH="在软件中生成传出IP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_IP" Comment="CHECKSUM_GEN_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing IP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出IP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_IP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_IP" Comment="CHECKSUM_GEN_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing IP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出IP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_IP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_GEN_UDP" Comment="CHECKSUM_GEN_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic" Reload="false" >
        <Condition Diagnostic="Set CHECKSUM_GEN_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_GEN_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_UDP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing UDP packets." 
        	  	             NoteCH="在软件中生成传出UDP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_UDP" Comment="CHECKSUM_GEN_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing UDP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出UDP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_UDP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_UDP" Comment="CHECKSUM_GEN_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing UDP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出UDP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_UDP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_GEN_TCP" Comment="CHECKSUM_GEN_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_GEN_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_GEN_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_TCP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing TCP packets." 
        	  	             NoteCH="在软件中生成传出TCP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_TCP" Comment="CHECKSUM_GEN_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing TCP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出TCP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_TCP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_TCP" Comment="CHECKSUM_GEN_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing TCP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出TCP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_TCP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_GEN_ICMP" Comment="CHECKSUM_GEN_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_GEN_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_GEN_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP packets." 
        	  	             NoteCH="在软件中生成传出ICMP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_ICMP" Comment="CHECKSUM_GEN_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出ICMP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_ICMP" Comment="CHECKSUM_GEN_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出ICMP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_GEN_ICMP6" Comment="CHECKSUM_GEN_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_GEN_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_GEN_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP6。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP6 packets." 
        	  	             NoteCH="在软件中生成传出ICMP6数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_ICMP6" Comment="CHECKSUM_GEN_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP6 packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出ICMP6数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP6。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_GEN_ICMP6" Comment="CHECKSUM_GEN_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Generate checksums in software for outgoing ICMP6 packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_GEN_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_GEN_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中生成传出ICMP6数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_GEN_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_GEN_ICMP6。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_CHECK_IP" Comment="CHECKSUM_CHECK_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_CHECK_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_CHECK_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_IP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming IP packets." 
        	  	             NoteCH="在软件中检查传入IP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_IP" Comment="CHECKSUM_CHECK_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming IP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入IP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_IP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_IP" Comment="CHECKSUM_CHECK_IP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming IP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_IP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_IP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入IP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_IP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_IP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_CHECK_UDP" Comment="CHECKSUM_CHECK_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_CHECK_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_CHECK_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_UDP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming UDP packets." 
        	  	             NoteCH="在软件中检查传入UDP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_UDP" Comment="CHECKSUM_CHECK_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming UDP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入UDP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_UDP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_UDP" Comment="CHECKSUM_CHECK_UDP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming UDP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_UDP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_UDP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入UDP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_UDP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_UDP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_CHECK_TCP" Comment="CHECKSUM_CHECK_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_CHECK_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_CHECK_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_TCP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming TCP packets." 
        	  	             NoteCH="在软件中检查传入TCP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_TCP" Comment="CHECKSUM_CHECK_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming TCP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入TCP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_TCP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_TCP" Comment="CHECKSUM_CHECK_TCP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming TCP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_TCP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_TCP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入TCP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_TCP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_TCP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_CHECK_ICMP" Comment="CHECKSUM_CHECK_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_CHECK_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_CHECK_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP packets." 
        	  	             NoteCH="在软件中检查传入ICMP数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_ICMP" Comment="CHECKSUM_CHECK_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入ICMP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_ICMP" Comment="CHECKSUM_CHECK_ICMP" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_ICMP requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入ICMP数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_ICMP 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP。"/>
    </RefParameter>
    
    <RefParameter Name="CHECKSUM_CHECK_ICMP6" Comment="CHECKSUM_CHECK_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Diagnostic="Set CHECKSUM_CHECK_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	              DiagnosticCH="设置CHECKSUM_CHECK_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP6。"
        	              Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=1"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP6 packets." 
        	  	             NoteCH="在软件中检查传入ICMP6数据包校验和。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_ICMP6" Comment="CHECKSUM_CHECK_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="1" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <Condition Expression="CHECKSUM_BY_HARDWARE=0 &amp; LWIP_CHECKSUM_CTRL_PER_NETIF=0"/>
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP6 packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入ICMP6数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP6。"/>
    </RefParameter>
    <RefParameter Name="CHECKSUM_CHECK_ICMP6" Comment="CHECKSUM_CHECK_ICMP6" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Basic"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Check checksums in software for Incoming ICMP6 packets.&lt;br&gt;&lt;b&gt;Dependency&lt;/b&gt;: Set CHECKSUM_CHECK_ICMP6 requires CHECKSUM_BY_HARDWARE disabled. CHECKSUM_CHECK_ICMP6 is enabled if LWIP_CHECKSUM_CTRL_PER_NETIF is enabled." 
        	  	             NoteCH="在软件中检查传入ICMP6数据包校验和。&lt;br&gt;&lt;b&gt;依赖条件：&lt;/b&gt; 设置CHECKSUM_CHECK_ICMP6 需要禁用CHECKSUM_BY_HARDWARE。如果启用了LWIP_CHECKSUM_CTRL_PER_NETIF，则启用CHECKSUM_CHECK_ICMP6。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_CHECKSUM_ON_COPY" Comment="LWIP_CHECKSUM_ON_COPY" Type="list" Group="Infrastructure - Checksum Options" GroupCH="基础配置 - Checksum 选项" DefaultValue="0" TabName="Checksum" TabNameCH="Checksum" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" Value="0" CommentCH="关闭"/>
        <PossibleValue Comment="Enabled" Value="1" CommentCH="开启"/>
        <Annotation Note="Calculate checksum when copying data from application buffers to pbufs." 
        	  	             NoteCH="将数据从应用程序缓冲区复制到pbuf时计算校验和。"/>
    </RefParameter>
    
    <!-- *************************** Debug Options ******************************-->
    <RefParameter Name="LWIP_DBG_ON" Comment="LWIP_DBG_ON" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="0x80U" TabName="Debug" TabNameCH="Debug" Mode="Advanced" Visible="false"  Reload="false">
        <PossibleValue Comment="On" Value="0x80U"/>
        <Annotation Note="" 
        	  	             NoteCH=""/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DBG_OFF" Comment="LWIP_DBG_OFF" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="0x00U" TabName="Debug" TabNameCH="Debug" Mode="Advanced" Visible="false" Reload="false">
        <PossibleValue Comment="On" Value="0x00U"/>
        <Annotation Note="" 
        	  	             NoteCH=""/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DBG_MIN_LEVEL" Comment="LWIP_DBG_MIN_LEVEL" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_LEVEL_ALL" TabName="Debug" TabNameCH="Debug" Mode="Basic"  Reload="false">
        <PossibleValue Comment="All"          CommentCH="All"          Value="LWIP_DBG_LEVEL_ALL"/>
        <PossibleValue Comment="Warning" CommentCH="Warning" Value="LWIP_DBG_LEVEL_WARNING"/>
        <PossibleValue Comment="Serious"   CommentCH="Serious"   Value="LWIP_DBG_LEVEL_SERIOUS"/>
        <PossibleValue Comment="Severe"    CommentCH="Severe"    Value="LWIP_DBG_LEVEL_SEVERE"/>
        <PossibleValue Comment="Mask"      CommentCH="Mask"      Value="LWIP_DBG_MASK_LEVEL"/>
        <Annotation Note="Lower two bits indicate debug level:&lt;br&gt;- 0: all&lt;br&gt;- 1: warning&lt;br&gt;- 2: serious&lt;br&gt;- 3: severe&lt;br&gt;- 4: Mask.&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt;All other debugging options are visible as &quot;Advanced Parameters&quot;." 
        	  	             NoteCH="低两位表示调试级别：&lt;br&gt;- 0：全部&lt;br&gt;- 1：警告&lt;br&gt;- 2：严重&lt;br&gt;- 3：极其严重&lt;br&gt;- 4：掩码&lt;br&gt;&lt;b&gt;注意：&lt;/b&gt;其他所有调试选项均显示为&quot;高级参数&quot;。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_DBG_TYPES_ON" Comment="LWIP_DBG_TYPES_ON" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_ON" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Mask that can be used to globally enable/disable debug messages of certain types." 
        	  	             NoteCH="可用于全局启用/禁用某些类型的调试消息的掩码。"/>
    </RefParameter>
    
    <RefParameter Name="ETHARP_DEBUG" Comment="ETHARP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in etharp.c." 
        	  	             NoteCH="在 etharp.c 文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="NETIF_DEBUG" Comment="NETIF_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in netif.c." 
        	  	             NoteCH="在netif.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="PBUF_DEBUG" Comment="PBUF_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in pbuf.c." 
        	  	             NoteCH="在pbuf.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="API_LIB_DEBUG" Comment="API_LIB_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in api_lib.c." 
        	  	             NoteCH="在api_lib.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="API_MSG_DEBUG" Comment="API_MSG_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in api_msg.c." 
        	  	             NoteCH="在api_msg.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SOCKETS_DEBUG" Comment="SOCKETS_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in sockets.c." 
        	  	             NoteCH="在sockets.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="ICMP_DEBUG" Comment="ICMP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in icmp.c." 
        	  	             NoteCH="在icmp.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="IGMP_DEBUG" Comment="IGMP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in igmp.c." 
        	  	             NoteCH="在igmp.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="INET_DEBUG" Comment="INET_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in inet.c." 
        	  	             NoteCH="在inet.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="IP_DEBUG" Comment="IP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for IP." 
        	  	             NoteCH="针对IP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="IP_REASS_DEBUG" Comment="IP_REASS_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in ip_frag.c for both frag and reass." 
        	  	             NoteCH="在 ip_frag.c文件中针对分片和重组启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="RAW_DEBUG" Comment="RAW_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in raw.c." 
        	  	             NoteCH="在raw.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="MEM_DEBUG" Comment="MEM_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in mem.c." 
        	  	             NoteCH="在mem.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="MEMP_DEBUG" Comment="MEMP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in memp.c." 
        	  	             NoteCH="在memp.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SYS_DEBUG" Comment="SYS_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in sys.c." 
        	  	             NoteCH="在sys.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TIMERS_DEBUG" Comment="TIMERS_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in timers.c." 
        	  	             NoteCH="在timers.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_DEBUG" Comment="TCP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for TCP." 
        	  	             NoteCH="启用TCP的调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_INPUT_DEBUG" Comment="TCP_INPUT_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in tcp_in.c for incoming debug." 
        	  	             NoteCH="在tcp_in.c文件中启用针对传入数据的调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_FR_DEBUG" Comment="TCP_FR_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in tcp_in.c for fast retransmit." 
        	  	             NoteCH="在tcp_in.c文件中启用针对快速重传的调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_RTO_DEBUG" Comment="TCP_RTO_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in TCP for retransmit." 
        	  	             NoteCH="启用TCP中重传相关调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_CWND_DEBUG" Comment="TCP_CWND_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for TCP congestion window." 
        	  	             NoteCH="启用TCP拥塞窗口的调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_WND_DEBUG" Comment="TCP_WND_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in tcp_in.c for window updating." 
        	  	             NoteCH="在tcp_in.c文件中启用窗口更新的调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_OUTPUT_DEBUG" Comment="TCP_OUTPUT_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in tcp_out.c output functions." 
        	  	             NoteCH="在tcp_out.c文件的输出函数中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_RST_DEBUG" Comment="TCP_RST_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for TCP with the RST message." 
        	  	             NoteCH="对带有RST消息的TCP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCP_QLEN_DEBUG" Comment="TCP_QLEN_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for TCP queue lengths." 
        	  	             NoteCH="对TCP队列长度启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="UDP_DEBUG" Comment="UDP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in UDP." 
        	  	             NoteCH="在UDP中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TCPIP_DEBUG" Comment="TCPIP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in tcpip.c." 
        	  	             NoteCH="在tcpip.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SLIP_DEBUG" Comment="SLIP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in slipif.c." 
        	  	             NoteCH="在slipif.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="DHCP_DEBUG" Comment="DHCP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in dhcp.c." 
        	  	             NoteCH="在dhcp.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="AUTOIP_DEBUG" Comment="AUTOIP_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in autoip.c." 
        	  	             NoteCH="在autoip.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="DNS_DEBUG" Comment="DNS_DEBUG" Type="list" Group="LwIP Main Debugging Options" GroupCH="LwIP Main 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for DNS." 
        	  	             NoteCH="对DNS启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="PPP_DEBUG" Comment="PPP_DEBUG" Type="list" Group="LwIP - PPP Debugging Option" GroupCH="LwIP - PPP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for PPP." 
        	  	             NoteCH="对PPP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="IP6_DEBUG" Comment="IP6_DEBUG" Type="list" Group="LwIP - IPv6 Debugging Option" GroupCH="LwIP - IPv6 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for SNMP IPv6." 
        	  	             NoteCH="对SNMP IPv6启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="DHCP6_DEBUG" Comment="DHCP6_DEBUG" Type="list" Group="LwIP - IPv6 Debugging Option" GroupCH="LwIP - IPv6 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging in dhcp6.c." 
        	  	             NoteCH="在dhcp6.c文件中启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_DEBUG" Comment="HTTPD_DEBUG" Type="list" Group="LwIP - HTTPD Debugging Options" GroupCH="LwIP - HTTPD 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Set this to &quot;Enabled&quot; if you want to activate HTTP debug." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，激活HTTP调试。"/>
    </RefParameter>
    
    <RefParameter Name="HTTPD_DEBUG_TIMING" Comment="HTTPD_DEBUG_TIMING" Type="list" Group="LwIP - HTTPD Debugging Options" GroupCH="LwIP - HTTPD 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Set this to &quot;Enabled&quot; if you want to activate HTTP debug timing." 
        	  	             NoteCH="将此参数设置为&quot;开启&quot;，激活HTTP调试定时。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_DEBUG" Comment="SNMP_DEBUG" Type="list" Group="LwIP - SNMP Debugging Options" GroupCH="LwIP - SNMP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for SNMP messages." 
        	  	             NoteCH="对SNMP消息开启调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SNMP_MIB_DEBUG" Comment="SNMP_MIB_DEBUG" Type="list" Group="LwIP - SNMP Debugging Options" GroupCH="LwIP - SNMP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for SNMP MIBs." 
        	  	             NoteCH="对SNMP MIBs启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SNTP_DEBUG" Comment="SNTP_DEBUG" Type="list" Group="LwIP - SNTP Debugging Option" GroupCH="LwIP - SNTP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for SNTP." 
        	  	             NoteCH="对SNTP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="SMTP_DEBUG" Comment="SMTP_DEBUG" Type="list" Group="LwIP - SMTP Debugging Option" GroupCH="LwIP - SMTP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for SMTP." 
        	  	             NoteCH="对SMTP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="MDNS_DEBUG" Comment="MDNS_DEBUG" Type="list" Group="LwIP - MDNS Debugging Option"  GroupCH="LwIP - MDNS 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for MDNS." 
        	  	             NoteCH="对MDNS启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="TFTP_DEBUG" Comment="TFTP_DEBUG" Type="list" Group="LwIP - TFTP Debugging Option" GroupCH="LwIP - TFTP 调试选项" DefaultValue="LWIP_DBG_OFF" TabName="Debug" TabNameCH="Debug" Mode="Advanced"  Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="LWIP_DBG_OFF"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="LWIP_DBG_ON"/>
        <Annotation Note="Enable debugging for TFTP." 
        	  	             NoteCH="对TFTP启用调试功能。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_PROVIDE_ERRNO" Comment="LWIP_PROVIDE_ERRNO" Type="list" Group="Not Visible Options" DefaultValue="1" TabName="Debug" TabNameCH="Debug" Mode="Advanced" Visible="false" Reload="false">
        <Annotation Note="Enable LwIP errors numbers handling" 
        	  	             NoteCH="开启‌LwIP错误号处理。"/>
    </RefParameter>
    
    <RefParameter Name="LWIP_TESTMODE" Comment="LWIP_TESTMODE" Type="list" Group="LwIP - IPv6 Debugging Option" GroupCH="LwIP - IPv6 调试选项" DefaultValue="0" TabName="Debug" TabNameCH="Debug" Mode="Advanced" Reload="false">
        <PossibleValue Comment="Disabled" CommentCH="关闭" Value="0"/>
        <PossibleValue Comment="Enabled" CommentCH="开启" Value="1"/>
        <Annotation Note="Changes to make unit test possible." 
        	  	             NoteCH="为实现单元测试所做的更改。"/>
    </RefParameter>

    <RefMode Name="Enabled" Abstract="true">
        <ConfigForMode>LWIP_Init</ConfigForMode>
        <Parameter Name="LwIP Version"/>
        <Parameter Name="LWIP_DHCP"/>
        <Parameter Name="IP_ADDRESS"/>
        <Parameter Name="NETMASK_ADDRESS"/>
        <Parameter Name="GATEWAY_ADDRESS"/>
        <Parameter Name="WITH_RTOS"/>
        <Parameter Name="WITH_MBEDTLS"/>
        <Parameter Name="CMSIS_VERSION"/>
        <Parameter Name="PHY Driver"/>
        <Parameter Name="LWIP_ICMP"/>
        <Parameter Name="LWIP_IGMP"/>
        <Parameter Name="LWIP_DNS"/>
        <Parameter Name="LWIP_UDP"/>
        <Parameter Name="MEMP_NUM_UDP_PCB"/>
        <Parameter Name="LWIP_TCP"/>
        <Parameter Name="MEMP_NUM_TCP_PCB"/>
        <Parameter Name="NO_SYS"/>
        <Parameter Name="LWIP_TIMERS"/>
        <Parameter Name="LWIP_TIMERS_CUSTOM"/>
        <Parameter Name="MEMCPY(dst,src,len)"/>
        <Parameter Name="SMEMCPY(dst,src,len)"/>
        <Parameter Name="MEMMOVE(dst,src,len)"/>
        <Parameter Name="LWIP_MPU_COMPATIBLE"/>
        <Parameter Name="LWIP_TCPIP_CORE_LOCKING"/>
        <Parameter Name="LWIP_TCPIP_CORE_LOCKING_INPUT"/>
        <Parameter Name="SYS_LIGHTWEIGHT_PROT"/>
        <Parameter Name="MEM_LIBC_MALLOC"/>
        <Parameter Name="MEMP_MEM_MALLOC"/>
        <Parameter Name="MEMP_MEM_INIT"/>
        <Parameter Name="MEM_ALIGNMENT"/>
        <Parameter Name="MEM_SIZE"/>
        <Parameter Name="MEMP_OVERFLOW_CHECK"/>
        <Parameter Name="MEMP_SANITY_CHECK"/>
        <Parameter Name="MEM_OVERFLOW_CHECK"/>
        <Parameter Name="MEM_SANITY_CHECK"/>
        <Parameter Name="MEM_USE_POOLS"/>
        <Parameter Name="MEM_USE_POOLS_TRY_BIGGER_POOL"/>
        <Parameter Name="MEMP_USE_CUSTOM_POOLS"/>
        <Parameter Name="LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT"/>
        <Parameter Name="LWIP_RAM_HEAP_POINTER"/>
        <Parameter Name="MEMP_NUM_PBUF"/>
        <Parameter Name="MEMP_NUM_RAW_PCB"/>
        <Parameter Name="MEMP_NUM_TCP_PCB_LISTEN"/>
        <Parameter Name="MEMP_NUM_TCP_SEG"/>
        <Parameter Name="MEMP_NUM_ALTCP_PCB"/>
        <Parameter Name="MEMP_NUM_REASSDATA"/>
        <Parameter Name="MEMP_NUM_FRAG_PBUF"/>
        <Parameter Name="MEMP_NUM_ARP_QUEUE"/>
        <Parameter Name="MEMP_NUM_IGMP_GROUP"/>
        <Parameter Name="MEMP_NUM_SYS_TIMEOUT"/>
        <Parameter Name="MEMP_NUM_NETBUF"/>
        <Parameter Name="MEMP_NUM_NETCONN"/>
        <Parameter Name="MEMP_NUM_TCPIP_MSG_API"/>
        <Parameter Name="MEMP_NUM_SELECT_CB"/>
        <Parameter Name="MEMP_NUM_TCPIP_MSG_INPKT"/>
        <Parameter Name="MEMP_NUM_NETDB"/>
        <Parameter Name="MEMP_NUM_LOCALHOSTLIST"/>
        <Parameter Name="MEMP_NUM_API_MSG"/>
        <Parameter Name="MEMP_NUM_DNS_API_MSG"/>
        <Parameter Name="MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA"/>
        <Parameter Name="MEMP_NUM_NETIFAPI_MSG"/>
        <Parameter Name="LWIP_SUPPORT_CUSTOM_PBUF"/>
        <Parameter Name="PBUF_POOL_SIZE"/>
        <Parameter Name="PBUF_LINK_HLEN"/>
        <Parameter Name="PBUF_LINK_ENCAPSULATION_HLEN"/>
        <Parameter Name="PBUF_POOL_BUFSIZE"/>
        <Parameter Name="LWIP_PBUF_REF_T"/>
        <Parameter Name="PBUF_IP_HLEN"/>
        <Parameter Name="PBUF_TRANSPORT_HLEN"/>
        <Parameter Name="LWIP_ARP"/>
        <Parameter Name="ARP_TABLE_SIZE"/>
        <Parameter Name="ARP_MAXAGE"/>
        <Parameter Name="ARP_QUEUEING"/>
        <Parameter Name="ARP_QUEUE_LEN"/>
        <Parameter Name="ETHARP_SUPPORT_VLAN"/>
        <Parameter Name="LWIP_ETHERNET"/>
        <Parameter Name="ETH_PAD_SIZE"/>
        <Parameter Name="ETHARP_SUPPORT_STATIC_ENTRIES"/>
        <Parameter Name="ETHARP_TABLE_MATCH_NETIF"/>
        <Parameter Name="LWIP_IPV4"/>
        <Parameter Name="IP_FORWARD"/>
        <Parameter Name="IP_OPTIONS_ALLOWED"/>
        <Parameter Name="IP_REASSEMBLY"/>
        <Parameter Name="IP_FRAG"/>
        <Parameter Name="IP_REASS_MAXAGE"/>
        <Parameter Name="IP_REASS_MAX_PBUFS"/>
        <Parameter Name="IP_DEFAULT_TTL"/>
        <Parameter Name="IP_SOF_BROADCAST"/>
        <Parameter Name="IP_SOF_BROADCAST_RECV"/>
        <Parameter Name="IP_FORWARD_ALLOW_TX_ON_RX_NETIF"/>
        <Parameter Name="ICMP_TTL"/>
        <Parameter Name="LWIP_BROADCAST_PING"/>
        <Parameter Name="LWIP_MULTICAST_PING"/>
        <Parameter Name="LWIP_MULTICAST_TX_OPTIONS"/>
        <Parameter Name="LWIP_RAW"/>
        <Parameter Name="RAW_TTL"/>
        <Parameter Name="DHCP_DOES_ARP_CHECK"/>
        <Parameter Name="LWIP_DHCP_BOOTP_FILE"/>
        <Parameter Name="LWIP_DHCP_GET_NTP_SRV"/>
        <Parameter Name="LWIP_DHCP_MAX_NTP_SERVERS"/>
        <Parameter Name="LWIP_DHCP_MAX_DNS_SERVERS"/>
        <Parameter Name="LWIP_AUTOIP"/>
        <Parameter Name="LWIP_DHCP_AUTOIP_COOP"/>
        <Parameter Name="LWIP_DHCP_AUTOIP_COOP_TRIES"/>
        <Parameter Name="LWIP_MIB2_CALLBACKS"/>
        <Parameter Name="DNS_TABLE_SIZE"/>
        <Parameter Name="DNS_MAX_NAME_LENGTH"/>
        <Parameter Name="DNS_MAX_SERVERS"/>
        <Parameter Name="DNS_MAX_RETRIES"/>
        <Parameter Name="DNS_DOES_NAME_CHECK"/>
        <Parameter Name="LWIP_DNS_SECURE"/>
        <Parameter Name="LWIP_DNS_SECURE_RAND_XID"/>
        <Parameter Name="LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING"/>
        <Parameter Name="LWIP_DNS_SECURE_RAND_SRC_PORT"/>
        <Parameter Name="DNS_LOCAL_HOSTLIST"/>
        <Parameter Name="DNS_LOCAL_HOSTLIST_IS_DYNAMIC"/>
        <Parameter Name="LWIP_DNS_SUPPORT_MDNS_QUERIES"/>
        <Parameter Name="LWIP_UDPLITE"/>
        <Parameter Name="UDP_TTL"/>
        <Parameter Name="LWIP_NETBUF_RECVINFO"/>
        <Parameter Name="TCP_TTL"/>
        <Parameter Name="TCP_WND"/>
        <Parameter Name="TCP_MAXRTX"/>
        <Parameter Name="TCP_SYNMAXRTX"/>
        <Parameter Name="TCP_QUEUE_OOSEQ"/>
        <Parameter Name="LWIP_TCP_SACK_OUT"/>
        <Parameter Name="LWIP_TCP_MAX_SACK_NUM"/>
        <Parameter Name="TCP_MSS"/>
        <Parameter Name="TCP_CALCULATE_EFF_SEND_MSS"/>
        <Parameter Name="TCP_SND_BUF"/>
        <Parameter Name="TCP_SND_QUEUELEN"/>
        <Parameter Name="TCP_SNDLOWAT"/>
        <Parameter Name="TCP_SNDQUEUELOWAT"/>
        <Parameter Name="TCP_OOSEQ_MAX_BYTES"/>
        <Parameter Name="TCP_OOSEQ_BYTES_LIMIT(pcb)"/>
        <Parameter Name="TCP_OOSEQ_MAX_PBUFS"/>
        <Parameter Name="TCP_OOSEQ_PBUFS_LIMIT(pcb)"/>
        <Parameter Name="TCP_LISTEN_BACKLOG"/>
        <Parameter Name="TCP_DEFAULT_LISTEN_BACKLOG"/>
        <Parameter Name="TCP_OVERSIZE"/>
        <Parameter Name="LWIP_TCP_TIMESTAMPS"/>
        <Parameter Name="TCP_WND_UPDATE_THRESHOLD"/>
        <Parameter Name="LWIP_EVENT_API"/>
        <Parameter Name="LWIP_CALLBACK_API"/>
        <Parameter Name="LWIP_WND_SCALE"/>
        <Parameter Name="TCP_RCV_SCALE"/>
        <Parameter Name="LWIP_TCP_PCB_NUM_EXT_ARGS"/>
        <Parameter Name="LWIP_ALTCP"/>
        <Parameter Name="LWIP_ALTCP_TLS"/>
        <Parameter Name="LWIP_SINGLE_NETIF"/>
        <Parameter Name="LWIP_NETIF_HOSTNAME"/>
        <Parameter Name="LWIP_NETIF_API"/>
        <Parameter Name="LWIP_NETIF_STATUS_CALLBACK"/>
        <Parameter Name="LWIP_NETIF_EXT_STATUS_CALLBACK"/>
        <Parameter Name="LWIP_NETIF_LINK_CALLBACK"/>
        <Parameter Name="LWIP_NETIF_REMOVE_CALLBACK"/>
        <Parameter Name="LWIP_NETIF_HWADDRHINT"/>
        <Parameter Name="LWIP_NETIF_TX_SINGLE_PBUF"/>
        <Parameter Name="LWIP_NUM_NETIF_CLIENT_DATA"/>
        <Parameter Name="LWIP_HAVE_LOOPIF"/>
        <Parameter Name="LWIP_LOOPIF_MULTICAST"/>
        <Parameter Name="LWIP_NETIF_LOOPBACK"/>
        <Parameter Name="LWIP_LOOPBACK_MAX_PBUFS"/>
        <Parameter Name="LWIP_NETIF_LOOPBACK_MULTITHREADING"/>
        <Parameter Name="TCPIP_THREAD_NAME"/>
        <Parameter Name="TCPIP_THREAD_STACKSIZE"/>
        <Parameter Name="TCPIP_THREAD_PRIO"/>
        <Parameter Name="TCPIP_MBOX_SIZE"/>
        <Parameter Name="SLIPIF_THREAD_NAME"/>
        <Parameter Name="SLIPIF_THREAD_STACKSIZE"/>
        <Parameter Name="SLIPIF_THREAD_PRIO"/>
        <Parameter Name="DEFAULT_THREAD_NAME"/>
        <Parameter Name="DEFAULT_THREAD_STACKSIZE"/>
        <Parameter Name="DEFAULT_THREAD_PRIO"/>
        <Parameter Name="DEFAULT_RAW_RECVMBOX_SIZE"/>
        <Parameter Name="DEFAULT_UDP_RECVMBOX_SIZE"/>
        <Parameter Name="DEFAULT_TCP_RECVMBOX_SIZE"/>
        <Parameter Name="DEFAULT_ACCEPTMBOX_SIZE"/>
        <Parameter Name="LWIP_NETCONN"/>
        <Parameter Name="LWIP_TCPIP_TIMEOUT"/>
        <Parameter Name="LWIP_NETCONN_SEM_PER_THREAD"/>
        <Parameter Name="LWIP_NETCONN_FULLDUPLEX"/>
        <Parameter Name="LWIP_SOCKET"/>
        <Parameter Name="LWIP_COMPAT_SOCKETS"/>
        <Parameter Name="LWIP_POSIX_SOCKETS_IO_NAMES"/>
        <Parameter Name="LWIP_SOCKET_OFFSET"/>
        <Parameter Name="LWIP_TCP_KEEPALIVE"/>
        <Parameter Name="LWIP_SO_SNDTIMEO"/>
        <Parameter Name="LWIP_SO_RCVTIMEO"/>
        <Parameter Name="LWIP_SO_SNDRCVTIMEO_NONSTANDARD"/>
        <Parameter Name="LWIP_SO_RCVBUF"/>
        <Parameter Name="LWIP_SO_LINGER"/>
        <Parameter Name="RECV_BUFSIZE_DEFAULT"/>
        <Parameter Name="LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT"/>
        <Parameter Name="SO_REUSE"/>
        <Parameter Name="SO_REUSE_RXTOALL"/>
        <Parameter Name="LWIP_FIONREAD_LINUXMODE"/>
        <Parameter Name="LWIP_SOCKET_SELECT"/>
        <Parameter Name="LWIP_SOCKET_POLL"/>
		<!-->
        <Parameter Name="LWIP_USE_EXTERNAL_POLARSSL"/>
        <Parameter Name="LWIP_USE_EXTERNAL_MBEDTLS"/>
        <Parameter Name="LWIP_INCLUDED_POLARSSL_MD5"/>
        <Parameter Name="LWIP_INCLUDED_POLARSSL_MD4"/>
        <Parameter Name="LWIP_INCLUDED_POLARSSL_SHA1"/>
        <Parameter Name="LWIP_INCLUDED_POLARSSL_DES"/>
        <Parameter Name="LWIP_INCLUDED_POLARSSL_ARC4"/>
		<-->
        <Parameter Name="PPP_SUPPORT"/>
        <Parameter Name="PPPOE_SUPPORT"/>
        <Parameter Name="PPPOL2TP_SUPPORT"/>
        <Parameter Name="PPPOL2TP_AUTH_SUPPORT"/>
        <Parameter Name="PPPOS_SUPPORT"/>
        <Parameter Name="LWIP_PPP_API"/>
        <Parameter Name="MEMP_NUM_PPP_PCB"/>
        <Parameter Name="PPP_NUM_TIMEOUTS_PER_PCB"/>
        <Parameter Name="MEMP_NUM_PPPOS_INTERFACES"/>
        <Parameter Name="MEMP_NUM_PPPOE_INTERFACES"/>
        <Parameter Name="MEMP_NUM_PPPOL2TP_INTERFACES"/>
        <Parameter Name="MEMP_NUM_PPP_API_MSG"/>
        <Parameter Name="PPP_INPROC_IRQ_SAFE"/>
        <Parameter Name="PRINTPKT_SUPPORT"/>
        <Parameter Name="PPP_IPV4_SUPPORT"/>
        <Parameter Name="PPP_IPV6_SUPPORT"/>
        <Parameter Name="PPP_NOTIFY_PHASE"/>
        <Parameter Name="PPP_USE_PBUF_RAM"/>
        <Parameter Name="PPP_FCS_TABLE"/>
        <Parameter Name="PAP_SUPPORT"/>
        <Parameter Name="CHAP_SUPPORT"/>
        <Parameter Name="MSCHAP_SUPPORT"/>
        <Parameter Name="EAP_SUPPORT"/>
        <Parameter Name="CCP_SUPPORT"/>
        <Parameter Name="MPPE_SUPPORT"/>
        <Parameter Name="CBCP_SUPPORT"/>
        <Parameter Name="ECP_SUPPORT"/>
        <Parameter Name="DEMAND_SUPPORT"/>
        <Parameter Name="LQR_SUPPORT"/>
        <Parameter Name="PPP_SERVER"/>
        <Parameter Name="PPP_OUR_NAME"/>
        <Parameter Name="VJ_SUPPORT"/>
        <Parameter Name="PPP_MD5_RANDM"/>
        <Parameter Name="FSM_DEFTIMEOUT"/>
        <Parameter Name="FSM_DEFMAXTERMREQS"/>
        <Parameter Name="FSM_DEFMAXCONFREQS"/>
        <Parameter Name="FSM_DEFMAXNAKLOOPS"/>
        <Parameter Name="UPAP_DEFTIMEOUT"/>
        <Parameter Name="UPAP_DEFTRANSMITS"/>
        <Parameter Name="UPAP_DEFREQTIME"/>
        <Parameter Name="CHAP_DEFTIMEOUT"/>
        <Parameter Name="CHAP_DEFTRANSMITS"/>
        <Parameter Name="CHAP_DEFRECHALLENGETIME"/>
        <Parameter Name="EAP_DEFREQTIME"/>
        <Parameter Name="EAP_DEFALLOWREQ"/>
        <Parameter Name="EAP_DEFTIMEOUT"/>
        <Parameter Name="EAP_DEFTRANSMITS"/>
        <Parameter Name="LCP_DEFLOOPBACKFAIL"/>
        <Parameter Name="LCP_ECHOINTERVAL"/>
        <Parameter Name="LCP_MAXECHOFAILS"/>
        <Parameter Name="PPP_MAXIDLEFLAG"/>
        <Parameter Name="PPP_MRU"/>
        <Parameter Name="PPP_DEFMRU"/>
        <Parameter Name="PPP_MAXMRU"/>
        <Parameter Name="PPP_MINMRU"/>
        <Parameter Name="PPP_NUM_TIMEOUTS"/>
        <Parameter Name="PPPOL2TP_DEFMRU"/>
        <Parameter Name="MAXNAMELEN"/>
        <Parameter Name="MAXSECRETLEN"/>
        <Parameter Name="LWIP_IPV6"/>
        <Parameter Name="IPV6_REASS_MAXAGE"/>
        <Parameter Name="LWIP_IPV6_SCOPES"/>
        <Parameter Name="LWIP_IPV6_SCOPES_DEBUG"/>
        <Parameter Name="LWIP_IPV6_NUM_ADDRESSES"/>
        <Parameter Name="LWIP_IPV6_FORWARD"/>
        <Parameter Name="LWIP_IPV6_FRAG"/>
        <Parameter Name="LWIP_IPV6_REASS"/>
        <Parameter Name="LWIP_IPV6_SEND_ROUTER_SOLICIT"/>
        <Parameter Name="LWIP_IPV6_AUTOCONFIG"/>
        <Parameter Name="LWIP_IPV6_ADDRESS_LIFETIMES"/>
        <Parameter Name="LWIP_IPV6_DUP_DETECT_ATTEMPTS"/>
        <Parameter Name="LWIP_IPV6_DHCP6"/>
        <Parameter Name="LWIP_IPV6_DHCP6_STATEFUL"/>
        <Parameter Name="LWIP_IPV6_DHCP6_STATELESS"/>
        <Parameter Name="LWIP_DHCP6_GET_NTP_SRV"/>
        <Parameter Name="LWIP_DHCP6_MAX_NTP_SERVERS"/>
        <Parameter Name="LWIP_DHCP6_MAX_DNS_SERVERS"/>
        <Parameter Name="LWIP_ICMP6"/>
        <Parameter Name="LWIP_ICMP6_DATASIZE"/>
        <Parameter Name="LWIP_ICMP6_HL"/>
        <Parameter Name="LWIP_IPV6_MLD"/>
        <Parameter Name="MEMP_NUM_MLD6_GROUP"/>
        <Parameter Name="LWIP_ND6_QUEUEING"/>
        <Parameter Name="MEMP_NUM_ND6_QUEUE"/>
        <Parameter Name="LWIP_ND6_NUM_NEIGHBORS"/>
        <Parameter Name="LWIP_ND6_NUM_DESTINATIONS"/>
        <Parameter Name="LWIP_ND6_NUM_PREFIXES"/>
        <Parameter Name="LWIP_ND6_NUM_ROUTERS"/>
        <Parameter Name="LWIP_ND6_MAX_MULTICAST_SOLICIT"/>
        <Parameter Name="LWIP_ND6_MAX_UNICAST_SOLICIT"/>
        <Parameter Name="LWIP_ND6_MAX_ANYCAST_DELAY_TIME"/>
        <Parameter Name="LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT"/>
        <Parameter Name="LWIP_ND6_REACHABLE_TIME"/>
        <Parameter Name="LWIP_ND6_RETRANS_TIMER"/>
        <Parameter Name="LWIP_ND6_DELAY_FIRST_PROBE_TIME"/>
        <Parameter Name="LWIP_ND6_ALLOW_RA_UPDATES"/>
        <Parameter Name="LWIP_ND6_TCP_REACHABILITY_HINTS"/>
        <Parameter Name="LWIP_ND6_RDNSS_MAX_DNS_SERVERS"/>
        <Parameter Name="LWIP_HTTPD"/>
        <Parameter Name="LWIP_HTTPD_CGI"/>
        <Parameter Name="LWIP_HTTPD_CGI_SSI"/>
        <Parameter Name="LWIP_HTTPD_SSI"/>
        <Parameter Name="LWIP_HTTPD_SSI_RAW"/>
        <Parameter Name="LWIP_HTTPD_SSI_BY_FILE_EXTENSION"/>
        <Parameter Name="LWIP_HTTPD_SUPPORT_POST"/>
        <Parameter Name="LWIP_HTTPD_MAX_CGI_PARAMETERS"/>
        <Parameter Name="LWIP_HTTPD_SSI_MULTIPART"/>
        <Parameter Name="LWIP_HTTPD_MAX_TAG_NAME_LEN"/>
        <Parameter Name="LWIP_HTTPD_MAX_TAG_INSERT_LEN"/>
        <Parameter Name="LWIP_HTTPD_POST_MANUAL_WND"/>
        <Parameter Name="HTTPD_SERVER_AGENT"/>
        <Parameter Name="LWIP_HTTPD_DYNAMIC_HEADERS"/>
        <Parameter Name="HTTPD_USE_MEM_POOL"/>
        <Parameter Name="HTTPD_SERVER_PORT"/>
        <Parameter Name="HTTPD_SERVER_PORT_HTTPS"/>
        <Parameter Name="HTTPD_ENABLE_HTTPS"/>
        <Parameter Name="HTTPD_MAX_RETRIES"/>
        <Parameter Name="HTTPD_POLL_INTERVAL"/>
        <Parameter Name="HTTPD_TCP_PRIO"/>
        <Parameter Name="LWIP_HTTPD_TIMING"/>
        <Parameter Name="LWIP_HTTPD_SUPPORT_EXTSTATUS"/>
        <Parameter Name="LWIP_HTTPD_SUPPORT_V09"/>
        <Parameter Name="LWIP_HTTPD_SUPPORT_11_KEEPALIVE"/>
        <Parameter Name="LWIP_HTTPD_SUPPORT_REQUESTLIST"/>
        <Parameter Name="LWIP_HTTPD_REQ_QUEUELEN"/>
        <Parameter Name="LWIP_HTTPD_REQ_BUFSIZE"/>
        <Parameter Name="LWIP_HTTPD_MAX_REQ_LENGTH"/>
        <Parameter Name="LWIP_HTTPD_MAX_REQUEST_URI_LEN"/>
        <Parameter Name="LWIP_HTTPD_POST_MAX_RESPONSE_URI_LEN"/>
        <Parameter Name="LWIP_HTTPD_SSI_INCLUDE_TAG"/>
        <Parameter Name="LWIP_HTTPD_ABORT_ON_CLOSE_MEM_ERROR"/>
        <Parameter Name="LWIP_HTTPD_KILL_OLD_ON_CONNECTIONS_EXCEEDED"/>
        <Parameter Name="LWIP_HTTPD_OMIT_HEADER_FOR_EXTENSIONLESS_URI"/>
        <Parameter Name="HTTPD_LIMIT_SENDING_TO_2MSS"/>
        <Parameter Name="LWIP_HTTPD_CUSTOM_FILES"/>
        <Parameter Name="LWIP_HTTPD_DYNAMIC_FILE_READ"/>
        <Parameter Name="LWIP_HTTPD_FILE_STATE"/>
        <Parameter Name="HTTPD_PRECALCULATED_CHECKSUM"/>
        <Parameter Name="LWIP_HTTPD_FS_ASYNC_READ"/>
        <Parameter Name="HTTPD_USE_CUSTOM_FSDATA"/>
        <Parameter Name="LWIP_SNMP"/>
        <Parameter Name="SNMP_USE_NETCONN"/>
        <Parameter Name="SNMP_USE_RAW"/>
        <Parameter Name="SNMP_STACK_SIZE"/>
        <Parameter Name="SNMP_THREAD_PRIO"/>
        <Parameter Name="SNMP_TRAP_DESTINATIONS"/>
        <Parameter Name="SNMP_SAFE_REQUESTS"/>
        <Parameter Name="SNMP_MAX_OCTET_STRING_LEN"/>
        <Parameter Name="SNMP_MAX_OBJ_ID_LEN"/>
        <Parameter Name="SNMP_MIN_VALUE_SIZE"/>
        <Parameter Name="SNMP_MAX_VALUE_SIZE"/>
        <Parameter Name="SNMP_COMMUNITY"/>
        <Parameter Name="SNMP_COMMUNITY_WRITE"/>
        <Parameter Name="SNMP_COMMUNITY_TRAP"/>
        <Parameter Name="SNMP_MAX_COMMUNITY_STR_LEN"/>
        <Parameter Name="SNMP_LWIP_MIB2"/>
        <Parameter Name="SNMP_LWIP_MIB2_SYSDESC"/>
        <Parameter Name="SNMP_LWIP_MIB2_SYSNAME"/>
        <Parameter Name="SNMP_LWIP_MIB2_SYSCONTACT"/>
        <Parameter Name="SNMP_LWIP_MIB2_SYSLOCATION"/>
        <Parameter Name="SNMP_LWIP_GETBULK_MAX_REPETITIONS"/>
        <Parameter Name="LWIP_SNMP_V3"/>
        <Parameter Name="LWIP_SNMP_V3_MBEDTLS"/>
        <Parameter Name="LWIP_SNMP_V3_CRYPTO"/>
        <Parameter Name="LWIP_SNMP_CONFIGURE_VERSIONS"/>
        <Parameter Name="LWIP_SNTP"/>
        <Parameter Name="SNTP_MAX_SERVERS"/>
        <Parameter Name="SNTP_GET_SERVERS_FROM_DHCP"/>
        <Parameter Name="SNTP_PORT"/>
        <Parameter Name="SNTP_CHECK_RESPONSE"/>
        <Parameter Name="SNTP_COMP_ROUNDTRIP"/>
        <Parameter Name="SNTP_RECV_TIMEOUT"/>
        <Parameter Name="SNTP_UPDATE_DELAY"/>
        <Parameter Name="SNTP_RETRY_TIMEOUT"/>
        <Parameter Name="SNTP_RETRY_TIMEOUT_MAX"/>
        <Parameter Name="SNTP_RETRY_TIMEOUT_EXP"/>
        <Parameter Name="SNTP_MONITOR_SERVER_REACHABILITY"/>
        <Parameter Name="LWIP_SMTP"/>
        <Parameter Name="SMTP_BODYDH"/>
        <Parameter Name="SMTP_MAX_SERVERNAME_LEN"/>
        <Parameter Name="SMTP_MAX_USERNAME_LEN"/>
        <Parameter Name="SMTP_MAX_PASS_LEN"/>
        <Parameter Name="SMTP_COPY_AUTHDATA"/>
        <Parameter Name="SMTP_CHECK_DATA"/>
        <Parameter Name="SMTP_SUPPORT_AUTH_PLAIN"/>
        <Parameter Name="SMTP_SUPPORT_AUTH_LOGIN"/>
        <Parameter Name="LWIP_MDNS"/>
        <Parameter Name="LWIP_MDNS_RESPONDER"/>
        <Parameter Name="MDNS_MAX_SERVICES"/>
        <Parameter Name="MDNS_RESP_USENETIF_EXTCALLBACK"/>
        <Parameter Name="LWIP_TFTP"/>
        <Parameter Name="TFTP_PORT"/>
        <Parameter Name="TFTP_TIMEOUT_MSECS"/>
        <Parameter Name="TFTP_MAX_RETRIES"/>
        <Parameter Name="TFTP_TIMER_MSECS"/>
        <Parameter Name="TFTP_MAX_FILENAME_LEN"/>
        <Parameter Name="TFTP_MAX_MODE_LEN"/>
        <Parameter Name="LWIP_DISABLE_TCP_SANITY_CHECKS"/>
        <Parameter Name="LWIP_DISABLE_MEMP_SANITY_CHECKS"/>
        <Parameter Name="LWIP_PERF"/>
        <Parameter Name="LWIP_STATS"/>
        <Parameter Name="LWIP_STATS_DISPLAY"/>
        <Parameter Name="LINK_STATS"/>
        <Parameter Name="ETHARP_STATS"/>
        <Parameter Name="IP_STATS"/>
        <Parameter Name="IPFRAG_STATS"/>
        <Parameter Name="ICMP_STATS"/>
        <Parameter Name="IGMP_STATS"/>
        <Parameter Name="UDP_STATS"/>
        <Parameter Name="TCP_STATS"/>
        <Parameter Name="MEM_STATS"/>
        <Parameter Name="MEMP_STATS"/>
        <Parameter Name="SYS_STATS"/>
        <Parameter Name="IP6_STATS"/>
        <Parameter Name="ICMP6_STATS"/>
        <Parameter Name="IP6_FRAG_STATS"/>
        <Parameter Name="MLD6_STATS"/>
        <Parameter Name="ND6_STATS"/>
        <Parameter Name="MIB2_STATS"/>
        <Parameter Name="CHECKSUM_BY_HARDWARE"/>
        <Parameter Name="LWIP_CHECKSUM_CTRL_PER_NETIF"/>
        <Parameter Name="CHECKSUM_GEN_IP"/>
        <Parameter Name="CHECKSUM_GEN_UDP"/>
        <Parameter Name="CHECKSUM_GEN_TCP"/>
        <Parameter Name="CHECKSUM_GEN_ICMP"/>
        <Parameter Name="CHECKSUM_GEN_ICMP6"/>
        <Parameter Name="CHECKSUM_CHECK_IP"/>
        <Parameter Name="CHECKSUM_CHECK_UDP"/>
        <Parameter Name="CHECKSUM_CHECK_TCP"/>
        <Parameter Name="CHECKSUM_CHECK_ICMP"/>
        <Parameter Name="CHECKSUM_CHECK_ICMP6"/>
        <Parameter Name="LWIP_CHECKSUM_ON_COPY"/>
        <Parameter Name="LWIP_DBG_ON"/>
        <Parameter Name="LWIP_DBG_OFF"/>
        <Parameter Name="LWIP_DBG_MIN_LEVEL"/>
        <Parameter Name="LWIP_DBG_TYPES_ON"/>
        <Parameter Name="ETHARP_DEBUG"/>
        <Parameter Name="NETIF_DEBUG"/>
        <Parameter Name="PBUF_DEBUG"/>
        <Parameter Name="API_LIB_DEBUG"/>
        <Parameter Name="API_MSG_DEBUG"/>
        <Parameter Name="SOCKETS_DEBUG"/>
        <Parameter Name="ICMP_DEBUG"/>
        <Parameter Name="IGMP_DEBUG"/>
        <Parameter Name="INET_DEBUG"/>
        <Parameter Name="IP_DEBUG"/>
        <Parameter Name="IP_REASS_DEBUG"/>
        <Parameter Name="RAW_DEBUG"/>
        <Parameter Name="MEM_DEBUG"/>
        <Parameter Name="MEMP_DEBUG"/>
        <Parameter Name="SYS_DEBUG"/>
        <Parameter Name="TIMERS_DEBUG"/>
        <Parameter Name="TCP_DEBUG"/>
        <Parameter Name="TCP_INPUT_DEBUG"/>
        <Parameter Name="TCP_FR_DEBUG"/>
        <Parameter Name="TCP_RTO_DEBUG"/>
        <Parameter Name="TCP_CWND_DEBUG"/>
        <Parameter Name="TCP_WND_DEBUG"/>
        <Parameter Name="TCP_OUTPUT_DEBUG"/>
        <Parameter Name="TCP_RST_DEBUG"/>
        <Parameter Name="TCP_QLEN_DEBUG"/>
        <Parameter Name="UDP_DEBUG"/>
        <Parameter Name="TCPIP_DEBUG"/>
        <Parameter Name="SLIP_DEBUG"/>
        <Parameter Name="DHCP_DEBUG"/>
        <Parameter Name="AUTOIP_DEBUG"/>
        <Parameter Name="DNS_DEBUG"/>
        <Parameter Name="PPP_DEBUG"/>
        <Parameter Name="IP6_DEBUG"/>
        <Parameter Name="DHCP6_DEBUG"/>
        <Parameter Name="HTTPD_DEBUG"/>
        <Parameter Name="HTTPD_DEBUG_TIMING"/>
        <Parameter Name="SNMP_DEBUG"/>
        <Parameter Name="SNMP_MIB_DEBUG"/>
        <Parameter Name="SNTP_DEBUG"/>
        <Parameter Name="SMTP_DEBUG"/>
        <Parameter Name="MDNS_DEBUG"/>
        <Parameter Name="TFTP_DEBUG"/>
        <Parameter Name="LWIP_PROVIDE_ERRNO"/>
        <Parameter Name="LWIP_TESTMODE"/>
        <BspDependency Name="Driver_PHY" Comment="LAN8742" BspIpName="" BspModeName="" Api="BSP_COMPONENT_DRIVER" Component="LAN8742" Semaphore="S_LAN8742"/>
        <BspDependency Name="Driver_PHY" Comment="DP83848" BspIpName="" BspModeName="" Api="BSP_COMPONENT_DRIVER" Component="DP83848" Semaphore="S_DP83848"/>
    </RefMode>
    
    <ModeLogicOperator Name="OR">
        <Mode Name="Activated" UserName="Activated" UserNameCH="启用">
            <Condition Expression="EMAC_Enable" Diagnostic="Active only with EMAC activated" DiagnosticCH="需要先启用EMAC"/>
            <ModeLogicOperator Name="XOR">
                <Mode Name="Activated" UserName="Activated" UserNameCH="启用">
                    <SignalLogicalOp Name="AND">
                        <Signal Name="VS_LWIP"/>
                    </SignalLogicalOp>
                    <Semaphore>S_LWIP</Semaphore>
                </Mode>
            </ModeLogicOperator>
        </Mode>
    </ModeLogicOperator>
    
    <RefSignal Name="VS_LWIP" Virtual="true"/>
</IP>